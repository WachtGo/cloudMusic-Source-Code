{"version":3,"file":"js/677.102d857f.js","mappings":"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","sources":["webpack://music/./src/components/songlist.vue?8bac","webpack://music/src/components/songlist.vue","webpack://music/./src/components/songlist.vue?ed48","webpack://music/./src/components/songlist.vue","webpack://music/./src/views/singerDetail.vue?a6ef","webpack://music/src/views/singerDetail.vue","webpack://music/./src/views/singerDetail.vue?d2d5","webpack://music/./src/views/singerDetail.vue","webpack://music/./src/api/needLogin/musicOperate.js"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',_vm._l((_vm.songlist),function(item,index){return _c('div',{key:item.id,staticClass:\"music-list\"},[_c('div',{staticStyle:{\"width\":\"35px\"}},[_vm._v(_vm._s(index + 1)+\".\")]),_c('div',{staticClass:\"music-list-info\",on:{\"dblclick\":function($event){return _vm.goSongDetails(item)}}},[_c('div',{staticClass:\"music-list-span\"},[_vm._v(_vm._s(item.name))]),_c('div',{staticClass:\"music-list-span\"},[_vm._v(_vm._s(item.ar[0].name))]),_c('div',{staticClass:\"music-list-span music-list-dt\"},[_vm._v(_vm._s(item.dt))])]),_c('div',{staticClass:\"option\"},[_c('span',{on:{\"click\":function($event){return _vm.likeMusic(item.id, true)}}},[_c('i',{staticClass:\"iFont el-icon-star-on iconhover\"})]),_c('span',{on:{\"click\":function($event){return _vm.likeMusic(item.id, false)}}},[_c('i',{staticClass:\"iFont el-icon-star-off iconhover\"})]),_c('span',{on:{\"click\":function($event){return _vm.listenMusic(item)}}},[_c('i',{staticClass:\"el-icon-headset iconhover\"})]),(item.fee == 0 || item.fee == 8)?_c('span',{on:{\"click\":function($event){$event.stopPropagation();return _vm.playMusic(item)}}},[_c('i',{staticClass:\"el-icon-folder-add iconhover\"})]):_vm._e(),(Boolean(item.mv))?_c('span',{on:{\"click\":function($event){$event.stopPropagation();return _vm.playMV(item.mv)}}},[_c('i',{staticClass:\"el-icon-video-camera iconhover\"})]):_vm._e(),(item.fee == 0 || item.fee == 8)?_c('span',{on:{\"click\":function($event){return _vm.getDownloadUrl(item.id, item.name)}}},[_c('i',{staticClass:\"el-icon-download iconhover\"})]):_vm._e()])])}),0)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <div class=\"music-list\" v-for=\"(item, index) in songlist\" :key=\"item.id\">\r\n      <div style=\"width: 35px\">{{ index + 1 }}.</div>\r\n      <div @dblclick=\"goSongDetails(item)\" class=\"music-list-info\">\r\n        <div class=\"music-list-span\">{{ item.name }}</div>\r\n        <div class=\"music-list-span\">{{ item.ar[0].name }}</div>\r\n        <div class=\"music-list-span music-list-dt\">{{ item.dt }}</div>\r\n      </div>\r\n\r\n      <div class=\"option\">\r\n        <!-- 加入我的喜欢 -->\r\n        <span @click=\"likeMusic(item.id, true)\"\r\n          ><i class=\"iFont el-icon-star-on iconhover\"></i\r\n        ></span>\r\n        <!-- 从我的喜欢删除 -->\r\n        <span @click=\"likeMusic(item.id, false)\"\r\n          ><i class=\"iFont el-icon-star-off iconhover\"></i\r\n        ></span>\r\n        <!-- <i class=\"iFont el-icon-star-off\" @click=\"collectPlaylist\"></i> -->\r\n        <!-- 试听 -->\r\n        <span @click=\"listenMusic(item)\"\r\n          ><i class=\"el-icon-headset iconhover\"></i\r\n        ></span>\r\n        <!-- 添加到播放列表 -->\r\n        <span\r\n          v-if=\"item.fee == 0 || item.fee == 8\"\r\n          @click.stop=\"playMusic(item)\"\r\n          ><i class=\"el-icon-folder-add iconhover\"></i>\r\n        </span>\r\n        <!-- 播放MV -->\r\n        <span v-if=\"Boolean(item.mv)\" @click.stop=\"playMV(item.mv)\"\r\n          ><i class=\"el-icon-video-camera iconhover\"></i>\r\n        </span>\r\n        <!-- 下载 -->\r\n        <span\r\n          v-if=\"item.fee == 0 || item.fee == 8\"\r\n          @click=\"getDownloadUrl(item.id, item.name)\"\r\n        >\r\n          <i class=\"el-icon-download iconhover\"></i\r\n        ></span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getDownloadUrl } from \"@/api/api\";\r\nimport { playMusic, listenMusic } from \"@/utils/musicPlay\";\r\nimport { likeMusic } from \"@/api/needLogin/musicOperate\";\r\nimport { download } from \"@/utils/commonApi\";\r\nexport default {\r\n  props: {\r\n    songlist: Array,\r\n  },\r\n  data() {\r\n    return {};\r\n  },\r\n  methods: {\r\n    //获取歌曲详情,进入详情页面\r\n    goSongDetails(songDetails) {\r\n      // console.log('歌曲信息',songDetails)\r\n      this.$router.push({\r\n        name: \"songDetails\",\r\n        params: {\r\n          songDetails: songDetails,\r\n        },\r\n      });\r\n    },\r\n    //加入/删除喜欢音乐\r\n    likeMusic(id, bool) {\r\n      const loading = this.$loading({\r\n        target: \"#app_body\",\r\n        background: \"rgba(255,255,255,0.1)\",\r\n      });\r\n      likeMusic({ id: id, like: bool })\r\n        .then((res) => {\r\n          this.$nextTick(() => {\r\n            loading.close();\r\n          });\r\n          // console.log(\"添加\", res);\r\n          if (res.data.code === 200) {\r\n            if (bool) {\r\n              this.$message.success(\"已添加入我的喜欢-可进入网易云音乐查看\");\r\n              return;\r\n            }\r\n            this.$message.success(\"已从我的喜欢列表删除\");\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          this.$nextTick(() => {\r\n            loading.close();\r\n          });\r\n        });\r\n    },\r\n    //试听音乐\r\n    listenMusic(songDetals) {\r\n      //获取播放音乐链接\r\n      var that = this;\r\n      var list = \"songlist\";\r\n      listenMusic(songDetals, that);\r\n    },\r\n    //添加歌曲到播放列表\r\n    playMusic(songDetals) {\r\n      //获取播放音乐链接\r\n      var that = this;\r\n      var list = \"songlist\";\r\n      playMusic(songDetals, that);\r\n    },\r\n    playMV(mvId) {\r\n      //获取mv播放链接\r\n      this.$router.push({\r\n        name: \"mvPlay\",\r\n        params: { mvId: mvId },\r\n      });\r\n    },\r\n    //获取歌曲下载地址\r\n    getDownloadUrl(songId, songName) {\r\n      var that = this;\r\n      that.$message({\r\n        type: \"success\",\r\n        message: \"正在尝试下载\",\r\n      });\r\n      let params = {\r\n        id: songId,\r\n      };\r\n      getDownloadUrl(params).then((res) => {\r\n        // console.log('歌曲下载地址：', res.data)\r\n        // console.log(\"歌曲下载地址：\", res.data.data.url);\r\n        // download(res.data.data.url, songName)\r\n        download(res.data.data[0].url, songName);\r\n        that.$message({\r\n          type: \"success\",\r\n          message: \"开始下载了\",\r\n        });\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" >\r\n.music-list {\r\n  position: relative;\r\n  display: flex;\r\n  align-content: center;\r\n  justify-content: space-around;\r\n  margin: 5px auto 5px;\r\n  padding: 0 15px;\r\n  width: 96%;\r\n  //   height: 30px;\r\n  //   line-height: 30px;\r\n  overflow: hidden;\r\n  color: rgba(255, 255, 255, 1);\r\n  font-weight: bolder;\r\n  border-radius: 5px;\r\n  -o-text-overflow: ellipsis;\r\n  text-overflow: ellipsis;\r\n  background-color: rgba(99, 187, 162, 0.044);\r\n  border-radius: 15px;\r\n  transition: 0.2s;\r\n\r\n  .music-list-index {\r\n    position: absolute;\r\n    left: 0;\r\n    width: 5%;\r\n  }\r\n  .music-list-info {\r\n    display: flex;\r\n    align-content: center;\r\n    justify-content: space-between;\r\n    width: 70%;\r\n\r\n    .music-list-span,\r\n    .music-list-dt {\r\n      text-align: center;\r\n      overflow: hidden;\r\n      text-overflow: ellipsis;\r\n      white-space: nowrap;\r\n    }\r\n    .music-list-span {\r\n      width: 40%;\r\n    }\r\n    .music-list-dt {\r\n      width: 25%;\r\n      // font-size:13px;\r\n      text-align: center;\r\n      overflow: hidden;\r\n      text-overflow: ellipsis;\r\n      white-space: nowrap;\r\n    }\r\n  }\r\n\r\n  .option {\r\n    display: inline-block;\r\n    margin-left: 2%;\r\n    width: 15%;\r\n    box-sizing: border-box;\r\n\r\n    span {\r\n      display: inline-block;\r\n      width: 15%;\r\n      &:hover {\r\n        cursor: pointer;\r\n      }\r\n    }\r\n  }\r\n\r\n  &:hover {\r\n    color: rgb(88, 255, 241);\r\n    transform: scale(1.01);\r\n    // background: rgba(141, 251, 255, 0.192);\r\n  }\r\n}\r\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./songlist.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./songlist.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./songlist.vue?vue&type=template&id=5a495be8&\"\nimport script from \"./songlist.vue?vue&type=script&lang=js&\"\nexport * from \"./songlist.vue?vue&type=script&lang=js&\"\nimport style0 from \"./songlist.vue?vue&type=style&index=0&id=5a495be8&prod&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"list-wrap\"},[_c('div',{staticClass:\"pageName\"},[_vm._v(\"歌手详情\")]),_c('div',{staticClass:\"descript\"}),_c('div',[_c('div',{staticClass:\"ul\"},[_c('div',{staticClass:\"details\"},[_c('div',{staticClass:\"details-img\"},[_c('img',{attrs:{\"src\":_vm.artist.img1v1Url,\"alt\":\"\"}})]),_c('div',{staticClass:\"detailsRight\"},[_c('div',{staticStyle:{\"margin-left\":\"0px\",\"text-align\":\"left\",\"font-size\":\"20px\"}},[_vm._v(\" \"+_vm._s(_vm.artist.name)+\" \")]),_c('div',{staticStyle:{\"font-size\":\"14px\"}},[_c('div',{staticClass:\"aliasClass\"},[(_vm.artist.alias[0])?_c('span',{staticClass:\"playListNickName\"},[_vm._v(_vm._s(_vm.artist.alias[0]))]):_vm._e(),(_vm.artist.alias[1])?_c('span',{staticClass:\"playListNickName\"},[_vm._v(\"-\")]):_vm._e(),_c('span',{staticClass:\"playListNickName2\"},[_vm._v(_vm._s(_vm.artist.alias[1]))]),_vm._m(0)]),_c('div',{staticClass:\"option\"},[_c('div',{staticClass:\"flexBetween\"},[_c('span',{staticClass:\"inline-block\",on:{\"click\":function($event){return _vm.getSingerSongList('songSwitch')}}},[_vm._v(\"歌曲：\"),_c('span',{staticClass:\"musicSize\"},[_vm._v(_vm._s(_vm.artist.musicSize))])]),_c('span',{staticClass:\"inline-block\",on:{\"click\":function($event){return _vm.getSingerAlbum('albumSwitch')}}},[_vm._v(\"专辑：\"),_c('span',{staticClass:\"musicSize\"},[_vm._v(_vm._s(_vm.artist.albumSize))])]),_c('span',{staticClass:\"inline-block\",on:{\"click\":function($event){return _vm.getSingerMvList('mvSwitch')}}},[_vm._v(\"MV：\"),_c('span',{staticClass:\"musicSize\"},[_vm._v(_vm._s(_vm.artist.mvSize))])])])])])])]),(_vm.tagSwitch.detailSwitch)?_c('div',{staticClass:\"singerDetail\"},[_c('div',{staticStyle:{\"font-size\":\"15px\"}},[_vm._v(\"简介：\")]),(_vm.artist.briefDesc === '')?_c('div',{staticClass:\"loading\"},[_c('i',{staticClass:\"el-icon-loading\"})]):_vm._e(),_c('p',{staticClass:\"briefDesc\"},[_vm._v(\" \"+_vm._s(_vm.artist.briefDesc)+\" \")])]):_vm._e(),(_vm.tagSwitch.songSwitch)?_c('div',{attrs:{\"id\":\"singleSongs\"}},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.songList.length === 0),expression:\"songList.length === 0\"}],staticClass:\"loading\"},[_c('i',{staticClass:\"el-icon-loading\"})]),(_vm.songList.length !== 0)?_c('div',[_c('ul',{staticClass:\"song-album-wrap\"},[_c('songlist',{attrs:{\"songlist\":_vm.songList}})],1),_c('div',{staticClass:\"pagination\"},[_c('el-pagination',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.artist.musicSize > 30),expression:\"artist.musicSize > 30\"}],attrs:{\"current-page\":_vm.songcurrentPage,\"page-size\":30,\"layout\":\"prev, pager, next, jumper\",\"total\":_vm.artist.musicSize,\"background\":true},on:{\"current-change\":_vm.songHandleCurrentChange,\"update:currentPage\":function($event){_vm.songcurrentPage=$event},\"update:current-page\":function($event){_vm.songcurrentPage=$event}}})],1)]):_vm._e()]):_vm._e(),(_vm.tagSwitch.albumSwitch)?_c('div',{attrs:{\"id\":\"albumList\"}},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.albumList.length === 0),expression:\"albumList.length === 0\"}],staticClass:\"loading\"},[_c('i',{staticClass:\"el-icon-loading\"})]),(_vm.albumList.length !== 0)?_c('div',[_c('ul',{staticClass:\"song-album-wrap\"},_vm._l((_vm.albumList),function(item,index){return _c('li',{key:index,staticClass:\"liWrap\",on:{\"click\":function($event){return _vm.goAlbumDetail(item.id)}}},[_c('div',{staticClass:\"liWrap-block1\"},[_c('img',{attrs:{\"src\":item.blurPicUrl,\"alt\":\"\"}})]),_c('div',{staticClass:\"liWrap-block2\"},[_c('div',{staticClass:\"div1\"},[_c('span',{staticClass:\"albumName\"},[_vm._v(_vm._s(item.name)+\" \"),(item.alias[0])?_c('span',{staticClass:\"albumName2\"},[_vm._v(_vm._s(item.alias[0]))]):_vm._e()])]),_c('div',[_c('div',{staticClass:\"divOther\"}),_c('span',{staticClass:\"inline-block\",staticStyle:{\"display\":\"inline-block\",\"width\":\"50px\"}}),_c('div',{staticClass:\"divOther\",staticStyle:{\"width\":\"100px\"}},[_vm._v(\" 歌曲：\"),_c('span',[_vm._v(_vm._s(item.size))])])])])])}),0),_c('div',{staticClass:\"pagination\"},[_c('el-pagination',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.artist.albumSize > 6),expression:\"artist.albumSize > 6\"}],attrs:{\"current-page\":_vm.albumcurrentPage,\"page-size\":6,\"layout\":\"prev, pager, next, jumper\",\"total\":_vm.artist.albumSize,\"background\":true},on:{\"current-change\":_vm.albumHandleCurrentChange,\"update:currentPage\":function($event){_vm.albumcurrentPage=$event},\"update:current-page\":function($event){_vm.albumcurrentPage=$event}}})],1)]):_vm._e()]):_vm._e(),(_vm.tagSwitch.mvSwitch)?_c('div',{attrs:{\"id\":\"singerMvs\"}},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.mvList.length === 0),expression:\"mvList.length === 0\"}],staticClass:\"loading\"},[_c('i',{staticClass:\"el-icon-loading\"})]),(_vm.mvList.length !== 0)?_c('div',[_c('ul',{staticClass:\"videoPlaywrap\"},_vm._l((_vm.mvList),function(item,index){return _c('li',{key:index,staticClass:\"videoPlayList\"},[_c('div',{staticClass:\"videoImage\"},[_c('img',{staticClass:\"videoImg\",staticStyle:{\"position\":\"absolute\",\"width\":\"240px\",\"height\":\"155px\",\"border-radius\":\"10px\"},attrs:{\"src\":item.imgurl16v9,\"alt\":\"\",\"title\":\"\"},on:{\"click\":function($event){return _vm.playMV(item.id)}}}),_c('span',{staticClass:\"videoPlayTime\"},[_c('i',{staticClass:\"el-icon-video-play\",staticStyle:{\"margin-right\":\"1px\"}}),_vm._v(_vm._s(item.playCount))]),_c('span',{staticClass:\"videoPlayTime\",staticStyle:{\"bottom\":\"0\"}},[_vm._v(_vm._s(item.duration))])]),_c('p',{staticClass:\"List-title\",staticStyle:{\"font-size\":\"10px\"}},[_c('span',{staticStyle:{\"display\":\"inline-block\",\"width\":\"100%\",\"overflow\":\"hidden\",\"white-space\":\"nowrap\",\"text-overflow\":\"ellipsis\"}},[(!item.type)?_c('span',{staticStyle:{\"color\":\"red\"}},[_vm._v(\"MV \")]):_vm._e(),_vm._v(_vm._s(item.name))]),_c('br'),_c('span',{staticStyle:{\"color\":\"rgb(199, 199, 199)\"}},[_c('span',[_vm._v(\"by \")]),_c('span',[_vm._v(_vm._s(item.artistName))])])])])}),0),_c('div',{staticClass:\"pagination\"},[_c('el-pagination',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.artist.mvSize > 8),expression:\"artist.mvSize > 8\"}],attrs:{\"current-page\":_vm.mvcurrentPage,\"page-size\":8,\"layout\":\"prev, pager, next, jumper\",\"total\":_vm.artist.mvSize,\"background\":true},on:{\"current-change\":_vm.mvHandleCurrentChange,\"update:currentPage\":function($event){_vm.mvcurrentPage=$event},\"update:current-page\":function($event){_vm.mvcurrentPage=$event}}})],1)]):_vm._e()]):_vm._e()])])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',[_c('br'),_c('span',{staticStyle:{\"color\":\"antiquewhite\"}})])}]\n\nexport { render, staticRenderFns }","\r\n<template>\r\n  <div class=\"list-wrap\">\r\n    <div class=\"pageName\">歌手详情</div>\r\n    <div class=\"descript\"></div>\r\n    <div>\r\n      <div class=\"ul\">\r\n        <div class=\"details\">\r\n          <div class=\"details-img\">\r\n            <img :src=\"artist.img1v1Url\" alt=\"\" />\r\n          </div>\r\n          <div class=\"detailsRight\">\r\n            <div style=\"margin-left: 0px; text-align: left; font-size: 20px\">\r\n              {{ artist.name }}\r\n            </div>\r\n            <div style=\"font-size: 14px\">\r\n              <div class=\"aliasClass\">\r\n                <span class=\"playListNickName\" v-if=\"artist.alias[0]\">{{\r\n                  artist.alias[0]\r\n                }}</span>\r\n                <span class=\"playListNickName\" v-if=\"artist.alias[1]\">-</span\r\n                ><span class=\"playListNickName2\">{{ artist.alias[1] }}</span\r\n                ><span\r\n                  ><br />\r\n                  <span style=\"color: antiquewhite\"></span\r\n                ></span>\r\n              </div>\r\n\r\n              <div class=\"option\">\r\n                <div class=\"flexBetween\">\r\n                  <span\r\n                    class=\"inline-block\"\r\n                    @click=\"getSingerSongList('songSwitch')\"\r\n                    >歌曲：<span class=\"musicSize\">{{\r\n                      artist.musicSize\r\n                    }}</span></span\r\n                  >\r\n                  <span\r\n                    class=\"inline-block\"\r\n                    @click=\"getSingerAlbum('albumSwitch')\"\r\n                    >专辑：<span class=\"musicSize\">{{ artist.albumSize }}</span>\r\n                  </span>\r\n                  <span\r\n                    class=\"inline-block\"\r\n                    @click=\"getSingerMvList('mvSwitch')\"\r\n                    >MV：<span class=\"musicSize\">{{ artist.mvSize }}</span>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"singerDetail\" v-if=\"tagSwitch.detailSwitch\">\r\n          <div style=\"font-size: 15px\">简介：</div>\r\n          <div v-if=\"artist.briefDesc === ''\" class=\"loading\">\r\n            <i class=\"el-icon-loading\"></i>\r\n          </div>\r\n          <p class=\"briefDesc\">\r\n            {{ artist.briefDesc }}\r\n          </p>\r\n        </div>\r\n        <div id=\"singleSongs\" v-if=\"tagSwitch.songSwitch\">\r\n          <!-- <h3>\r\n            歌曲：{{ songCount }}\r\n            &nbsp;&nbsp;&nbsp;&nbsp;\r\n            <span style=\"font-size：10px;\"></span>\r\n          </h3> -->\r\n          <div class=\"loading\" v-show=\"songList.length === 0\">\r\n            <i class=\"el-icon-loading\"></i>\r\n          </div>\r\n          <div v-if=\"songList.length !== 0\">\r\n            <ul class=\"song-album-wrap\">\r\n              <songlist :songlist=\"songList\"></songlist>\r\n            </ul>\r\n            <div class=\"pagination\">\r\n              <el-pagination\r\n                v-show=\"artist.musicSize > 30\"\r\n                @current-change=\"songHandleCurrentChange\"\r\n                :current-page.sync=\"songcurrentPage\"\r\n                :page-size=\"30\"\r\n                layout=\"prev, pager, next, jumper\"\r\n                :total=\"artist.musicSize\"\r\n                :background=\"true\"\r\n              >\r\n              </el-pagination>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div id=\"albumList\" v-if=\"tagSwitch.albumSwitch\">\r\n          <div class=\"loading\" v-show=\"albumList.length === 0\">\r\n            <i class=\"el-icon-loading\"></i>\r\n          </div>\r\n          <div v-if=\"albumList.length !== 0\">\r\n            <ul class=\"song-album-wrap\">\r\n              <li\r\n                class=\"liWrap\"\r\n                v-for=\"(item, index) in albumList\"\r\n                :key=\"index\"\r\n                @click=\"goAlbumDetail(item.id)\"\r\n              >\r\n                <div class=\"liWrap-block1\">\r\n                  <img :src=\"item.blurPicUrl\" alt=\"\" />\r\n                </div>\r\n                <div class=\"liWrap-block2\">\r\n                  <div class=\"div1\">\r\n                    <span class=\"albumName\"\r\n                      >{{ item.name }}\r\n                      <span v-if=\"item.alias[0]\" class=\"albumName2\">{{\r\n                        item.alias[0]\r\n                      }}</span></span\r\n                    >\r\n                  </div>\r\n                  <div>\r\n                    <div class=\"divOther\">\r\n                      <!-- 作者：<span>{{ item.artist.name }}</span> -->\r\n                    </div>\r\n                    <span\r\n                      class=\"inline-block\"\r\n                      style=\"display: inline-block; width: 50px\"\r\n                    ></span>\r\n                    <div class=\"divOther\" style=\"width: 100px\">\r\n                      歌曲：<span>{{ item.size }}</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            </ul>\r\n            <div class=\"pagination\">\r\n              <el-pagination\r\n                v-show=\"artist.albumSize > 6\"\r\n                @current-change=\"albumHandleCurrentChange\"\r\n                :current-page.sync=\"albumcurrentPage\"\r\n                :page-size=\"6\"\r\n                layout=\"prev, pager, next, jumper\"\r\n                :total=\"artist.albumSize\"\r\n                :background=\"true\"\r\n              >\r\n              </el-pagination>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div id=\"singerMvs\" v-if=\"tagSwitch.mvSwitch\">\r\n          <!-- <h3 style=\"margin: 0 auto\">\r\n            MV：{{ mvList.length }}&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-size：10px;\"></span>\r\n          </h3> -->\r\n          <div class=\"loading\" v-show=\"mvList.length === 0\">\r\n            <i class=\"el-icon-loading\"></i>\r\n          </div>\r\n          <div v-if=\"mvList.length !== 0\">\r\n            <ul class=\"videoPlaywrap\">\r\n              <li\r\n                class=\"videoPlayList\"\r\n                v-for=\"(item, index) in mvList\"\r\n                :key=\"index\"\r\n              >\r\n                <div class=\"videoImage\">\r\n                  <img\r\n                    class=\"videoImg\"\r\n                    style=\"\r\n                      position: absolute;\r\n                      width: 240px;\r\n                      height: 155px;\r\n                      border-radius: 10px;\r\n                    \"\r\n                    :src=\"item.imgurl16v9\"\r\n                    alt=\"\"\r\n                    title=\"\"\r\n                    @click=\"playMV(item.id)\"\r\n                  />\r\n                  <span class=\"videoPlayTime\"\r\n                    ><i class=\"el-icon-video-play\" style=\"margin-right: 1px\"></i\r\n                    >{{ item.playCount }}</span\r\n                  >\r\n                  <span class=\"videoPlayTime\" style=\"bottom: 0\">{{\r\n                    item.duration\r\n                  }}</span>\r\n                </div>\r\n\r\n                <p class=\"List-title\" style=\"font-size: 10px\">\r\n                  <span\r\n                    style=\"\r\n                      display: inline-block;\r\n                      width: 100%;\r\n                      overflow: hidden;\r\n                      white-space: nowrap;\r\n                      text-overflow: ellipsis;\r\n                    \"\r\n                    ><span v-if=\"!item.type\" style=\"color: red\">MV&nbsp;</span\r\n                    >{{ item.name }}</span\r\n                  ><br />\r\n                  <span style=\"color: rgb(199, 199, 199)\"\r\n                    ><span>by&nbsp;</span>\r\n                    <span>{{ item.artistName }}</span></span\r\n                  >\r\n                </p>\r\n              </li>\r\n            </ul>\r\n            <div class=\"pagination\">\r\n              <el-pagination\r\n                v-show=\"artist.mvSize > 8\"\r\n                @current-change=\"mvHandleCurrentChange\"\r\n                :current-page.sync=\"mvcurrentPage\"\r\n                :page-size=\"8\"\r\n                layout=\"prev, pager, next, jumper\"\r\n                :total=\"artist.mvSize\"\r\n                :background=\"true\"\r\n              >\r\n              </el-pagination>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  getDownloadUrl,\r\n  getSingerDetail,\r\n  // getSingerDesc,\r\n  getSingerSongList,\r\n  getSingerMvList,\r\n  getSingerAlbum,\r\n} from \"@/api/api\";\r\nimport { transMusicTime, transPlayCount, download } from \"@/utils/commonApi\";\r\nimport songlist from \"@/components/songlist.vue\";\r\nexport default {\r\n  components: {\r\n    songlist,\r\n  },\r\n  // props: ['artist.id'],\r\n  data() {\r\n    return {\r\n      //歌手信息\r\n      artist: {\r\n        alias: [],\r\n        musicSize: \"\",\r\n        id: \"\",\r\n        img1v1Url: \"\",\r\n        name: \"\",\r\n        alias: [\"\", \"\"],\r\n        musicSize: \"\",\r\n        albumSize: \"\",\r\n        mvSize: \"\",\r\n        briefDesc: \"\",\r\n      },\r\n      songList: [],\r\n      albumList: [],\r\n      mvList: [],\r\n      tagSwitch: {\r\n        detailSwitch: true,\r\n        songSwitch: false,\r\n        albumSwitch: false,\r\n        mvSwitch: false,\r\n      },\r\n\r\n      songcurrentPage: 1,\r\n      albumcurrentPage: 1,\r\n      mvcurrentPage: 1,\r\n    };\r\n  },\r\n  created() {\r\n    // 判断路由传入了歌手信息还是歌手id\r\n    if (this.$route.params.artist) {\r\n      //路由传入的是歌手详情\r\n      this.artist = this.$route.params.artist;\r\n      this.getSingerDetail(this.$route.params.artist.id);\r\n    } else {\r\n      //当路由传入的是id时\r\n      this.$route.params.id\r\n        ? //传入id，把之前的缓存清掉\r\n          this.getSingerDetail(this.$route.params.id)\r\n        : (this.artist = JSON.parse(localStorage.getItem(\"artist\"))); //刷新页面会走向这，可以直接从缓存获取\r\n    }\r\n  },\r\n  methods: {\r\n    //显示歌手单曲、专辑、mv列表开关\r\n    switchChange(tag) {\r\n      var that = this;\r\n      for (let key in that.tagSwitch) {\r\n        if (key != tag) {\r\n          that.tagSwitch[key] = false;\r\n        }\r\n      }\r\n      that.tagSwitch[tag] = true;\r\n    },\r\n    //获取歌手详情\r\n    getSingerDetail(id) {\r\n      // id:4292 李荣浩\r\n      getSingerDetail({ id: id })\r\n        .then(async (res) => {\r\n          if (res.data.code === 200) {\r\n            this.artist = await res.data.artist;\r\n            // console.log(\"歌手详情--\", res.data.artist);\r\n            localStorage.setItem(\"artist\", JSON.stringify(res.data.artist));\r\n          }\r\n        })\r\n        .catch((res) => {});\r\n    },\r\n    //获取歌手单曲列表\r\n    getSingerSongList(tag) {\r\n      var that = this;\r\n      let params = {\r\n        id: that.artist.id,\r\n        limit: 30,\r\n        offset: (that.songcurrentPage - 1) * 30,\r\n      };\r\n      that.detailShow = false;\r\n      that.songList = [];\r\n      getSingerSongList(params).then(async (res) => {\r\n        // console.log('歌手单曲列表：', res.data)\r\n        that.songList = await res.data.songs;\r\n        // that.songCount = res.data.total\r\n        //给每首曲子添加防抖\r\n        for (let item of that.songList) {\r\n          that.$set(item, \"timer\", true);\r\n        }\r\n        //转换时间\r\n        let dt = \"dt\";\r\n        transMusicTime(that.songList, dt);\r\n      });\r\n      that.switchChange(tag);\r\n    },\r\n    //获取歌手专辑列表\r\n    getSingerAlbum(tag) {\r\n      var that = this;\r\n\r\n      let params = {\r\n        id: that.artist.id,\r\n        limit: 6,\r\n        offset: (that.albumcurrentPage - 1) * 6,\r\n      };\r\n      that.detailShow = false;\r\n      that.albumList = [];\r\n      getSingerAlbum(params).then((res) => {\r\n        // console.log(\"歌手专辑列表\", res.data.hotAlbums);\r\n        that.albumList = res.data.hotAlbums;\r\n      });\r\n\r\n      that.switchChange(tag);\r\n    },\r\n    //获取歌手mv\r\n    getSingerMvList(tag) {\r\n      var that = this;\r\n      let params = {\r\n        id: that.artist.id,\r\n        limit: 8,\r\n        offset: (that.mvcurrentPage - 1) * 8,\r\n      };\r\n      that.mvList = [];\r\n      getSingerMvList(params).then(async (res) => {\r\n        // console.log(\"获取到的歌手MV：\", res.data.mvs);\r\n        that.mvList = await res.data.mvs;\r\n        // 转换时间单位\r\n        transMusicTime(that.mvList, \"duration\");\r\n        //转换播放量单位\r\n        transPlayCount(that.mvList, \"playCount\");\r\n      });\r\n      that.switchChange(tag);\r\n    },\r\n    ////获取歌手描述\r\n    // getSingerDesc() {\r\n    //   // console.log(Boolean(this.artist))\r\n    //   var that = this;\r\n    //   let params = {\r\n    //     id: that.artist.id,\r\n    //   };\r\n    //   getSingerDesc(params).then((res) => {\r\n    //     console.log(\"歌手描述\", res.data);\r\n    //     that.artist = res.data.artist;\r\n    //   });\r\n    // },\r\n\r\n    //跳转到专辑详情\r\n    goAlbumDetail(albumId) {\r\n      this.$router.push({\r\n        name: \"albumDetail\",\r\n        params: {\r\n          albumId: albumId,\r\n        },\r\n      });\r\n    },\r\n    //跳转到播放MV页面\r\n    playMV(mvId) {\r\n      //获取mv播放链接\r\n      this.$router.push({\r\n        name: \"mvPlay\",\r\n        params: { mvId: mvId },\r\n      });\r\n    },\r\n\r\n    //歌手歌曲分页\r\n    songHandleCurrentChange: function (currentPage) {\r\n      // console.log(`当前页: ${currentPage}`);\r\n      var that = this;\r\n      that.songcurrentPage = currentPage;\r\n      that.getSingerSongList(\"songSwitch\");\r\n    },\r\n    //歌手专辑分页\r\n    albumHandleCurrentChange: function (currentPage) {\r\n      // console.log(`当前页: ${currentPage}`);\r\n      var that = this;\r\n      that.albumcurrentPage = currentPage;\r\n      that.getSingerAlbum(\"albumSwitch\");\r\n    },\r\n    // 歌手mv分页\r\n    mvHandleCurrentChange: function (currentPage) {\r\n      // console.log(`当前页: ${currentPage}`);\r\n      var that = this;\r\n      that.mvcurrentPage = currentPage;\r\n      that.getSingerMvList(\"mvSwitch\");\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.descript {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  color: aliceblue;\r\n  font-weight: bolder;\r\n  padding: 10px 20px;\r\n  border-radius: 20px 20px 0 0;\r\n  background: rgba(95, 158, 160, 0.11);\r\n  box-sizing: border-box;\r\n}\r\n\r\n.list-wrap {\r\n  margin: 10px auto 0;\r\n  padding: 0 20px 10px;\r\n  width: 1120px;\r\n  height: 720px;\r\n  border-radius: 20px;\r\n  background: rgba(95, 158, 160, 0.11);\r\n  box-sizing: border-box;\r\n\r\n  .ul {\r\n    height: 650px;\r\n    border-radius: 0 0 10px 10px;\r\n    background: rgba(95, 158, 160, 0.11);\r\n    // overflow-x: hidden;\r\n\r\n    // &::-webkit-scrollbar {\r\n    //   display: none;\r\n    // }\r\n    .details {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      margin: 0 auto 10px;\r\n      padding: 10px;\r\n      width: 96%;\r\n      height: 170px;\r\n      // border: 1px solid rgb(97, 226, 183);\r\n      border-radius: 10px;\r\n      background: rgba(95, 158, 160, 0.11);\r\n      box-sizing: border-box;\r\n\r\n      .details-img {\r\n        display: inline-block;\r\n        // width: 180px;\r\n        // height: 180px;\r\n        border-radius: 10px;\r\n\r\n        img {\r\n          width: 150px;\r\n          height: 150px;\r\n          border-radius: 10px;\r\n          transition: 0.2s;\r\n\r\n          &:hover {\r\n            transform: scale(1.03);\r\n          }\r\n        }\r\n      }\r\n\r\n      .detailsRight {\r\n        position: relative;\r\n        width: 820px;\r\n        height: 150px;\r\n        // background: rgb(181, 209, 152);\r\n\r\n        .option {\r\n          position: absolute;\r\n          bottom: 0;\r\n\r\n          .flexBetween {\r\n            .inline-block {\r\n              display: inline-block;\r\n              margin-right: 40px;\r\n              transition: 0.2s;\r\n\r\n              .musicSize {\r\n                color: rgb(193, 243, 226);\r\n                transition: 0.2s;\r\n\r\n                &:hover {\r\n                  color: rgb(109, 247, 201);\r\n                }\r\n              }\r\n\r\n              &:hover {\r\n                cursor: pointer;\r\n                // color: rgb(246, 255, 119);\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        .songTns {\r\n          width: 100%;\r\n          font-size: 14px;\r\n          overflow-x: hidden;\r\n\r\n          &::-webkit-scrollbar {\r\n            display: none;\r\n          }\r\n        }\r\n\r\n        .aliasClass {\r\n          position: absolute;\r\n          top: 69px;\r\n        }\r\n\r\n        .playListNickName,\r\n        .playListNickName2 {\r\n        }\r\n\r\n        .playListNickName {\r\n          display: inline-block;\r\n          margin-right: 20px;\r\n        }\r\n\r\n        .musicSize {\r\n          color: rgb(170, 240, 240);\r\n        }\r\n      }\r\n    }\r\n\r\n    .music-list {\r\n      display: flex;\r\n      padding: 10px 10px;\r\n      width: 1080px;\r\n      overflow: hidden;\r\n      color: rgba(255, 255, 255, 1);\r\n      font-weight: bolder;\r\n      -o-text-overflow: ellipsis;\r\n      text-overflow: ellipsis;\r\n      // background: rgba(95, 158, 160, 0.322);\r\n      transition: 0.2s;\r\n\r\n      .music-list-span {\r\n        display: inline-block;\r\n        width: 270px;\r\n        text-align: center;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n        white-space: nowrap;\r\n      }\r\n\r\n      .option {\r\n        display: inline-block;\r\n        width: 250px;\r\n        text-align: center;\r\n\r\n        span {\r\n          display: inline-block;\r\n          width: 30px;\r\n\r\n          &:hover {\r\n            cursor: pointer;\r\n          }\r\n        }\r\n      }\r\n\r\n      &:hover {\r\n        background: rgba(76, 152, 155, 0.527);\r\n      }\r\n    }\r\n  }\r\n\r\n  #albumList {\r\n    // width: 96%;\r\n    margin: 10 auto;\r\n    padding: 10px 20px;\r\n    width: 98%;\r\n    height: 460px;\r\n    border-radius: 10px;\r\n    background: rgba(95, 158, 160, 0.11);\r\n    box-sizing: border-box;\r\n    overflow: hidden;\r\n\r\n    // overflow-x: hidden;\r\n    // &::-webkit-scrollbar {\r\n    //   display: none;\r\n    // }\r\n    .liWrap {\r\n      display: flex;\r\n      justify-content: space-around;\r\n      margin: 0 auto 10px;\r\n      padding: 0 10px;\r\n      // width: 95%;\r\n      height: 60px;\r\n      border-radius: 12px;\r\n      background: rgba(95, 158, 160, 0.11);\r\n      box-sizing: border-box;\r\n      transition: 0.2s;\r\n\r\n      &:hover {\r\n        transform: scale(1.01);\r\n      }\r\n\r\n      .liWrap-block1 {\r\n        width: 60px;\r\n        height: 60px;\r\n        border-radius: 10px;\r\n        // background-color: rgba(178, 244, 151, 1);\r\n        transition: 0.2s;\r\n\r\n        img {\r\n          width: 100%;\r\n          height: 100%;\r\n          border-radius: 10px;\r\n        }\r\n\r\n        &:hover {\r\n          transform: scale(1.05);\r\n          cursor: pointer;\r\n        }\r\n      }\r\n\r\n      .liWrap-block2 {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        padding: 10px;\r\n        width: 920px;\r\n        height: 60px;\r\n        font-size: 15px;\r\n        border-radius: 10px;\r\n        line-height: 40px;\r\n        box-sizing: border-box;\r\n        // background-color: rgba(226, 214, 156, 0.075);\r\n        transition: 0.2s;\r\n\r\n        span {\r\n          &:hover {\r\n            color: rgba(109, 255, 255, 0.753);\r\n          }\r\n        }\r\n\r\n        .div1 {\r\n          display: inline-block;\r\n          width: 520px;\r\n          text-overflow: ellipsis;\r\n          overflow: hidden;\r\n          white-space: nowrap;\r\n\r\n          .albumName {\r\n            display: inline-block;\r\n            max-width: 500px;\r\n            text-overflow: ellipsis;\r\n            overflow: hidden;\r\n            white-space: nowrap;\r\n            color: rgb(196, 255, 250);\r\n            transition: 0.2s;\r\n\r\n            span {\r\n              &:hover {\r\n                color: rgba(97, 252, 252, 0.979);\r\n              }\r\n            }\r\n\r\n            &:hover {\r\n              color: rgba(97, 252, 252, 0.979);\r\n            }\r\n          }\r\n\r\n          &:hover {\r\n            color: rgba(97, 252, 252, 0.979);\r\n          }\r\n        }\r\n\r\n        .divOther {\r\n          display: inline-block;\r\n          width: 200px;\r\n          overflow: hidden;\r\n          text-overflow: ellipsis;\r\n          white-space: nowrap;\r\n          // text-align: left;\r\n          margin-right: 5px;\r\n\r\n          span {\r\n            color: rgb(196, 255, 250);\r\n            transition: 0.2s;\r\n\r\n            &:hover {\r\n              color: rgba(97, 252, 252, 0.979);\r\n            }\r\n          }\r\n        }\r\n\r\n        &:hover {\r\n          // color: rgba(97, 252, 252, 0.979);\r\n          transform: scale(1.01);\r\n          cursor: pointer;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .singerDetail {\r\n    margin: 0 auto;\r\n    padding: 10px;\r\n    width: 96%;\r\n    height: 420px;\r\n    border-radius: 10px;\r\n    background: rgba(95, 158, 160, 0.11);\r\n    box-sizing: border-box;\r\n\r\n    .briefDesc {\r\n      text-indent: 2em;\r\n    }\r\n  }\r\n\r\n  #singleSongs {\r\n    margin: 0 auto;\r\n    padding: 0px 10px 20px;\r\n    width: 96%;\r\n    height: 460px;\r\n    border-radius: 10px;\r\n    background: rgba(95, 158, 160, 0.05);\r\n    box-sizing: border-box;\r\n    overflow: hidden;\r\n    // overflow-x: hidden;\r\n\r\n    // &::-webkit-scrollbar {\r\n    //   display: none;\r\n    // }\r\n\r\n    .SingsList {\r\n      position: relative;\r\n      display: flex;\r\n      justify-content: space-between;\r\n      margin: 5px auto;\r\n      width: 100%;\r\n      height: 30px;\r\n      line-height: 30px;\r\n      padding: 0 10px;\r\n      background-color: rgba(99, 187, 162, 0.144);\r\n      border-radius: 15px;\r\n      box-sizing: border-box;\r\n      line-height: 30px;\r\n      transition: 0.2s;\r\n\r\n      .song-list {\r\n        display: inline-block;\r\n        text-align: center;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n        white-space: nowrap;\r\n      }\r\n\r\n      .song-list-option {\r\n        position: absolute;\r\n        width: 130px;\r\n        right: 10px;\r\n\r\n        span {\r\n          display: inline-block;\r\n          margin: 0 5px;\r\n          transition: 0.2s;\r\n\r\n          &:hover {\r\n            color: bisque;\r\n            cursor: pointer;\r\n          }\r\n        }\r\n      }\r\n\r\n      &:hover {\r\n        color: aqua;\r\n        transform: scale(1.01);\r\n      }\r\n    }\r\n  }\r\n\r\n  #singerMvs {\r\n    margin: 0 auto;\r\n    padding: 0px 10px 20px;\r\n    width: 96%;\r\n    height: 435px;\r\n    border-radius: 10px;\r\n    background: rgba(95, 158, 160, 0.11);\r\n    box-sizing: border-box;\r\n\r\n    // overflow-x: hidden;\r\n    // &::-webkit-scrollbar {\r\n    //   display: none;\r\n    // }\r\n    .videoPlaywrap {\r\n      display: flex;\r\n      margin: 0 auto;\r\n      justify-content: space-evenly;\r\n      flex-wrap: wrap; //根据宽度限制一行的盒子个数\r\n      margin: 10px 0;\r\n      width: 98%;\r\n      background: transparent;\r\n      // overflow-x: hidden;\r\n\r\n      .videoPlayList {\r\n        margin-bottom: 10px;\r\n        width: 220px;\r\n        height: 180px;\r\n        border-radius: 10px;\r\n        box-sizing: border-box;\r\n\r\n        .videoImage {\r\n          position: relative;\r\n          margin-bottom: 10px;\r\n          width: 220px;\r\n          height: 132px;\r\n          border-radius: 10px;\r\n          overflow: hidden;\r\n          transition: 0.2s;\r\n\r\n          &:hover {\r\n            transform: scale(1.05);\r\n            cursor: pointer;\r\n          }\r\n\r\n          .videoImg {\r\n            position: absolute;\r\n            width: 100%;\r\n            height: 100%;\r\n          }\r\n\r\n          .videoPlayTime {\r\n            position: absolute;\r\n            z-index: 99;\r\n            background: transparent;\r\n          }\r\n        }\r\n\r\n        .briefDesc {\r\n          font-size: 15px;\r\n          padding: 0 10px;\r\n          // width: 100%;\r\n          transition: 0.2s;\r\n          overflow: hidden;\r\n          /*必须结合的属性,当内容溢出元素框时发生的事情*/\r\n          text-overflow: ellipsis;\r\n          /*可以用来多行文本的情况下，用省略号“…”隐藏超出范围的文本 。*/\r\n          display: -webkit-box;\r\n          /*必须结合的属性 ，将对象作为弹性伸缩盒子模型显示 。*/\r\n          -webkit-line-clamp: 2;\r\n          /*用来限制在一个块元素显示的文本的行数。*/\r\n          -webkit-box-orient: vertical;\r\n\r\n          /*必须结合的属性 ，设置或检索伸缩盒对象的子元素的排列方式 。*/\r\n          span {\r\n            &:hover {\r\n              color: rgb(145, 245, 228);\r\n              cursor: pointer;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .song-album-wrap {\r\n    height: 420px;\r\n    // background: #8eb89e;\r\n    overflow-x: hidden;\r\n\r\n    &::-webkit-scrollbar {\r\n      display: none;\r\n    }\r\n  }\r\n}\r\n\r\n.pagination {\r\n  text-align: center;\r\n  background: none !important;\r\n\r\n  /deep/ .el-pager {\r\n    height: 30px !important;\r\n    background: none !important;\r\n  }\r\n\r\n  /deep/ .number,\r\n  /deep/ .btn-prev,\r\n  /deep/ .btn-quicknext,\r\n  /deep/ .btn-next,\r\n  /deep/ .el-input__inner,\r\n  /deep/ .more {\r\n    color: #f2fff7 !important;\r\n    background: transparent !important;\r\n  }\r\n\r\n  /deep/ .number:hover,\r\n  /deep/ .btn-prev:hover,\r\n  /deep/ .btn-quicknext:hover,\r\n  /deep/ .btn-next:hover,\r\n  /deep/ .el-input__inner:hover,\r\n  /deep/ .more:hover {\r\n    color: #f7a588 !important;\r\n  }\r\n\r\n  /deep/ .active {\r\n    color: #f7a588 !important;\r\n  }\r\n\r\n  /deep/ .el-input__inner {\r\n    border: none;\r\n  }\r\n\r\n  /deep/ .el-pagination__jump {\r\n    color: #f7dd88 !important;\r\n  }\r\n}\r\n\r\n.iconhover {\r\n  transition: 0.2s;\r\n\r\n  &:hover {\r\n    color: rgb(247, 243, 45);\r\n  }\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./singerDetail.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./singerDetail.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./singerDetail.vue?vue&type=template&id=492f17dc&scoped=true&\"\nimport script from \"./singerDetail.vue?vue&type=script&lang=js&\"\nexport * from \"./singerDetail.vue?vue&type=script&lang=js&\"\nimport style0 from \"./singerDetail.vue?vue&type=style&index=0&id=492f17dc&prod&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"492f17dc\",\n  null\n  \n)\n\nexport default component.exports","import { cloudMusic } from '@/api/request'\r\n\r\n//收藏/取消歌单（1收藏2取消）\r\nexport function collectPlaylist(params) {\r\n\treturn cloudMusic({\r\n\t\turl: '/playlist/subscribe',\r\n\t\tmethod: 'post',\r\n\t\tdata: params,\r\n\t})\r\n}\r\n/*\r\n 喜欢音乐必选参数 : id: 歌曲 id\r\n可选参数 : like: 布尔值 , 默认为 true 即喜欢 , 若传 false, 则取消喜欢\r\n*/\r\nexport function likeMusic(params) {\r\n\treturn cloudMusic({\r\n\t\turl: '/like',\r\n\t\tmethod: 'post',\r\n\t\tdata: params,\r\n\t})\r\n}\r\n\r\n/* 说明 : 登录后调用此接口 , 传入用户 id, 可以获取用户歌单\r\n\r\n必选参数 : uid : 用户 id\r\n\r\n可选参数 :\r\n\r\nlimit : 返回数量 , 默认为 30\r\n\r\noffset : 偏移数量，用于分页 , 如 :( 页数 -1)*30, 其中 30 为 limit 的值 , 默认为 0\r\n\r\n接口地址 : /user/playlist\r\n\r\n调用例子 : /user/playlist?uid=32953014 */\r\nexport function getMyPlayList(params) {\r\n\treturn cloudMusic({\r\n\t\turl: '/user/playlist',\r\n\t\tmethod: 'get',\r\n\t\tparams: params,\r\n\t})\r\n}\r\n\r\n/* \r\n删除歌单\r\n必选参数 : id : 歌单 id,可多个,用逗号隔开\r\n\r\n接口地址 : /playlist/delete\r\n\r\n调用例子 : /playlist/delete?id=2947311456 , /playlist/delete?id=5013464397,5013427772 */\r\n\r\nexport function deletePlayList(params) {\r\n\treturn cloudMusic({\r\n\t\turl: '/playlist/delete',\r\n\t\tmethod: 'get',\r\n\t\tparams: params,\r\n\t})\r\n}\r\n/* \r\n更新用户歌单\r\n必选参数 :\r\n\r\nid:歌单id\r\n\r\nname:歌单名字\r\n\r\ndesc:歌单描述\r\n\r\ntags:歌单tag ,多个用 `;` 隔开,只能用官方规定标签\r\n接口地址 : /playlist/update\r\n\r\n调用例子 : /playlist/update?id=24381616&name=新歌单&desc=描述&tags=欧美 */\r\nexport function updatePlayList(params) {\r\n\treturn cloudMusic({\r\n\t\turl: '/playlist/update',\r\n\t\tmethod: 'get',\r\n\t\tparams: params,\r\n\t})\r\n}\r\n"],"names":["render","_vm","this","_h","$createElement","_c","_self","_l","item","index","key","id","staticClass","staticStyle","_v","_s","on","$event","goSongDetails","name","ar","dt","likeMusic","listenMusic","fee","stopPropagation","playMusic","_e","Boolean","mv","playMV","getDownloadUrl","staticRenderFns","props","songlist","Array","data","methods","songDetails","$router","push","params","bool","loading","$loading","target","background","like","then","res","catch","error","songDetals","that","mvId","songId","songName","$message","type","message","download","url","component","attrs","artist","img1v1Url","alias","_m","getSingerSongList","musicSize","getSingerAlbum","albumSize","getSingerMvList","mvSize","tagSwitch","briefDesc","directives","rawName","value","songList","length","expression","songcurrentPage","songHandleCurrentChange","albumList","goAlbumDetail","blurPicUrl","size","albumcurrentPage","albumHandleCurrentChange","mvList","imgurl16v9","playCount","duration","artistName","mvcurrentPage","mvHandleCurrentChange","components","detailSwitch","songSwitch","albumSwitch","mvSwitch","created","$route","getSingerDetail","switchChange","tag","localStorage","limit","offset","detailShow","async","songs","$set","transMusicTime","hotAlbums","mvs","transPlayCount","albumId","currentPage","collectPlaylist","cloudMusic","method","getMyPlayList","deletePlayList"],"sourceRoot":""}