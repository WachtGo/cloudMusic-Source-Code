{"ast":null,"code":"import Vue from \"vue\";\nimport Vuex from \"vuex\";\nimport aplayer from \"./aplayer\";\nimport homePage from \"./homePage\";\nimport musicPlayList from \"./musicPlayList\";\nimport login from \"./login\";\nimport createPersistedState from \"vuex-persistedstate\"; //状态持久化，将vuex资源保存在localStorage中\n\nimport { getToken, setToken, removeToken } from \"@/utils/token\";\nimport { getStorage, setStorage, removeStorage } from \"@/utils/storage\";\nVue.use(Vuex);\nexport default new Vuex.Store({\n  // 歌曲生成周期\n  plugins: [createPersistedState({\n    key: 'userState',\n    // 默认值vuex\n    storage: window.localStorage,\n    // 缓存的介质localStorage、sessionStorage\n    // storage: window.sessionStorage,\n    whiteList: ['token', 'user'] // 白名单 要缓存的数据，刷新不会丢失，重新打开也不会丢失\n    // blackList: [], // 黑名单 不缓存的数据，刷新丢失\n\n  })],\n  state: {\n    token: null,\n    user: null\n  },\n  mutations: {\n    setTOKEN(state, value) {\n      //登录后设置token\n      state.token = value;\n      setToken(value);\n    },\n\n    removeTOKEN(state) {\n      removeToken();\n      state.token = null;\n      state.user = null;\n    },\n\n    setUSER(state, user) {\n      //登录后将用户信息存在vuex\n      state.user = user;\n    },\n\n    setSTORAGE(state, obj) {\n      //设置本地存储\n      setStorage(obj.name, obj.value);\n    }\n\n  },\n  actions: {\n    getTOKEN() {\n      //获取token值\n      return getToken();\n    }\n\n  },\n  modules: {\n    aplayer,\n    homePage,\n    musicPlayList,\n    login\n  }\n}); // export default new Vuex.Store({\n// state: {\n//   // 获取token\n//   // token:getToken(),\n//   //获取本地token\n//   // token_storage:getStorage(),\n// },\n// //mutations用于修改state\n// //Async 异步\n// mutations: {//将方法名改成大写，防止在其他组件中出现同名冲突（无法生效）\n//   //将token保存在本地存储\n//   // setSTORAGE(state,tokenName,tokenContent){\n//   //   setStorage(tokenName,tokenContent)\n//   // }\n//   // ,\n//   // //保存token\n//   // setTOKEN(state,token){\n//   //   setToken(token)\n//   //   this._vm.$message({\n//   //     type: 'success',\n//   //     message: 'cookie设置成功',\n//   //   });\n//   // },\n//   // removeTOKEN(state){\n//   //   state.token = null\n//   //   removeToken()\n//   //   this._vm.$message({\n//   //     type: 'success',\n//   //     message: '成功退出登录',\n//   //   });\n//   // },\n//   //播放器添加歌曲\n//   // //刷新音频播放器\n//   // alplayReload(state,change){\n//   //   if(change){\n//   //      state.alplayShow = false\n//   //   setTimeout(()=>{\n//   //     state.alplayShow = true\n//   //   },1000)\n//   //   }\n//   // }\n// },\n// //actions专门用来做异步处理\n// actions: {\n// }\n// })","map":null,"metadata":{},"sourceType":"module"}