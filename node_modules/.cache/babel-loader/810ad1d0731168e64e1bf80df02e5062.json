{"ast":null,"code":"import _createForOfIteratorHelper from \"D:/data/\\u684C\\u9762/\\u4EE3\\u7801\\u6587\\u4EF6\\u5939/git/cloudMusic-Source-Code-main/cloudMusic-Source-Code-main/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _asyncToGenerator from \"D:/data/\\u684C\\u9762/\\u4EE3\\u7801\\u6587\\u4EF6\\u5939/git/cloudMusic-Source-Code-main/cloudMusic-Source-Code-main/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _defineProperty from \"D:/data/\\u684C\\u9762/\\u4EE3\\u7801\\u6587\\u4EF6\\u5939/git/cloudMusic-Source-Code-main/cloudMusic-Source-Code-main/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.json.stringify.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getDownloadUrl, getSingerDetail as _getSingerDetail, // getSingerDesc,\ngetSingerSongList as _getSingerSongList, getSingerMvList as _getSingerMvList, getSingerAlbum as _getSingerAlbum } from \"@/api/api\";\nimport { transMusicTime, transPlayCount, download } from \"@/utils/commonApi\";\nimport songlist from \"@/components/songlist.vue\";\nexport default {\n  components: {\n    songlist: songlist\n  },\n  // props: ['artist.id'],\n  data: function data() {\n    var _artist;\n\n    return {\n      //歌手信息\n      artist: (_artist = {\n        alias: [],\n        musicSize: \"\",\n        id: \"\",\n        img1v1Url: \"\",\n        name: \"\"\n      }, _defineProperty(_artist, \"alias\", [\"\", \"\"]), _defineProperty(_artist, \"musicSize\", \"\"), _defineProperty(_artist, \"albumSize\", \"\"), _defineProperty(_artist, \"mvSize\", \"\"), _defineProperty(_artist, \"briefDesc\", \"\"), _artist),\n      songList: [],\n      albumList: [],\n      mvList: [],\n      tagSwitch: {\n        detailSwitch: true,\n        songSwitch: false,\n        albumSwitch: false,\n        mvSwitch: false\n      },\n      songcurrentPage: 1,\n      albumcurrentPage: 1,\n      mvcurrentPage: 1\n    };\n  },\n  created: function created() {\n    // 判断路由传入了歌手信息还是歌手id\n    if (this.$route.params.artist) {\n      //路由传入的是歌手详情\n      this.artist = this.$route.params.artist;\n      this.getSingerDetail(this.$route.params.artist.id);\n    } else {\n      //当路由传入的是id时\n      this.$route.params.id ? //传入id，把之前的缓存清掉\n      this.getSingerDetail(this.$route.params.id) : this.artist = JSON.parse(localStorage.getItem(\"artist\")); //刷新页面会走向这，可以直接从缓存获取\n    }\n  },\n  methods: {\n    //显示歌手单曲、专辑、mv列表开关\n    switchChange: function switchChange(tag) {\n      var that = this;\n\n      for (var key in that.tagSwitch) {\n        if (key != tag) {\n          that.tagSwitch[key] = false;\n        }\n      }\n\n      that.tagSwitch[tag] = true;\n    },\n    //获取歌手详情\n    getSingerDetail: function getSingerDetail(id) {\n      var _this = this;\n\n      // id:4292 李荣浩\n      _getSingerDetail({\n        id: id\n      }).then( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(res) {\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  if (!(res.data.code === 200)) {\n                    _context.next = 5;\n                    break;\n                  }\n\n                  _context.next = 3;\n                  return res.data.artist;\n\n                case 3:\n                  _this.artist = _context.sent;\n                  // console.log(\"歌手详情--\", res.data.artist);\n                  localStorage.setItem(\"artist\", JSON.stringify(res.data.artist));\n\n                case 5:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }()).catch(function (res) {});\n    },\n    //获取歌手单曲列表\n    getSingerSongList: function getSingerSongList(tag) {\n      var that = this;\n      var params = {\n        id: that.artist.id,\n        limit: 30,\n        offset: (that.songcurrentPage - 1) * 30\n      };\n      that.detailShow = false;\n      that.songList = [];\n\n      _getSingerSongList(params).then( /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(res) {\n          var _iterator, _step, item, dt;\n\n          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.next = 2;\n                  return res.data.songs;\n\n                case 2:\n                  that.songList = _context2.sent;\n                  // that.songCount = res.data.total\n                  //给每首曲子添加防抖\n                  _iterator = _createForOfIteratorHelper(that.songList);\n\n                  try {\n                    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                      item = _step.value;\n                      that.$set(item, \"timer\", true);\n                    } //转换时间\n\n                  } catch (err) {\n                    _iterator.e(err);\n                  } finally {\n                    _iterator.f();\n                  }\n\n                  dt = \"dt\";\n                  transMusicTime(that.songList, dt);\n\n                case 7:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function (_x2) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n\n      that.switchChange(tag);\n    },\n    //获取歌手专辑列表\n    getSingerAlbum: function getSingerAlbum(tag) {\n      var that = this;\n      var params = {\n        id: that.artist.id,\n        limit: 6,\n        offset: (that.albumcurrentPage - 1) * 6\n      };\n      that.detailShow = false;\n      that.albumList = [];\n\n      _getSingerAlbum(params).then(function (res) {\n        // console.log(\"歌手专辑列表\", res.data.hotAlbums);\n        that.albumList = res.data.hotAlbums;\n      });\n\n      that.switchChange(tag);\n    },\n    //获取歌手mv\n    getSingerMvList: function getSingerMvList(tag) {\n      var that = this;\n      var params = {\n        id: that.artist.id,\n        limit: 8,\n        offset: (that.mvcurrentPage - 1) * 8\n      };\n      that.mvList = [];\n\n      _getSingerMvList(params).then( /*#__PURE__*/function () {\n        var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(res) {\n          return regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  _context3.next = 2;\n                  return res.data.mvs;\n\n                case 2:\n                  that.mvList = _context3.sent;\n                  // 转换时间单位\n                  transMusicTime(that.mvList, \"duration\"); //转换播放量单位\n\n                  transPlayCount(that.mvList, \"playCount\");\n\n                case 5:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3);\n        }));\n\n        return function (_x3) {\n          return _ref3.apply(this, arguments);\n        };\n      }());\n\n      that.switchChange(tag);\n    },\n    ////获取歌手描述\n    // getSingerDesc() {\n    //   // console.log(Boolean(this.artist))\n    //   var that = this;\n    //   let params = {\n    //     id: that.artist.id,\n    //   };\n    //   getSingerDesc(params).then((res) => {\n    //     console.log(\"歌手描述\", res.data);\n    //     that.artist = res.data.artist;\n    //   });\n    // },\n    //跳转到专辑详情\n    goAlbumDetail: function goAlbumDetail(albumId) {\n      this.$router.push({\n        name: \"albumDetail\",\n        params: {\n          albumId: albumId\n        }\n      });\n    },\n    //跳转到播放MV页面\n    playMV: function playMV(mvId) {\n      //获取mv播放链接\n      this.$router.push({\n        name: \"mvPlay\",\n        params: {\n          mvId: mvId\n        }\n      });\n    },\n    //歌手歌曲分页\n    songHandleCurrentChange: function songHandleCurrentChange(currentPage) {\n      // console.log(`当前页: ${currentPage}`);\n      var that = this;\n      that.songcurrentPage = currentPage;\n      that.getSingerSongList(\"songSwitch\");\n    },\n    //歌手专辑分页\n    albumHandleCurrentChange: function albumHandleCurrentChange(currentPage) {\n      // console.log(`当前页: ${currentPage}`);\n      var that = this;\n      that.albumcurrentPage = currentPage;\n      that.getSingerAlbum(\"albumSwitch\");\n    },\n    // 歌手mv分页\n    mvHandleCurrentChange: function mvHandleCurrentChange(currentPage) {\n      // console.log(`当前页: ${currentPage}`);\n      var that = this;\n      that.mvcurrentPage = currentPage;\n      that.getSingerMvList(\"mvSwitch\");\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["getDownloadUrl","getSingerDetail","getSingerSongList","getSingerMvList","getSingerAlbum","components","songlist","data","artist","alias","musicSize","id","img1v1Url","name","songList","albumList","mvList","tagSwitch","detailSwitch","songSwitch","albumSwitch","mvSwitch","songcurrentPage","albumcurrentPage","mvcurrentPage","created","methods","switchChange","tag","that","then","res","localStorage","catch","limit","offset","item","dt","transMusicTime","transPlayCount","goAlbumDetail","albumId","params","playMV","mvId","songHandleCurrentChange","albumHandleCurrentChange","mvHandleCurrentChange"],"sourceRoot":"src/views","sources":["singerDetail.vue"],"sourcesContent":["\n<template>\n  <div class=\"list-wrap\">\n    <div class=\"pageName\">歌手详情</div>\n    <div class=\"descript\"></div>\n    <div>\n      <div class=\"ul\">\n        <div class=\"details\">\n          <div class=\"details-img\">\n            <img :src=\"artist.img1v1Url\" alt=\" \" />\n          </div>\n          <div class=\"detailsRight\">\n            <div style=\"margin-left: 0px; text-align: left; font-size: 20px\">\n              {{ artist.name }}\n            </div>\n            <div style=\"font-size: 14px\">\n              <div class=\"aliasClass\">\n                <span class=\"playListNickName\" v-if=\"artist.alias[0]\">{{\n                  artist.alias[0]\n                }}</span>\n                <span class=\"playListNickName\" v-if=\"artist.alias[1]\">-</span\n                ><span class=\"playListNickName2\">{{ artist.alias[1] }}</span\n                ><span\n                  ><br />\n                  <span style=\"color: antiquewhite\"></span\n                ></span>\n              </div>\n\n              <div class=\"option\">\n                <div class=\"flexBetween\">\n                  <span\n                    class=\"inline-block\"\n                    @click=\"getSingerSongList('songSwitch')\"\n                    >歌曲：<span class=\"musicSize\">{{\n                      artist.musicSize\n                    }}</span></span\n                  >\n                  <span\n                    class=\"inline-block\"\n                    @click=\"getSingerAlbum('albumSwitch')\"\n                    >专辑：<span class=\"musicSize\">{{ artist.albumSize }}</span>\n                  </span>\n                  <span\n                    class=\"inline-block\"\n                    @click=\"getSingerMvList('mvSwitch')\"\n                    >MV：<span class=\"musicSize\">{{ artist.mvSize }}</span>\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"singerDetail\" v-if=\"tagSwitch.detailSwitch\">\n          <div style=\"font-size: 15px\">简介：</div>\n          <div v-if=\"artist.briefDesc === ''\" class=\"loading\">\n            <i class=\"el-icon-loading\"></i>\n          </div>\n          <p class=\"briefDesc\">\n            {{ artist.briefDesc }}\n          </p>\n        </div>\n        <div id=\"singleSongs\" v-if=\"tagSwitch.songSwitch\">\n          <!-- <h3>\n            歌曲：{{ songCount }}\n            &nbsp;&nbsp;&nbsp;&nbsp;\n            <span style=\"font-size：10px;\"></span>\n          </h3> -->\n          <div class=\"loading\" v-show=\"songList.length === 0\">\n            <i class=\"el-icon-loading\"></i>\n          </div>\n          <div v-if=\"songList.length !== 0\">\n            <ul class=\"song-album-wrap\">\n              <songlist :songlist=\"songList\"></songlist>\n            </ul>\n            <div class=\"pagination\">\n              <el-pagination\n                v-show=\"artist.musicSize > 30\"\n                @current-change=\"songHandleCurrentChange\"\n                :current-page.sync=\"songcurrentPage\"\n                :page-size=\"30\"\n                layout=\"prev, pager, next, jumper\"\n                :total=\"artist.musicSize\"\n                :background=\"true\"\n              >\n              </el-pagination>\n            </div>\n          </div>\n        </div>\n\n        <div id=\"albumList\" v-if=\"tagSwitch.albumSwitch\">\n          <div class=\"loading\" v-show=\"albumList.length === 0\">\n            <i class=\"el-icon-loading\"></i>\n          </div>\n          <div v-if=\"albumList.length !== 0\">\n            <ul class=\"song-album-wrap\">\n              <li\n                class=\"liWrap\"\n                v-for=\"(item, index) in albumList\"\n                :key=\"index\"\n                @click=\"goAlbumDetail(item.id)\"\n              >\n                <div class=\"liWrap-block1\">\n                  <img :src=\"item.blurPicUrl\" alt=\" \" />\n                </div>\n                <div class=\"liWrap-block2\">\n                  <div class=\"div1\">\n                    <span class=\"albumName\"\n                      >{{ item.name }}\n                      <span v-if=\"item.alias[0]\" class=\"albumName2\">{{\n                        item.alias[0]\n                      }}</span></span\n                    >\n                  </div>\n                  <div>\n                    <div class=\"divOther\">\n                      <!-- 作者：<span>{{ item.artist.name }}</span> -->\n                    </div>\n                    <span\n                      class=\"inline-block\"\n                      style=\"display: inline-block; width: 50px\"\n                    ></span>\n                    <div class=\"divOther\" style=\"width: 100px\">\n                      歌曲：<span>{{ item.size }}</span>\n                    </div>\n                  </div>\n                </div>\n              </li>\n            </ul>\n            <div class=\"pagination\">\n              <el-pagination\n                v-show=\"artist.albumSize > 6\"\n                @current-change=\"albumHandleCurrentChange\"\n                :current-page.sync=\"albumcurrentPage\"\n                :page-size=\"6\"\n                layout=\"prev, pager, next, jumper\"\n                :total=\"artist.albumSize\"\n                :background=\"true\"\n              >\n              </el-pagination>\n            </div>\n          </div>\n        </div>\n\n        <div id=\"singerMvs\" v-if=\"tagSwitch.mvSwitch\">\n          <!-- <h3 style=\"margin: 0 auto\">\n            MV：{{ mvList.length }}&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-size：10px;\"></span>\n          </h3> -->\n          <div class=\"loading\" v-show=\"mvList.length === 0\">\n            <i class=\"el-icon-loading\"></i>\n          </div>\n          <div v-if=\"mvList.length !== 0\">\n            <ul class=\"videoPlaywrap\">\n              <li\n                class=\"videoPlayList\"\n                v-for=\"(item, index) in mvList\"\n                :key=\"index\"\n              >\n                <div class=\"videoImage\">\n                  <img\n                    class=\"videoImg\"\n                    style=\"\n                      position: absolute;\n                      width: 240px;\n                      height: 155px;\n                      border-radius: 10px;\n                    \"\n                    :src=\"item.imgurl16v9\"\n                    alt=\" \"\n                    title=\"\"\n                    @click=\"playMV(item.id)\"\n                  />\n                  <span class=\"videoPlayTime\"\n                    ><i class=\"el-icon-video-play\" style=\"margin-right: 1px\"></i\n                    >{{ item.playCount }}</span\n                  >\n                  <span class=\"videoPlayTime\" style=\"bottom: 0\">{{\n                    item.duration\n                  }}</span>\n                </div>\n\n                <p class=\"List-title\" style=\"font-size: 10px\">\n                  <span\n                    style=\"\n                      display: inline-block;\n                      width: 100%;\n                      overflow: hidden;\n                      white-space: nowrap;\n                      text-overflow: ellipsis;\n                    \"\n                    ><span v-if=\"!item.type\" style=\"color: red\">MV&nbsp;</span\n                    >{{ item.name }}</span\n                  ><br />\n                  <span style=\"color: rgb(199, 199, 199)\"\n                    ><span>by&nbsp;</span>\n                    <span>{{ item.artistName }}</span></span\n                  >\n                </p>\n              </li>\n            </ul>\n            <div class=\"pagination\">\n              <el-pagination\n                v-show=\"artist.mvSize > 8\"\n                @current-change=\"mvHandleCurrentChange\"\n                :current-page.sync=\"mvcurrentPage\"\n                :page-size=\"8\"\n                layout=\"prev, pager, next, jumper\"\n                :total=\"artist.mvSize\"\n                :background=\"true\"\n              >\n              </el-pagination>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {\n  getDownloadUrl,\n  getSingerDetail,\n  // getSingerDesc,\n  getSingerSongList,\n  getSingerMvList,\n  getSingerAlbum,\n} from \"@/api/api\";\nimport { transMusicTime, transPlayCount, download } from \"@/utils/commonApi\";\nimport songlist from \"@/components/songlist.vue\";\nexport default {\n  components: {\n    songlist,\n  },\n  // props: ['artist.id'],\n  data() {\n    return {\n      //歌手信息\n      artist: {\n        alias: [],\n        musicSize: \"\",\n        id: \"\",\n        img1v1Url: \"\",\n        name: \"\",\n        alias: [\"\", \"\"],\n        musicSize: \"\",\n        albumSize: \"\",\n        mvSize: \"\",\n        briefDesc: \"\",\n      },\n      songList: [],\n      albumList: [],\n      mvList: [],\n      tagSwitch: {\n        detailSwitch: true,\n        songSwitch: false,\n        albumSwitch: false,\n        mvSwitch: false,\n      },\n\n      songcurrentPage: 1,\n      albumcurrentPage: 1,\n      mvcurrentPage: 1,\n    };\n  },\n  created() {\n    // 判断路由传入了歌手信息还是歌手id\n    if (this.$route.params.artist) {\n      //路由传入的是歌手详情\n      this.artist = this.$route.params.artist;\n      this.getSingerDetail(this.$route.params.artist.id);\n    } else {\n      //当路由传入的是id时\n      this.$route.params.id\n        ? //传入id，把之前的缓存清掉\n          this.getSingerDetail(this.$route.params.id)\n        : (this.artist = JSON.parse(localStorage.getItem(\"artist\"))); //刷新页面会走向这，可以直接从缓存获取\n    }\n  },\n  methods: {\n    //显示歌手单曲、专辑、mv列表开关\n    switchChange(tag) {\n      var that = this;\n      for (let key in that.tagSwitch) {\n        if (key != tag) {\n          that.tagSwitch[key] = false;\n        }\n      }\n      that.tagSwitch[tag] = true;\n    },\n    //获取歌手详情\n    getSingerDetail(id) {\n      // id:4292 李荣浩\n      getSingerDetail({ id: id })\n        .then(async (res) => {\n          if (res.data.code === 200) {\n            this.artist = await res.data.artist;\n            // console.log(\"歌手详情--\", res.data.artist);\n            localStorage.setItem(\"artist\", JSON.stringify(res.data.artist));\n          }\n        })\n        .catch((res) => {});\n    },\n    //获取歌手单曲列表\n    getSingerSongList(tag) {\n      var that = this;\n      let params = {\n        id: that.artist.id,\n        limit: 30,\n        offset: (that.songcurrentPage - 1) * 30,\n      };\n      that.detailShow = false;\n      that.songList = [];\n      getSingerSongList(params).then(async (res) => {\n        // console.log('歌手单曲列表：', res.data)\n        that.songList = await res.data.songs;\n        // that.songCount = res.data.total\n        //给每首曲子添加防抖\n        for (let item of that.songList) {\n          that.$set(item, \"timer\", true);\n        }\n        //转换时间\n        let dt = \"dt\";\n        transMusicTime(that.songList, dt);\n      });\n      that.switchChange(tag);\n    },\n    //获取歌手专辑列表\n    getSingerAlbum(tag) {\n      var that = this;\n\n      let params = {\n        id: that.artist.id,\n        limit: 6,\n        offset: (that.albumcurrentPage - 1) * 6,\n      };\n      that.detailShow = false;\n      that.albumList = [];\n      getSingerAlbum(params).then((res) => {\n        // console.log(\"歌手专辑列表\", res.data.hotAlbums);\n        that.albumList = res.data.hotAlbums;\n      });\n\n      that.switchChange(tag);\n    },\n    //获取歌手mv\n    getSingerMvList(tag) {\n      var that = this;\n      let params = {\n        id: that.artist.id,\n        limit: 8,\n        offset: (that.mvcurrentPage - 1) * 8,\n      };\n      that.mvList = [];\n      getSingerMvList(params).then(async (res) => {\n        // console.log(\"获取到的歌手MV：\", res.data.mvs);\n        that.mvList = await res.data.mvs;\n        // 转换时间单位\n        transMusicTime(that.mvList, \"duration\");\n        //转换播放量单位\n        transPlayCount(that.mvList, \"playCount\");\n      });\n      that.switchChange(tag);\n    },\n    ////获取歌手描述\n    // getSingerDesc() {\n    //   // console.log(Boolean(this.artist))\n    //   var that = this;\n    //   let params = {\n    //     id: that.artist.id,\n    //   };\n    //   getSingerDesc(params).then((res) => {\n    //     console.log(\"歌手描述\", res.data);\n    //     that.artist = res.data.artist;\n    //   });\n    // },\n\n    //跳转到专辑详情\n    goAlbumDetail(albumId) {\n      this.$router.push({\n        name: \"albumDetail\",\n        params: {\n          albumId: albumId,\n        },\n      });\n    },\n    //跳转到播放MV页面\n    playMV(mvId) {\n      //获取mv播放链接\n      this.$router.push({\n        name: \"mvPlay\",\n        params: { mvId: mvId },\n      });\n    },\n\n    //歌手歌曲分页\n    songHandleCurrentChange: function (currentPage) {\n      // console.log(`当前页: ${currentPage}`);\n      var that = this;\n      that.songcurrentPage = currentPage;\n      that.getSingerSongList(\"songSwitch\");\n    },\n    //歌手专辑分页\n    albumHandleCurrentChange: function (currentPage) {\n      // console.log(`当前页: ${currentPage}`);\n      var that = this;\n      that.albumcurrentPage = currentPage;\n      that.getSingerAlbum(\"albumSwitch\");\n    },\n    // 歌手mv分页\n    mvHandleCurrentChange: function (currentPage) {\n      // console.log(`当前页: ${currentPage}`);\n      var that = this;\n      that.mvcurrentPage = currentPage;\n      that.getSingerMvList(\"mvSwitch\");\n    },\n  },\n};\n</script>\n\n<style lang=\"less\" scoped>\n.descript {\n  display: flex;\n  justify-content: space-between;\n  color: aliceblue;\n  font-weight: bolder;\n  padding: 10px 20px;\n  border-radius: 20px 20px 0 0;\n  background: rgba(95, 158, 160, 0.11);\n  box-sizing: border-box;\n}\n\n.list-wrap {\n  margin: 10px auto 0;\n  padding: 0 20px 10px;\n  width: 1120px;\n  height: 720px;\n  border-radius: 20px;\n  background: rgba(95, 158, 160, 0.11);\n  box-sizing: border-box;\n\n  .ul {\n    height: 650px;\n    border-radius: 0 0 10px 10px;\n    background: rgba(95, 158, 160, 0.11);\n    // overflow-x: hidden;\n\n    // &::-webkit-scrollbar {\n    //   display: none;\n    // }\n    .details {\n      display: flex;\n      justify-content: space-between;\n      margin: 0 auto 10px;\n      padding: 10px;\n      width: 96%;\n      height: 170px;\n      // border: 1px solid rgb(97, 226, 183);\n      border-radius: 10px;\n      background: rgba(95, 158, 160, 0.11);\n      box-sizing: border-box;\n\n      .details-img {\n        display: inline-block;\n        // width: 180px;\n        // height: 180px;\n        border-radius: 10px;\n\n        img {\n          width: 150px;\n          height: 150px;\n          border-radius: 10px;\n          transition: 0.2s;\n\n          &:hover {\n            transform: scale(1.03);\n          }\n        }\n      }\n\n      .detailsRight {\n        position: relative;\n        width: 820px;\n        height: 150px;\n        // background: rgb(181, 209, 152);\n\n        .option {\n          position: absolute;\n          bottom: 0;\n\n          .flexBetween {\n            .inline-block {\n              display: inline-block;\n              margin-right: 40px;\n              transition: 0.2s;\n\n              .musicSize {\n                color: rgb(193, 243, 226);\n                transition: 0.2s;\n\n                &:hover {\n                  color: rgb(109, 247, 201);\n                }\n              }\n\n              &:hover {\n                cursor: pointer;\n                // color: rgb(246, 255, 119);\n              }\n            }\n          }\n        }\n\n        .songTns {\n          width: 100%;\n          font-size: 14px;\n          overflow-x: hidden;\n\n          &::-webkit-scrollbar {\n            display: none;\n          }\n        }\n\n        .aliasClass {\n          position: absolute;\n          top: 69px;\n        }\n\n        .playListNickName,\n        .playListNickName2 {\n        }\n\n        .playListNickName {\n          display: inline-block;\n          margin-right: 20px;\n        }\n\n        .musicSize {\n          color: rgb(170, 240, 240);\n        }\n      }\n    }\n\n    .music-list {\n      display: flex;\n      padding: 10px 10px;\n      width: 1080px;\n      overflow: hidden;\n      color: rgba(255, 255, 255, 1);\n      font-weight: bolder;\n      -o-text-overflow: ellipsis;\n      text-overflow: ellipsis;\n      // background: rgba(95, 158, 160, 0.322);\n      transition: 0.2s;\n\n      .music-list-span {\n        display: inline-block;\n        width: 270px;\n        text-align: center;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n      }\n\n      .option {\n        display: inline-block;\n        width: 250px;\n        text-align: center;\n\n        span {\n          display: inline-block;\n          width: 30px;\n\n          &:hover {\n            cursor: pointer;\n          }\n        }\n      }\n\n      &:hover {\n        background: rgba(76, 152, 155, 0.527);\n      }\n    }\n  }\n\n  #albumList {\n    // width: 96%;\n    margin: 10 auto;\n    padding: 10px 20px;\n    width: 98%;\n    height: 460px;\n    border-radius: 10px;\n    background: rgba(95, 158, 160, 0.11);\n    box-sizing: border-box;\n    overflow: hidden;\n\n    // overflow-x: hidden;\n    // &::-webkit-scrollbar {\n    //   display: none;\n    // }\n    .liWrap {\n      display: flex;\n      justify-content: space-around;\n      margin: 0 auto 10px;\n      padding: 0 10px;\n      // width: 95%;\n      height: 60px;\n      border-radius: 12px;\n      background: rgba(95, 158, 160, 0.11);\n      box-sizing: border-box;\n      transition: 0.2s;\n\n      &:hover {\n        transform: scale(1.01);\n      }\n\n      .liWrap-block1 {\n        width: 60px;\n        height: 60px;\n        border-radius: 10px;\n        // background-color: rgba(178, 244, 151, 1);\n        transition: 0.2s;\n\n        img {\n          width: 100%;\n          height: 100%;\n          border-radius: 10px;\n        }\n\n        &:hover {\n          transform: scale(1.05);\n          cursor: pointer;\n        }\n      }\n\n      .liWrap-block2 {\n        display: flex;\n        justify-content: space-between;\n        padding: 10px;\n        width: 920px;\n        height: 60px;\n        font-size: 15px;\n        border-radius: 10px;\n        line-height: 40px;\n        box-sizing: border-box;\n        // background-color: rgba(226, 214, 156, 0.075);\n        transition: 0.2s;\n\n        span {\n          &:hover {\n            color: rgba(109, 255, 255, 0.753);\n          }\n        }\n\n        .div1 {\n          display: inline-block;\n          width: 520px;\n          text-overflow: ellipsis;\n          overflow: hidden;\n          white-space: nowrap;\n\n          .albumName {\n            display: inline-block;\n            max-width: 500px;\n            text-overflow: ellipsis;\n            overflow: hidden;\n            white-space: nowrap;\n            color: rgb(196, 255, 250);\n            transition: 0.2s;\n\n            span {\n              &:hover {\n                color: rgba(97, 252, 252, 0.979);\n              }\n            }\n\n            &:hover {\n              color: rgba(97, 252, 252, 0.979);\n            }\n          }\n\n          &:hover {\n            color: rgba(97, 252, 252, 0.979);\n          }\n        }\n\n        .divOther {\n          display: inline-block;\n          width: 200px;\n          overflow: hidden;\n          text-overflow: ellipsis;\n          white-space: nowrap;\n          // text-align: left;\n          margin-right: 5px;\n\n          span {\n            color: rgb(196, 255, 250);\n            transition: 0.2s;\n\n            &:hover {\n              color: rgba(97, 252, 252, 0.979);\n            }\n          }\n        }\n\n        &:hover {\n          // color: rgba(97, 252, 252, 0.979);\n          transform: scale(1.01);\n          cursor: pointer;\n        }\n      }\n    }\n  }\n\n  .singerDetail {\n    margin: 0 auto;\n    padding: 10px;\n    width: 96%;\n    height: 420px;\n    border-radius: 10px;\n    background: rgba(95, 158, 160, 0.11);\n    box-sizing: border-box;\n\n    .briefDesc {\n      text-indent: 2em;\n    }\n  }\n\n  #singleSongs {\n    margin: 0 auto;\n    padding: 0px 10px 20px;\n    width: 96%;\n    height: 460px;\n    border-radius: 10px;\n    background: rgba(95, 158, 160, 0.05);\n    box-sizing: border-box;\n    overflow: hidden;\n    // overflow-x: hidden;\n\n    // &::-webkit-scrollbar {\n    //   display: none;\n    // }\n\n    .SingsList {\n      position: relative;\n      display: flex;\n      justify-content: space-between;\n      margin: 5px auto;\n      width: 100%;\n      height: 30px;\n      line-height: 30px;\n      padding: 0 10px;\n      background-color: rgba(99, 187, 162, 0.144);\n      border-radius: 15px;\n      box-sizing: border-box;\n      line-height: 30px;\n      transition: 0.2s;\n\n      .song-list {\n        display: inline-block;\n        text-align: center;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n      }\n\n      .song-list-option {\n        position: absolute;\n        width: 130px;\n        right: 10px;\n\n        span {\n          display: inline-block;\n          margin: 0 5px;\n          transition: 0.2s;\n\n          &:hover {\n            color: bisque;\n            cursor: pointer;\n          }\n        }\n      }\n\n      &:hover {\n        color: aqua;\n        transform: scale(1.01);\n      }\n    }\n  }\n\n  #singerMvs {\n    margin: 0 auto;\n    padding: 0px 10px 20px;\n    width: 96%;\n    height: 435px;\n    border-radius: 10px;\n    background: rgba(95, 158, 160, 0.11);\n    box-sizing: border-box;\n\n    // overflow-x: hidden;\n    // &::-webkit-scrollbar {\n    //   display: none;\n    // }\n    .videoPlaywrap {\n      display: flex;\n      margin: 0 auto;\n      justify-content: space-evenly;\n      flex-wrap: wrap; //根据宽度限制一行的盒子个数\n      margin: 10px 0;\n      width: 98%;\n      background: transparent;\n      // overflow-x: hidden;\n\n      .videoPlayList {\n        margin-bottom: 10px;\n        width: 220px;\n        height: 180px;\n        border-radius: 10px;\n        box-sizing: border-box;\n\n        .videoImage {\n          position: relative;\n          margin-bottom: 10px;\n          width: 220px;\n          height: 132px;\n          border-radius: 10px;\n          overflow: hidden;\n          transition: 0.2s;\n\n          &:hover {\n            transform: scale(1.05);\n            cursor: pointer;\n          }\n\n          .videoImg {\n            position: absolute;\n            width: 100%;\n            height: 100%;\n          }\n\n          .videoPlayTime {\n            position: absolute;\n            z-index: 99;\n            background: transparent;\n          }\n        }\n\n        .briefDesc {\n          font-size: 15px;\n          padding: 0 10px;\n          // width: 100%;\n          transition: 0.2s;\n          overflow: hidden;\n          /*必须结合的属性,当内容溢出元素框时发生的事情*/\n          text-overflow: ellipsis;\n          /*可以用来多行文本的情况下，用省略号“…”隐藏超出范围的文本 。*/\n          display: -webkit-box;\n          /*必须结合的属性 ，将对象作为弹性伸缩盒子模型显示 。*/\n          -webkit-line-clamp: 2;\n          /*用来限制在一个块元素显示的文本的行数。*/\n          -webkit-box-orient: vertical;\n\n          /*必须结合的属性 ，设置或检索伸缩盒对象的子元素的排列方式 。*/\n          span {\n            &:hover {\n              color: rgb(145, 245, 228);\n              cursor: pointer;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  .song-album-wrap {\n    height: 420px;\n    // background: #8eb89e;\n    overflow-x: hidden;\n\n    &::-webkit-scrollbar {\n      display: none;\n    }\n  }\n}\n\n.pagination {\n  text-align: center;\n  background: none !important;\n\n  /deep/ .el-pager {\n    height: 30px !important;\n    background: none !important;\n  }\n\n  /deep/ .number,\n  /deep/ .btn-prev,\n  /deep/ .btn-quicknext,\n  /deep/ .btn-next,\n  /deep/ .el-input__inner,\n  /deep/ .more {\n    color: #f2fff7 !important;\n    background: transparent !important;\n  }\n\n  /deep/ .number:hover,\n  /deep/ .btn-prev:hover,\n  /deep/ .btn-quicknext:hover,\n  /deep/ .btn-next:hover,\n  /deep/ .el-input__inner:hover,\n  /deep/ .more:hover {\n    color: #f7a588 !important;\n  }\n\n  /deep/ .active {\n    color: #f7a588 !important;\n  }\n\n  /deep/ .el-input__inner {\n    border: none;\n  }\n\n  /deep/ .el-pagination__jump {\n    color: #f7dd88 !important;\n  }\n}\n\n.iconhover {\n  transition: 0.2s;\n\n  &:hover {\n    color: rgb(247, 243, 45);\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}