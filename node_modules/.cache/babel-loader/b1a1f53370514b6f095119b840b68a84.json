{"ast":null,"code":"import _createForOfIteratorHelper from \"C:/Users/Wacht/Desktop/git/cloudMusic-Source-Code/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport \"core-js/modules/es.json.stringify.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getAlbumContent as _getAlbumContent, getDownloadUrl } from \"@/api/api\";\nimport { transMusicTime, download } from \"@/utils/commonApi\";\nimport songlist from \"@/components/songlist.vue\";\nexport default {\n  components: {\n    songlist: songlist\n  },\n  data: function data() {\n    return {\n      listen: [],\n      albumId: \"\",\n      albumSongs: [],\n      albumDesc: {\n        artist: {\n          img1v1Url: \"\"\n        }\n      }\n    };\n  },\n  mounted: function mounted() {\n    //进入专辑详情，判断是否有路由信息传入\n    if (this.$route.params.albumDesc) {\n      this.albumDesc = this.$route.params.albumDesc;\n      localStorage.setItem(\"albumDesc\", JSON.stringify(this.$route.params.albumDesc));\n      this.getAlbumContent();\n    } else {\n      //没有路由信息，说明刷新了页面，则尝试使用之前的缓存信息\n      this.albumDesc = JSON.parse(localStorage.getItem(\"albumDesc\"));\n    } //获取专辑信息\n\n\n    this.getAlbumContent();\n  },\n  methods: {\n    getAlbumContent: function getAlbumContent() {\n      var that = this;\n      var params = {\n        id: that.albumDesc.id\n      };\n\n      _getAlbumContent(params).then(function (res) {\n        // console.log(\"专辑信息---：\", res.data.album);\n        // console.log(\"专辑歌曲---：\", res.data.songs);\n        that.albumSongs = res.data.songs;\n        that.albumDesc = res.data.album; //给每个列表添加一个防抖\n\n        var _iterator = _createForOfIteratorHelper(that.albumSongs),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var item = _step.value;\n            that.$set(item, \"timer\", true);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n\n        var dt = \"dt\";\n        transMusicTime(that.albumSongs, dt);\n      });\n    } //根据主题更换播放器颜色\n    // randomColor() {\n    //   return `#${((Math.random() * 0xffffff) << 0).toString(16)}`\n    // },\n\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgDA;AACA;AACA;AAEA;AACAA;AACAC;AADA,GADA;AAIAC,MAJA,kBAIA;AACA;AACAC,gBADA;AAEAC,iBAFA;AAGAC,oBAHA;AAIAC;AACAC;AAAAC;AAAA;AADA;AAJA;AAQA,GAbA;AAcAC,SAdA,qBAcA;AACA;AACA;AACA;AACAC,2BACA,WADA,EAEAC,4CAFA;AAIA;AACA,KAPA,MAOA;AAAA;AACA;AACA,KAXA,CAYA;;;AACA;AAIA,GA/BA;AAgCAC;AACAC,mBADA,6BACA;AACA;AACA;AACAC;AADA;;AAGAD;AACA;AACA;AACAE;AACAA,wCAJA,CAKA;;AALA,mDAMAA,eANA;AAAA;;AAAA;AAMA;AAAA;AACAA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;;AASA;AACAC;AACA,OAXA;AAYA,KAlBA,CAoBA;AACA;AACA;AACA;;AAvBA;AAhCA","names":["components","songlist","data","listen","albumId","albumSongs","albumDesc","artist","img1v1Url","mounted","localStorage","JSON","methods","getAlbumContent","id","that","transMusicTime"],"sourceRoot":"src/views","sources":["albumDetail.vue"],"sourcesContent":["<template>\r\n  <div class=\"list-wrap\">\r\n    <div class=\"pageName\">专辑详情</div>\r\n    <div class=\"descript\"></div>\r\n    <div>\r\n      <div class=\"ul\">\r\n        <div class=\"details\">\r\n          <div class=\"details-img\">\r\n            <img :src=\"albumDesc.blurPicUrl\" alt=\" \" />\r\n          </div>\r\n          <div class=\"detailsRight\">\r\n            <div style=\"margin-left: 0px; text-align: left; font-size: 20px\">\r\n              {{ albumDesc.name }}\r\n            </div>\r\n            <div style=\"font-size: 14px\">\r\n              <div class=\"aliasClass\">\r\n                <img\r\n                  class=\"artistPic\"\r\n                  :src=\"albumDesc.artist.img1v1Url\"\r\n                  alt=\" \"\r\n                />-\r\n                <span class=\"playListNickName\">{{\r\n                  albumDesc.artist.name\r\n                }}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div id=\"singleSongs\">\r\n          <div class=\"countLine\">专辑歌曲：{{ albumDesc.size }} 首</div>\r\n          <div v-if=\"albumSongs.length !== 0 \" >\r\n            <songlist :songlist=\"albumSongs\"></songlist>\r\n          </div>\r\n          <div v-else class=\"loading\">\r\n            <i class=\"el-icon-loading\"></i>\r\n          </div>\r\n          \r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div v-show=\"false\">\r\n      <aplayer :autoplay=\"true\" :fixed=\"true\" :audio=\"listen\" :liric-type=\"1\">\r\n      </aplayer>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getAlbumContent, getDownloadUrl } from \"@/api/api\";\r\nimport { transMusicTime, download } from \"@/utils/commonApi\";\r\nimport songlist from \"@/components/songlist.vue\";\r\n\r\nexport default {\r\n  components: {\r\n    songlist,\r\n  },\r\n  data() {\r\n    return {\r\n      listen: [],\r\n      albumId: \"\",\r\n      albumSongs: [],\r\n      albumDesc: {\r\n        artist: { img1v1Url: \"\" },\r\n      },\r\n    };\r\n  },\r\n  mounted() {\r\n    //进入专辑详情，判断是否有路由信息传入\r\n    if (this.$route.params.albumDesc) {\r\n      this.albumDesc = this.$route.params.albumDesc;\r\n      localStorage.setItem(\r\n        \"albumDesc\",\r\n        JSON.stringify(this.$route.params.albumDesc)\r\n      );\r\n      this.getAlbumContent();\r\n    } else {//没有路由信息，说明刷新了页面，则尝试使用之前的缓存信息\r\n        this.albumDesc = JSON.parse(localStorage.getItem(\"albumDesc\"));  \r\n    }\r\n    //获取专辑信息\r\n    this.getAlbumContent()\r\n\r\n\r\n\r\n  },\r\n  methods: {\r\n    getAlbumContent() {\r\n      var that = this;\r\n      let params = {\r\n        id: that.albumDesc.id,\r\n      };\r\n      getAlbumContent(params).then((res) => {\r\n        // console.log(\"专辑信息---：\", res.data.album);\r\n        // console.log(\"专辑歌曲---：\", res.data.songs);\r\n        that.albumSongs = res.data.songs;\r\n        that.albumDesc = res.data.album;\r\n        //给每个列表添加一个防抖\r\n        for (let item of that.albumSongs) {\r\n          that.$set(item, \"timer\", true);\r\n        }\r\n        let dt = \"dt\";\r\n        transMusicTime(that.albumSongs, dt);\r\n      });\r\n    },\r\n\r\n    //根据主题更换播放器颜色\r\n    // randomColor() {\r\n    //   return `#${((Math.random() * 0xffffff) << 0).toString(16)}`\r\n    // },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" >\r\n.descript {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  // color: aliceblue;\r\n  font-weight: bolder;\r\n  padding: 10px 20px;\r\n  border-radius: 20px 20px 0 0;\r\n  // background: rgba(221, 239, 243, 0.05);\r\n  box-sizing: border-box;\r\n}\r\n.list-wrap {\r\n  margin: 10px auto 0;\r\n  padding: 0 20px 10px;\r\n  width: 1120px;\r\n  border-radius: 20px;\r\n  // background: rgba(221, 239, 243, 0.05);\r\n  box-sizing: border-box;\r\n\r\n  .ul {\r\n    height: 630px;\r\n    border-radius: 0 0 10px 10px;\r\n    // background: rgba(221, 239, 243, 0.05);\r\n    overflow-x: hidden;\r\n\r\n    &::-webkit-scrollbar {\r\n      display: none;\r\n    }\r\n    .details {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      margin: 0 auto 10px;\r\n      padding: 10px;\r\n      width: 96%;\r\n      height: 170px;\r\n      // border: 1px solid rgb(97, 226, 183);\r\n      border-radius: 10px;\r\n      // background: rgba(221, 239, 243, 0.05);\r\n      box-sizing: border-box;\r\n\r\n      .details-img {\r\n        display: inline-block;\r\n        // width: 180px;\r\n        // height: 180px;\r\n        border-radius: 10px;\r\n\r\n        img {\r\n          width: 150px;\r\n          height: 150px;\r\n          border-radius: 10px;\r\n          transition: 0.2s;\r\n\r\n          &:hover {\r\n            transform: scale(1.03);\r\n          }\r\n        }\r\n      }\r\n\r\n      .detailsRight {\r\n        position: relative;\r\n        width: 820px;\r\n        height: 150px;\r\n        // background: rgb(181, 209, 152);\r\n\r\n        .option {\r\n          position: absolute;\r\n          bottom: 0;\r\n\r\n          .flexBetween {\r\n            .inline-block {\r\n              display: inline-block;\r\n              margin-right: 40px;\r\n              transition: 0.2s;\r\n\r\n              &:hover {\r\n                cursor: pointer;\r\n                // color: rgb(246, 255, 119);\r\n              }\r\n            }\r\n          }\r\n        }\r\n        .songTns {\r\n          width: 100%;\r\n          font-size: 14px;\r\n          overflow-x: hidden;\r\n\r\n          &::-webkit-scrollbar {\r\n            display: none;\r\n          }\r\n        }\r\n        .aliasClass {\r\n          position: absolute;\r\n          top: 69px;\r\n        }\r\n        .artistPic {\r\n          margin-right: 10px;\r\n          width: 30px;\r\n          height: 30px;\r\n          border-radius: 15px;\r\n        }\r\n        .playListNickName {\r\n          display: inline-block;\r\n          margin-right: 20px;\r\n        }\r\n      }\r\n    }\r\n    #singleSongs {\r\n      margin: 0 auto;\r\n      padding: 0px 10px 20px;\r\n      width: 96%;\r\n      height: 520px;\r\n      border-radius: 10px;\r\n      // background: rgba(95, 158, 160, 0.05);\r\n      box-sizing: border-box;\r\n      overflow-x: hidden;\r\n\r\n      &::-webkit-scrollbar {\r\n        display: none;\r\n      }\r\n    }\r\n  }\r\n}\r\n.pagination {\r\n  text-align: center;\r\n  background: none !important;\r\n\r\n  /deep/ .el-pager {\r\n    height: 30px !important;\r\n    background: none !important;\r\n  }\r\n  /deep/ .number,\r\n  /deep/ .btn-prev,\r\n  /deep/ .btn-quicknext,\r\n  /deep/ .btn-next,\r\n  /deep/ .el-input__inner,\r\n  /deep/ .more {\r\n    color: #f2fff7 !important;\r\n    background: transparent !important;\r\n  }\r\n  /deep/ .number:hover,\r\n  /deep/ .btn-prev:hover,\r\n  /deep/ .btn-quicknext:hover,\r\n  /deep/ .btn-next:hover,\r\n  /deep/ .el-input__inner:hover,\r\n  /deep/ .more:hover {\r\n    color: #f7a588 !important;\r\n  }\r\n  /deep/ .active {\r\n    color: #f7a588 !important;\r\n  }\r\n  /deep/ .el-input__inner {\r\n    border: none;\r\n  }\r\n  /deep/ .el-pagination__jump {\r\n    color: #f7dd88 !important;\r\n  }\r\n  .iconhover {\r\n    transition: 0.2s;\r\n    &:hover {\r\n      color: rgb(247, 243, 45);\r\n    }\r\n  }\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}