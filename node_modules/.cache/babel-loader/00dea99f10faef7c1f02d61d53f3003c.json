{"ast":null,"code":"var _typeof = require(\"D:/Desktop/git\\u5DE5\\u4F5C\\u533A/cloudMusic-Source-Code/node_modules/@babel/runtime/helpers/typeof.js\").default;\n\nrequire(\"core-js/modules/es.regexp.constructor.js\");\n\nrequire(\"core-js/modules/es.regexp.dot-all.js\");\n\nrequire(\"core-js/modules/es.regexp.exec.js\");\n\nrequire(\"core-js/modules/es.regexp.sticky.js\");\n\nrequire(\"core-js/modules/es.regexp.to-string.js\");\n\nrequire(\"core-js/modules/es.string.replace.js\");\n\n/*!\n * tiny-cookie - A tiny cookie manipulation plugin\n * https://github.com/Alex1990/tiny-cookie\n * Under the MIT license | (c) Alex Chao\n */\n!function (root, factory) {\n  // Uses CommonJS, AMD or browser global to create a jQuery plugin.\n  // See: https://github.com/umdjs/umd\n  if (typeof define === 'function' && define.amd) {\n    // Expose this plugin as an AMD module. Register an anonymous module.\n    define(factory);\n  } else if ((typeof exports === \"undefined\" ? \"undefined\" : _typeof(exports)) === 'object') {\n    // Node/CommonJS module\n    module.exports = factory();\n  } else {\n    // Browser globals \n    root.Cookie = factory();\n  }\n}(this, function () {\n  'use strict'; // The public function which can get/set/remove cookie.\n\n  function Cookie(key, value, opts) {\n    if (value === void 0) {\n      return Cookie.get(key);\n    } else if (value === null) {\n      Cookie.remove(key);\n    } else {\n      Cookie.set(key, value, opts);\n    }\n  } // Check if the cookie is enabled.\n\n\n  Cookie.enabled = function () {\n    var key = '__test_key';\n    var enabled;\n    document.cookie = key + '=1';\n    enabled = !!document.cookie;\n    if (enabled) Cookie.remove(key);\n    return enabled;\n  }; // Get the cookie value by the key.\n\n\n  Cookie.get = function (key, raw) {\n    if (typeof key !== 'string' || !key) return null;\n    key = '(?:^|; )' + escapeRe(key) + '(?:=([^;]*?))?(?:;|$)';\n    var reKey = new RegExp(key);\n    var res = reKey.exec(document.cookie);\n    return res !== null ? raw ? res[1] : decodeURIComponent(res[1]) : null;\n  }; // Get the cookie's value without decoding.\n\n\n  Cookie.getRaw = function (key) {\n    return Cookie.get(key, true);\n  }; // Set a cookie.\n\n\n  Cookie.set = function (key, value, raw, opts) {\n    if (raw !== true) {\n      opts = raw;\n      raw = false;\n    }\n\n    opts = opts ? convert(opts) : convert({});\n    var cookie = key + '=' + (raw ? value : encodeURIComponent(value)) + opts;\n    document.cookie = cookie;\n  }; // Set a cookie without encoding the value.\n\n\n  Cookie.setRaw = function (key, value, opts) {\n    Cookie.set(key, value, true, opts);\n  }; // Remove a cookie by the specified key.\n\n\n  Cookie.remove = function (key) {\n    Cookie.set(key, 'a', {\n      expires: new Date()\n    });\n  }; // Helper function\n  // ---------------\n  // Escape special characters.\n\n\n  function escapeRe(str) {\n    return str.replace(/[.*+?^$|[\\](){}\\\\-]/g, '\\\\$&');\n  } // Convert an object to a cookie option string.\n\n\n  function convert(opts) {\n    var res = '';\n\n    for (var p in opts) {\n      if (opts.hasOwnProperty(p)) {\n        if (p === 'expires') {\n          var expires = opts[p];\n\n          if (_typeof(expires) !== 'object') {\n            expires += typeof expires === 'number' ? 'D' : '';\n            expires = computeExpires(expires);\n          }\n\n          opts[p] = expires.toUTCString();\n        }\n\n        if (p === 'secure') {\n          if (opts[p]) {\n            res += ';' + p;\n          }\n\n          continue;\n        }\n\n        res += ';' + p + '=' + opts[p];\n      }\n    }\n\n    if (!opts.hasOwnProperty('path')) {\n      res += ';path=/';\n    }\n\n    return res;\n  } // Return a future date by the given string.\n\n\n  function computeExpires(str) {\n    var expires = new Date();\n    var lastCh = str.charAt(str.length - 1);\n    var value = parseInt(str, 10);\n\n    switch (lastCh) {\n      case 'Y':\n        expires.setFullYear(expires.getFullYear() + value);\n        break;\n\n      case 'M':\n        expires.setMonth(expires.getMonth() + value);\n        break;\n\n      case 'D':\n        expires.setDate(expires.getDate() + value);\n        break;\n\n      case 'h':\n        expires.setHours(expires.getHours() + value);\n        break;\n\n      case 'm':\n        expires.setMinutes(expires.getMinutes() + value);\n        break;\n\n      case 's':\n        expires.setSeconds(expires.getSeconds() + value);\n        break;\n\n      default:\n        expires = new Date(str);\n    }\n\n    return expires;\n  }\n\n  return Cookie;\n});","map":{"version":3,"sources":["D:/Desktop/git工作区/cloudMusic-Source-Code/node_modules/tiny-cookie/tiny-cookie.js"],"names":["root","factory","define","amd","exports","module","Cookie","key","value","opts","get","remove","set","enabled","document","cookie","raw","escapeRe","reKey","RegExp","res","exec","decodeURIComponent","getRaw","convert","encodeURIComponent","setRaw","expires","Date","str","replace","p","hasOwnProperty","computeExpires","toUTCString","lastCh","charAt","length","parseInt","setFullYear","getFullYear","setMonth","getMonth","setDate","getDate","setHours","getHours","setMinutes","getMinutes","setSeconds","getSeconds"],"mappings":"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","sourcesContent":["/*!\n * tiny-cookie - A tiny cookie manipulation plugin\n * https://github.com/Alex1990/tiny-cookie\n * Under the MIT license | (c) Alex Chao\n */\n\n!(function(root, factory) {\n\n  // Uses CommonJS, AMD or browser global to create a jQuery plugin.\n  // See: https://github.com/umdjs/umd\n  if (typeof define === 'function' && define.amd) {\n    // Expose this plugin as an AMD module. Register an anonymous module.\n    define(factory);\n  } else if (typeof exports === 'object') {\n    // Node/CommonJS module\n    module.exports = factory();\n  } else {\n    // Browser globals \n    root.Cookie = factory();\n  }\n\n}(this, function() {\n\n  'use strict';\n\n  // The public function which can get/set/remove cookie.\n  function Cookie(key, value, opts) {\n    if (value === void 0) {\n      return Cookie.get(key);\n    } else if (value === null) {\n      Cookie.remove(key);\n    } else {\n      Cookie.set(key, value, opts);\n    }\n  }\n\n  // Check if the cookie is enabled.\n  Cookie.enabled = function() {\n    var key = '__test_key';\n    var enabled;\n\n    document.cookie = key + '=1';\n    enabled = !!document.cookie;\n\n    if (enabled) Cookie.remove(key);\n\n    return enabled;\n  };\n\n  // Get the cookie value by the key.\n  Cookie.get = function(key, raw) {\n    if (typeof key !== 'string' || !key) return null;\n\n    key = '(?:^|; )' + escapeRe(key) + '(?:=([^;]*?))?(?:;|$)';\n\n    var reKey = new RegExp(key);\n    var res = reKey.exec(document.cookie);\n\n    return res !== null ? (raw ? res[1] : decodeURIComponent(res[1])) : null;\n  };\n\n  // Get the cookie's value without decoding.\n  Cookie.getRaw = function(key) {\n    return Cookie.get(key, true);\n  };\n\n  // Set a cookie.\n  Cookie.set = function(key, value, raw, opts) {\n    if (raw !== true) {\n      opts = raw;\n      raw = false;\n    }\n    opts = opts ? convert(opts) : convert({});\n    var cookie = key + '=' + (raw ? value : encodeURIComponent(value)) + opts;\n    document.cookie = cookie;\n  };\n\n  // Set a cookie without encoding the value.\n  Cookie.setRaw = function(key, value, opts) {\n    Cookie.set(key, value, true, opts);\n  };\n\n  // Remove a cookie by the specified key.\n  Cookie.remove = function(key) {\n    Cookie.set(key, 'a', { expires: new Date() });\n  };\n\n  // Helper function\n  // ---------------\n\n  // Escape special characters.\n  function escapeRe(str) {\n    return str.replace(/[.*+?^$|[\\](){}\\\\-]/g, '\\\\$&');\n  }\n\n  // Convert an object to a cookie option string.\n  function convert(opts) {\n    var res = '';\n\n    for (var p in opts) {\n      if (opts.hasOwnProperty(p)) {\n\n        if (p === 'expires') {\n          var expires = opts[p];\n          if (typeof expires !== 'object') {\n            expires += typeof expires === 'number' ? 'D' : '';\n            expires = computeExpires(expires);\n          }\n          opts[p] = expires.toUTCString();\n        }\n\n        if (p === 'secure') {\n          if (opts[p]) {\n            res += ';' + p;\n          }\n\n          continue;\n        }\n\n        res += ';' + p + '=' + opts[p];\n      }\n    }\n\n    if (!opts.hasOwnProperty('path')) {\n      res += ';path=/';\n    }\n\n    return res;\n  }\n\n  // Return a future date by the given string.\n  function computeExpires(str) {\n    var expires = new Date();\n    var lastCh = str.charAt(str.length - 1);\n    var value = parseInt(str, 10);\n\n    switch (lastCh) {\n      case 'Y': expires.setFullYear(expires.getFullYear() + value); break;\n      case 'M': expires.setMonth(expires.getMonth() + value); break;\n      case 'D': expires.setDate(expires.getDate() + value); break;\n      case 'h': expires.setHours(expires.getHours() + value); break;\n      case 'm': expires.setMinutes(expires.getMinutes() + value); break;\n      case 's': expires.setSeconds(expires.getSeconds() + value); break;\n      default: expires = new Date(str);\n    }\n\n    return expires;\n  }\n\n  return Cookie;\n\n}));\n"]},"metadata":{},"sourceType":"script"}