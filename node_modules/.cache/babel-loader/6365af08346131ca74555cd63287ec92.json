{"ast":null,"code":"import _createForOfIteratorHelper from \"D:/data/\\u684C\\u9762/git/cloudMusic-Source-Code/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getDownloadUrl, getPlaylistDetail as _getPlaylistDetail, getSongList as _getSongList, getPlayListComment as _getPlayListComment } from '@/api/api';\nimport { getTimestamp, transMusicTime, download } from '@/utils/commonApi';\nimport songlist from '@/components/songlist.vue';\nexport default {\n  components: {\n    songlist: songlist\n  },\n  data: function data() {\n    return {\n      //歌单id\n      songListId: '',\n      //评论分页\n      currentPage: 1,\n      // 歌曲数组\n      musicList: [],\n      //下载音乐的地址\n      DownloadSongUrl: '',\n      //mv地址\n      mvUrl: '',\n      //搜索歌曲总数\n      count: '',\n      playListComment: [{\n        user: {\n          avatarUrl: ''\n        }\n      }],\n      commentCount: '',\n      //MV\n      songMV: [],\n      //歌单详情\n      playListDetail: {\n        creator: {\n          avatarUrl: ''\n        }\n      }\n    };\n  },\n  mounted: function mounted() {\n    //缓存id,解决params数据在刷新页面后丢失，导致无法获取到歌单id\n    if (this.$route.params.songListId) {\n      localStorage.setItem('songListId', this.$route.params.songListId);\n    } // 判断是否使用缓存\n\n\n    this.$route.params.songListId ? this.songListId = this.$route.params.songListId : this.songListId = localStorage.getItem('songListId');\n    this.getPlaylistDetail();\n    this.getSongList();\n    this.getPlayListComment();\n  },\n  methods: {\n    //切换歌单评论\n    playListHandleCurrentChange: function playListHandleCurrentChange(currentPage) {\n      var that = this;\n      that.currentPage = currentPage;\n      that.getPlayListComment();\n    },\n    //获取歌单评论\n    getPlayListComment: function getPlayListComment() {\n      var _this = this;\n\n      var that = this;\n      var params = {\n        id: that.songListId,\n        limit: 7,\n        offset: (that.currentPage - 1) * 7\n      };\n\n      _getPlayListComment(params).then(function (res) {\n        // console.log(\"歌单评论：\", res.data);\n        _this.playListComment = res.data.comments;\n        that.commentCount = res.data.total; // console.log(\"歌曲评论：\", res.data);\n      });\n    },\n    //分页\n    handleCurrentChange: function handleCurrentChange(currentPage) {\n      // console.log(`当前页: ${currentPage}`);\n      this.currentPage = currentPage;\n      var that = this;\n      that.getPlaylistDetail(currentPage);\n    },\n    getPlaylistDetail: function getPlaylistDetail() {\n      //传入歌单id获取歌曲id和歌单详情\n      var that = this;\n      var params = {\n        id: that.songListId\n      };\n\n      _getPlaylistDetail(params).then(function (res) {\n        // console.log(\"----------------:\", res.data.privileges); //歌单歌曲\n        // console.log(\"--歌单详情-------:\", res.data.playlist); //歌单歌曲\n        that.playListDetail = res.data.playlist; // that.musicList = that.playListDetail.tracks;\n      });\n    },\n    getSongList: function getSongList() {\n      //获取歌单所有歌曲\n      var that = this;\n      var params = {\n        id: that.songListId\n      };\n\n      _getSongList(params).then(function (res) {\n        that.musicList = res.data.songs; //给每个列表添加一个防抖\n\n        var _iterator = _createForOfIteratorHelper(that.musicList),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var item = _step.value;\n            that.$set(item, 'timer', true);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n\n        transMusicTime(that.musicList, 'dt');\n      });\n    } // collectPlaylist () {\n    //   // let a = encodeURIComponent(\"NMTID=00OzCh7YMHCWQm1ZU9Vogn9qK4feTAAAAGCc3SE0Q; Max-Age=315360000; Expires=Tue, 03 Aug 2032 13:59:52 GMT; Path=/;;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/eapi/feedback; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/openapi/clientlog; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/wapi/feedback; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/wapi/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/neapi/clientlog; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/neapi/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/neapi/feedback; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/eapi/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/eapi/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/api/feedback; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/openapi/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/eapi/feedback; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/wapi/clientlog; HTTPOnly;MUSIC_U=9611c371e6419e2c184a366a7ca936bf0fc69a8d2f6be4455ded1d5066ff6a4b993166e004087dd367fe124475fa63054c4bb8a8a030b49b26de8349c63f526ad40a31ebc291eb4ad4dbf082a8813684; Max-Age=15552000; Expires=Thu, 02 Feb 2023 13:59:52 GMT; Path=/; HTTPOnly;__csrf=e0281d26dcbef96212ed4b7db9e68461; Max-Age=1296010; Expires=Sun, 21 Aug 2022 14:00:02 GMT; Path=/;;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/neapi/feedback; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/weapi/feedback; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/api/feedback; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/weapi/feedback; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/weapi/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/api/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/wapi/feedback; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/api/clientlog; HTTPOnly;MUSIC_SNS=; Max-Age=0; Expires=Sat, 06 Aug 2022 13:59:52 GMT; Path=/;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/weapi/clientlog; HTTPOnly\")\n    //   // let cookie = \"MUSIC_SNS=; Max-Age=0; Expires=Sun, 07 Aug 2022 07:29:20 GMT; Path=/;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/eapi/feedback; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/api/feedback; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/wapi/clientlog; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/openapi/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/api/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/openapi/clientlog; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/eapi/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/weapi/feedback; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/wapi/feedback; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/api/feedback; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/neapi/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/wapi/feedback; HTTPOnly;NMTID=00O7WKRxVwcZw0Uw0D6ubODlxpdLj4AAAGCdzVVLw; Max-Age=315360000; Expires=Wed, 04 Aug 2032 07:29:20 GMT; Path=/;;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/weapi/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/neapi/feedback; HTTPOnly;MUSIC_U=9611c371e6419e2c184a366a7ca936bfe793a0a6f0d4dbbbb88db8dba5edf83d993166e004087dd37a99ad5471c3636273479095928a9cef26de8349c63f526ad40a31ebc291eb4ad4dbf082a8813684; Max-Age=15552000; Expires=Fri, 03 Feb 2023 07:29:20 GMT; Path=/; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/weapi/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/eapi/clientlog; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/weapi/feedback; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/neapi/feedback; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/eapi/feedback; HTTPOnly;__csrf=d1f2fa83b3815f03a3448349af4ecc04; Max-Age=1296010; Expires=Mon, 22 Aug 2022 07:29:30 GMT; Path=/;;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/api/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/wapi/clientlog; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/neapi/clientlog; HTTPOnly\"\n    //   // this.$store.commit('setTOKEN', cookie)\n    //   let params = {\n    //     t: '1',\n    //     id: this.songListId,\n    //     // timestamp: getTimestamp()\n    //     cookie: getToken(),\n    //   }\n    //   collectPlaylist(params).then((res) => {\n    //     console.log(res, '收藏返回')\n    //     if (res.data.code === 200) {\n    //       this.$message({\n    //         type: 'success',\n    //         message: '收藏成功'\n    //       })\n    //     }\n    //   })\n    // }\n\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkFA,SACAA,cADA,EAEAC,uCAFA,EAGAC,2BAHA,EAIAC,yCAJA,QAKA,WALA;AAMA;AACA;AACA;AACAC;AACAC;AADA,GADA;AAIAC,MAJA,kBAIA;AACA;AACA;AACAC,oBAFA;AAGA;AACAC,oBAJA;AAKA;AACAC,mBANA;AAOA;AACAC,yBARA;AASA;AACAC,eAVA;AAWA;AACAC,eAZA;AAaAC,wBACA;AACAC;AACAC;AADA;AADA,OADA,CAbA;AAoBAC,sBApBA;AAqBA;AACAC,gBAtBA;AAuBA;AACAC;AAAAC;AAAAJ;AAAA;AAAA;AAxBA;AA0BA,GA/BA;AAgCAK,SAhCA,qBAgCA;AACA;AACA;AACAC;AACA,KAJA,CAKA;;;AACA,oCACA,+CADA,GAEA,oDAFA;AAGA;AACA;AACA;AACA,GA5CA;AA6CAC;AACA;AACAC,+BAFA,uCAEAf,WAFA,EAEA;AACA;AACAgB;AACAA;AACA,KANA;AAOA;AACArB,sBARA,gCAQA;AAAA;;AACA;AACA;AACAsB,2BADA;AAEAC,gBAFA;AAGAC;AAHA;;AAKAxB;AACA;AACA;AACAqB,2CAHA,CAIA;AACA,OALA;AAMA,KArBA;AAuBA;AACAI;AACA;AACA;AACA;AACAJ;AACA,KA7BA;AAgCAvB,qBAhCA,+BAgCA;AACA;AACA;AACA;AACAwB;AADA;;AAGAxB;AACA;AACA;AACAuB,gDAHA,CAIA;AACA,OALA;AAMA,KA5CA;AA6CAtB,eA7CA,yBA6CA;AACA;AACA;AACA;AACAuB;AADA;;AAGAvB;AACAsB,wCADA,CAEA;;AAFA,mDAGAA,cAHA;AAAA;;AAAA;AAGA;AAAA;AACAA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;;AAMAK;AACA,OAPA;AAQA,KA3DA,CA4DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAhFA;AA7CA","names":["getDownloadUrl","getPlaylistDetail","getSongList","getPlayListComment","components","songlist","data","songListId","currentPage","musicList","DownloadSongUrl","mvUrl","count","playListComment","user","avatarUrl","commentCount","songMV","playListDetail","creator","mounted","localStorage","methods","playListHandleCurrentChange","that","id","limit","offset","handleCurrentChange","transMusicTime"],"sourceRoot":"src/views/playListDetails","sources":["playListDetails.vue"],"sourcesContent":["<template>\r\n  <div class=\"list-wrap\">\r\n    <h3>歌单详情</h3>\r\n    <div class=\"descript\"></div>\r\n    <div>\r\n      <div class=\"wrap2\">\r\n        <!-- 歌单信息 -->\r\n        <div class=\"details\">\r\n          <div class=\"details-img\">\r\n            <img :src=\"playListDetail.coverImgUrl\"\r\n                 alt=\"\" />\r\n          </div>\r\n          <div class=\"detailsRight\">\r\n            <h3 style=\"margin-left: 0px; text-align: left; font-size: 20px\">\r\n              {{ playListDetail.name }}\r\n            </h3>\r\n            <div style=\"margin: 10px 0 10px 0; height: 30px; font-size: 14px\">\r\n              <img :src=\"playListDetail.creator.avatarUrl\"\r\n                   alt=\"\"\r\n                   style=\"width: 30px; height: 30px; border-radius: 15px\" />\r\n              <span class=\"playListNickName\">&nbsp;&nbsp;&nbsp;&nbsp;{{\r\n                  playListDetail.creator.nickname\r\n                }}&nbsp;&nbsp;</span><span v-if=\"playListDetail.creator.signature\">&nbsp;&nbsp;-&nbsp;&nbsp;{{\r\n                  playListDetail.creator.signature\r\n                }}</span>\r\n            </div>\r\n            <div style=\"margin: 10px 0 10px 0; height: 18px; font-size: 14px\">\r\n              <span>标签:&nbsp;&nbsp;</span><span v-for=\"(tag, index) in playListDetail.tags\"\r\n                    :key=\"index\">{{ tag }}&nbsp;</span>\r\n            </div>\r\n            <div class=\"playListIntro\"\r\n                 style=\"\">\r\n              <span style=\"display: inline-block;text-indent: 2em;\">\r\n                {{ playListDetail.description }}\r\n              </span>\r\n            </div>\r\n            <!-- <i class=\"iFont el-icon-star-off\"\r\n               @click=\"collectPlaylist\"></i> -->\r\n          </div>\r\n        </div>\r\n        <!-- 歌单歌曲列表 -->\r\n        <h3 style=\"margin: 5px 0 10px 0\">歌曲 -<i v-if=\"musicList.length === 0\"\r\n             class=\"el-icon-loading\"></i> <span style=\"font-size:18px;\"\r\n                v-if=\"musicList.length !==0\">{{musicList.length }}</span> 首 </h3>\r\n\r\n        <ul class=\"wrap-center\">\r\n          <songlist :songlist=\"musicList\"></songlist>\r\n        </ul>\r\n        <div style=\"padding: 0px 50px\">\r\n          <h3 style=\"margin: 5px 0 10px 0\">评论({{ commentCount }}条)</h3>\r\n          <div class=\"hoverBackColor\"\r\n               v-for=\"item in playListComment\"\r\n               :key=\"item.id\">\r\n            <img :src=\"item.user.avatarUrl\"\r\n                 style=\"width: 50px; border-radius: 25px\" />\r\n            <span style=\"display: inline-block; margin-left: 10px; font-size: 15px\">{{ item.user.nickname }}&nbsp;&nbsp;:&nbsp;&nbsp;</span>\r\n            <span style=\"margin-left: 20px; width: 750px\">\r\n              {{ item.content }}\r\n            </span>\r\n            <div style=\"height: 30px\">\r\n              <span style=\"float: right; width: 130px\">&nbsp;&nbsp;时间：{{ item.timeStr }}</span><span style=\"float: right\">{{ item.likedCount }} 赞&nbsp;&nbsp;&nbsp;</span>\r\n            </div>\r\n          </div>\r\n\r\n          <div style=\"text-align: center\">\r\n            <el-pagination v-if=\"commentCount != 0\"\r\n                           @current-change=\"playListHandleCurrentChange\"\r\n                           :current-page.sync=\"currentPage\"\r\n                           :page-size=\"7\"\r\n                           layout=\"prev, pager, next, jumper\"\r\n                           :total=\"commentCount\"\r\n                           :background=\"true\">\r\n            </el-pagination>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  getDownloadUrl,\r\n  getPlaylistDetail,\r\n  getSongList,\r\n  getPlayListComment,\r\n} from '@/api/api'\r\nimport { getTimestamp, transMusicTime, download } from '@/utils/commonApi'\r\nimport songlist from '@/components/songlist.vue'\r\nexport default {\r\n  components:{\r\n    songlist\r\n  },\r\n  data() {\r\n    return {\r\n      //歌单id\r\n      songListId: '',\r\n      //评论分页\r\n      currentPage: 1,\r\n      // 歌曲数组\r\n      musicList: [],\r\n      //下载音乐的地址\r\n      DownloadSongUrl: '',\r\n      //mv地址\r\n      mvUrl: '',\r\n      //搜索歌曲总数\r\n      count: '',\r\n      playListComment: [\r\n        {\r\n          user: {\r\n            avatarUrl: '',\r\n          },\r\n        },\r\n      ],\r\n      commentCount: '',\r\n      //MV\r\n      songMV: [],\r\n      //歌单详情\r\n      playListDetail: { creator: { avatarUrl: '' } },\r\n    }\r\n  },\r\n  mounted() {\r\n    //缓存id,解决params数据在刷新页面后丢失，导致无法获取到歌单id\r\n    if (this.$route.params.songListId) {\r\n      localStorage.setItem('songListId', this.$route.params.songListId)\r\n    }\r\n    // 判断是否使用缓存\r\n    this.$route.params.songListId\r\n      ? (this.songListId = this.$route.params.songListId)\r\n      : (this.songListId = localStorage.getItem('songListId'))\r\n    this.getPlaylistDetail()\r\n    this.getSongList()\r\n    this.getPlayListComment()\r\n  },\r\n  methods: {\r\n    //切换歌单评论\r\n    playListHandleCurrentChange(currentPage) {\r\n      var that = this\r\n      that.currentPage = currentPage\r\n      that.getPlayListComment()\r\n    },\r\n    //获取歌单评论\r\n    getPlayListComment() {\r\n      var that = this\r\n      let params = {\r\n        id: that.songListId,\r\n        limit: 7,\r\n        offset: (that.currentPage - 1) * 7,\r\n      }\r\n      getPlayListComment(params).then((res) => {\r\n        // console.log(\"歌单评论：\", res.data);\r\n        this.playListComment = res.data.comments\r\n        that.commentCount = res.data.total\r\n        // console.log(\"歌曲评论：\", res.data);\r\n      })\r\n    },\r\n\r\n    //分页\r\n    handleCurrentChange: function (currentPage) {\r\n      // console.log(`当前页: ${currentPage}`);\r\n      this.currentPage = currentPage\r\n      var that = this\r\n      that.getPlaylistDetail(currentPage)\r\n    },\r\n\r\n   \r\n    getPlaylistDetail() {\r\n      //传入歌单id获取歌曲id和歌单详情\r\n      var that = this\r\n      let params = {\r\n        id: that.songListId,\r\n      }\r\n      getPlaylistDetail(params).then((res) => {\r\n        // console.log(\"----------------:\", res.data.privileges); //歌单歌曲\r\n        // console.log(\"--歌单详情-------:\", res.data.playlist); //歌单歌曲\r\n        that.playListDetail = res.data.playlist\r\n        // that.musicList = that.playListDetail.tracks;\r\n      })\r\n    },\r\n    getSongList() {\r\n      //获取歌单所有歌曲\r\n      var that = this\r\n      let params = {\r\n        id: that.songListId,\r\n      }\r\n      getSongList(params).then((res) => {\r\n        that.musicList = res.data.songs\r\n        //给每个列表添加一个防抖\r\n        for (let item of that.musicList) {\r\n          that.$set(item, 'timer', true)\r\n        }\r\n        transMusicTime(that.musicList, 'dt')\r\n      })\r\n    },\r\n    // collectPlaylist () {\r\n    //   // let a = encodeURIComponent(\"NMTID=00OzCh7YMHCWQm1ZU9Vogn9qK4feTAAAAGCc3SE0Q; Max-Age=315360000; Expires=Tue, 03 Aug 2032 13:59:52 GMT; Path=/;;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/eapi/feedback; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/openapi/clientlog; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/wapi/feedback; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/wapi/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/neapi/clientlog; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/neapi/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/neapi/feedback; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/eapi/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/eapi/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/api/feedback; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/openapi/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/eapi/feedback; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/wapi/clientlog; HTTPOnly;MUSIC_U=9611c371e6419e2c184a366a7ca936bf0fc69a8d2f6be4455ded1d5066ff6a4b993166e004087dd367fe124475fa63054c4bb8a8a030b49b26de8349c63f526ad40a31ebc291eb4ad4dbf082a8813684; Max-Age=15552000; Expires=Thu, 02 Feb 2023 13:59:52 GMT; Path=/; HTTPOnly;__csrf=e0281d26dcbef96212ed4b7db9e68461; Max-Age=1296010; Expires=Sun, 21 Aug 2022 14:00:02 GMT; Path=/;;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/neapi/feedback; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/weapi/feedback; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/api/feedback; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/weapi/feedback; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/weapi/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/api/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/wapi/feedback; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/api/clientlog; HTTPOnly;MUSIC_SNS=; Max-Age=0; Expires=Sat, 06 Aug 2022 13:59:52 GMT; Path=/;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/weapi/clientlog; HTTPOnly\")\r\n    //   // let cookie = \"MUSIC_SNS=; Max-Age=0; Expires=Sun, 07 Aug 2022 07:29:20 GMT; Path=/;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/eapi/feedback; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/api/feedback; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/wapi/clientlog; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/openapi/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/api/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/openapi/clientlog; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/eapi/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/weapi/feedback; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/wapi/feedback; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/api/feedback; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/neapi/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/wapi/feedback; HTTPOnly;NMTID=00O7WKRxVwcZw0Uw0D6ubODlxpdLj4AAAGCdzVVLw; Max-Age=315360000; Expires=Wed, 04 Aug 2032 07:29:20 GMT; Path=/;;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/weapi/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/neapi/feedback; HTTPOnly;MUSIC_U=9611c371e6419e2c184a366a7ca936bfe793a0a6f0d4dbbbb88db8dba5edf83d993166e004087dd37a99ad5471c3636273479095928a9cef26de8349c63f526ad40a31ebc291eb4ad4dbf082a8813684; Max-Age=15552000; Expires=Fri, 03 Feb 2023 07:29:20 GMT; Path=/; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/weapi/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/eapi/clientlog; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/weapi/feedback; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/neapi/feedback; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/eapi/feedback; HTTPOnly;__csrf=d1f2fa83b3815f03a3448349af4ecc04; Max-Age=1296010; Expires=Mon, 22 Aug 2022 07:29:30 GMT; Path=/;;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/api/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/wapi/clientlog; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/neapi/clientlog; HTTPOnly\"\r\n    //   // this.$store.commit('setTOKEN', cookie)\r\n    //   let params = {\r\n    //     t: '1',\r\n    //     id: this.songListId,\r\n    //     // timestamp: getTimestamp()\r\n    //     cookie: getToken(),\r\n    //   }\r\n    //   collectPlaylist(params).then((res) => {\r\n    //     console.log(res, '收藏返回')\r\n    //     if (res.data.code === 200) {\r\n    //       this.$message({\r\n    //         type: 'success',\r\n    //         message: '收藏成功'\r\n    //       })\r\n    //     }\r\n\r\n    //   })\r\n    // }\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\nh3 {\r\n  height: 30px;\r\n  line-height: 30px;\r\n  text-align: center;\r\n}\r\n.descript {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  color: aliceblue;\r\n  font-weight: bolder;\r\n  padding: 10px 20px;\r\n  border-radius: 20px 20px 0 0;\r\n  background: rgba(95, 158, 160, 0.11);\r\n  box-sizing: border-box;\r\n}\r\n.list-wrap {\r\n  margin: 10px auto 0;\r\n  padding: 0 20px 10px;\r\n  width: 1120px;\r\n  border-radius: 20px;\r\n  background: rgba(95, 158, 160, 0.11);\r\n  box-sizing: border-box;\r\n\r\n  .wrap2 {\r\n    height: 680px;\r\n    border-radius: 0 0 10px 10px;\r\n    background: rgba(95, 158, 160, 0.11);\r\n    overflow-x: hidden;\r\n\r\n    &::-webkit-scrollbar {\r\n      display: none;\r\n    }\r\n    .details {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      margin: 0 auto;\r\n      padding: 10px;\r\n      width: 98%;\r\n      height: 200px;\r\n      // border: 1px solid rgb(97, 226, 183);\r\n      border-radius: 10px;\r\n      background: rgba(34, 173, 197, 0.055);\r\n      box-sizing: border-box;\r\n\r\n      .details-img {\r\n        display: inline-block;\r\n        // width: 180px;\r\n        // height: 180px;\r\n        border-radius: 10px;\r\n\r\n        img {\r\n          width: 180px;\r\n          height: 180px;\r\n          border-radius: 10px;\r\n          transition: 0.2s;\r\n\r\n          &:hover {\r\n            transform: scale(1.03);\r\n          }\r\n        }\r\n      }\r\n\r\n      .detailsRight {\r\n        position: relative;\r\n        width: 820px;\r\n        height: 180px;\r\n        // background: rgb(181, 209, 152);\r\n\r\n        .playListIntro {\r\n          margin: 10px 0 10px 0;\r\n          width: 100%;\r\n          max-height: 75px;\r\n          font-size: 14px;\r\n          overflow-x: hidden;\r\n\r\n          &::-webkit-scrollbar {\r\n            display: none;\r\n          }\r\n        }\r\n        .playListNickName {\r\n          color: antiquewhite;\r\n        }\r\n      }\r\n    }\r\n    .wrap-center {\r\n      max-height: 500px;\r\n      overflow-x: hidden;\r\n      // border-top: 1px exclusion chocolate;\r\n\r\n      &::-webkit-scrollbar {\r\n        display: none;\r\n      }\r\n      .music-list {\r\n        position: relative;\r\n        display: flex;\r\n        margin: 5px auto;\r\n        padding: 0 10px;\r\n        width: 96%;\r\n        height: 30px;\r\n        line-height: 30px;\r\n        overflow: hidden;\r\n        color: rgba(255, 255, 255, 1);\r\n        font-weight: bolder;\r\n        -o-text-overflow: ellipsis;\r\n        text-overflow: ellipsis;\r\n        border-radius: 5px;\r\n        background: rgba(59, 165, 168, 0.048);\r\n        transition: 0.2s;\r\n\r\n        .music-list-span {\r\n          display: inline-block;\r\n          width: 270px;\r\n          text-align: center;\r\n          overflow: hidden;\r\n          text-overflow: ellipsis;\r\n          white-space: nowrap;\r\n        }\r\n        .option {\r\n          position: absolute;\r\n          padding-left: 150px;\r\n          width: 240px;\r\n          right: 10px;\r\n          box-sizing: border-box;\r\n\r\n          span {\r\n            display: inline-block;\r\n            width: 30px;\r\n            &:hover {\r\n              cursor: pointer;\r\n            }\r\n          }\r\n        }\r\n\r\n        &:hover {\r\n          color: aquamarine;\r\n          transform: scale(1.01);\r\n          // background: rgba(146, 240, 243, 0.247);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/deep/ .el-pager {\r\n  height: 30px !important;\r\n  background: none !important;\r\n}\r\n/deep/ .number,\r\n/deep/ .btn-prev,\r\n/deep/ .btn-quicknext,\r\n/deep/ .btn-next,\r\n/deep/ .el-input__inner,\r\n/deep/ .more {\r\n  color: #f2fff7 !important;\r\n  background: transparent !important;\r\n}\r\n/deep/ .number:hover,\r\n/deep/ .btn-prev:hover,\r\n/deep/ .btn-quicknext:hover,\r\n/deep/ .btn-next:hover,\r\n/deep/ .el-input__inner:hover,\r\n/deep/ .more:hover {\r\n  color: #f7a588 !important;\r\n}\r\n/deep/ .active {\r\n  color: #f7a588 !important;\r\n}\r\n/deep/ .el-input__inner {\r\n  border: none;\r\n}\r\n/deep/ .el-pagination__jump {\r\n  color: #f7dd88 !important;\r\n}\r\n//   btn-quickprev el-icon-more\r\n.iconhover {\r\n  transition: 0.2s;\r\n  &:hover {\r\n    color: rgb(247, 243, 45);\r\n  }\r\n}\r\n// .iFont {\r\n//   position: absolute;\r\n//   top: 0;\r\n//   right: 5px;\r\n//   font-size: 25px;\r\n//   &:hover {\r\n//     cursor: pointer;\r\n//     color: rgb(215, 233, 57);\r\n//   }\r\n// }\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}