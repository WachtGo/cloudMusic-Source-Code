{"ast":null,"code":"import _asyncToGenerator from \"D:/data/\\u684C\\u9762/git/cloudMusic-Source-Code/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"regenerator-runtime/runtime.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport QRCode from \"qrcode\";\nimport { getqrKey, getqrImg, getqrStatus as _getqrStatus, getloginStatus as _getloginStatus, loginOut as _loginOut } from \"@/api/login\"; // import { mapMutations, mapState } from \"vuex\";\n\nimport { getuserDetail, getAccount } from \"@/api/user\";\nimport { cookieParser, getTimestamp } from \"@/utils/commonApi\";\nimport { getCookie, removeCookie, setCookie } from \"@/utils/cookie\";\nexport default {\n  name: \"Login\",\n  data: function data() {\n    return {\n      loginWrapShow: false,\n      //展示登录窗口\n      qrStatus: \"\",\n      qrtimer: null,\n      key: \"\",\n      user: {\n        avatarUrl: \"\",\n        nickname: \"\"\n      },\n      loginStatus: false,\n      //登录状态\n      qrloading: false //点击判断是否已经授权时的加载图标状态\n\n    };\n  },\n  computed: {// ...mapState(\"login\", [\"loginWrapShow\", \"loginStatus\"]),\n  },\n  watch: {// loginWrapShow: {\n    //   handler(newValue) {\n    //     if (newValue) {\n    //       // console.log(document);\n    //       let adom = document.getElementById(\"qrStatus\");\n    //       console.log(\"adom\", adom);\n    //       this.qrtimer = setInterval(() => {\n    //         adom.click();\n    //       }, 1500);\n    //     }\n    //   },\n    //   // immediate: true,\n    // },\n  },\n  mounted: function mounted() {\n    this.getloginStatus();\n  },\n  methods: {\n    // ...mapMutations(\"login\", [\"loginWrapOnOff\", \"loginStatusOnOff\"]),\n    ceshi: function ceshi() {\n      var a = \"MUSIC_A_T=1481119727062; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/api/feedback; HTTPOnly;MUSIC_R_T=1481119757789; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/neapi/feedback; HTTPOnly;MUSIC_A_T=1481119727062; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/api/clientlog; HTTPOnly;MUSIC_A_T=1481119727062; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/wapi/clientlog; HTTPOnly;MUSIC_R_T=1481119757789; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/wapi/clientlog; HTTPOnly;MUSIC_R_T=1481119757789; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/api/feedback; HTTPOnly;MUSIC_A_T=1481119727062; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/weapi/clientlog; HTTPOnly;MUSIC_A_T=1481119727062; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/neapi/clientlog; HTTPOnly;MUSIC_A_T=1481119727062; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/openapi/clientlog; HTTPOnly;MUSIC_R_T=1481119757789; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/neapi/clientlog; HTTPOnly;MUSIC_R_T=1481119757789; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/eapi/clientlog; HTTPOnly;MUSIC_SNS=; Max-Age=0; Expires=Mon, 27 Feb 2023 15:10:28 GMT; Path=/;MUSIC_R_T=1481119757789; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/weapi/clientlog; HTTPOnly;MUSIC_R_T=1481119757789; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/openapi/clientlog; HTTPOnly;MUSIC_R_T=1481119757789; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/wapi/feedback; HTTPOnly;MUSIC_A_T=1481119727062; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/neapi/feedback; HTTPOnly;MUSIC_A_T=1481119727062; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/weapi/feedback; HTTPOnly;__csrf=a7ae33e29d089a9e30774e67bfd99367; Max-Age=1296010; Expires=Tue, 14 Mar 2023 15:10:38 GMT; Path=/;;MUSIC_A_T=1481119727062; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/eapi/clientlog; HTTPOnly;MUSIC_U=6bf80db2682091e66db7c358940e6034f555d03d999284f42033476c98e45796993166e004087dd3e30340b48322c4fd7a82616b73ff591e0195ea446a99c0ab92386fc4f57b0915a0d2166338885bd7; Max-Age=15552000; Expires=Sat, 26 Aug 2023 15:10:28 GMT; Path=/; HTTPOnly;MUSIC_A_T=1481119727062; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/wapi/feedback; HTTPOnly;MUSIC_A_T=1481119727062; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/eapi/feedback; HTTPOnly;MUSIC_R_T=1481119757789; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/eapi/feedback; HTTPOnly;MUSIC_R_T=1481119757789; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/weapi/feedback; HTTPOnly;MUSIC_R_T=1481119757789; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/api/clientlog; HTTPOnly\";\n      var cookies = cookieParser(a); //两个都设置上才能请求成功\n\n      setCookie(\"MUSIC_U\", cookies[0]);\n      setCookie(\"__csrf\", cookies[1]);\n    },\n    goLogin: function goLogin() {\n      //点击登录，获取二维码\n      // this.loginWrapOnOff(true);\n      this.loginWrapShow = true;\n      this.refreshQr();\n    },\n    //生成二维码\n    getQRCode: function getQRCode(qrurl) {\n      var opts = {\n        errorCorrectionLevel: \"H\",\n        //容错级别\n        type: \"image/png\",\n        //生成的二维码类型\n        quality: 0.3,\n        //二维码质量\n        margin: 5,\n        //二维码留白边距\n        width: 180,\n        //宽\n        height: 180,\n        //高\n        text: \"\",\n        //二维码内容\n        color: {\n          dark: \"#333333\",\n          //前景色\n          light: \"#fff\" //背景色\n\n        }\n      };\n      this.QRCodeMsg = qrurl; //生成的二维码为URL地址js\n\n      var msg = document.getElementById(\"QRCode_header\"); // 将获取到的数据（val）画到msg（canvas）上\n\n      QRCode.toCanvas(msg, qrurl, opts, function (error) {// console.log(error)\n      });\n    },\n    //  获取/刷新二维码\n    refreshQr: function refreshQr() {\n      var _this = this;\n\n      var params = {\n        timestamp: getTimestamp()\n      }; // console.log(params.timestamp)\n\n      getqrKey(params).then( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(res) {\n          var params;\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return res.data.data.unikey;\n\n                case 2:\n                  _this.key = _context.sent;\n                  params = {\n                    key: res.data.data.unikey\n                  };\n                  getqrImg(params).then(function (res) {\n                    _this.getQRCode(res.data.data.qrurl);\n                  });\n\n                case 5:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    },\n    // 二维码状态\n    getqrStatus: function getqrStatus() {\n      var _this2 = this;\n\n      this.qrloading = true;\n      var params = {\n        key: this.key\n      };\n\n      _getqrStatus(params).then( /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(res) {\n          var cookies;\n          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  if (!(res.data.code === 803)) {\n                    _context2.next = 10;\n                    break;\n                  }\n\n                  _context2.next = 3;\n                  return res.data.message;\n\n                case 3:\n                  _this2.qrStatus = _context2.sent;\n                  cookies = cookieParser(res.data.cookie);\n                  setCookie(\"__csrf\", cookies[1]);\n                  setTimeout(function () {\n                    _this2.loginWrapShow = false; //关闭登录窗口\n\n                    _this2.$message({\n                      type: \"success\",\n                      message: \"已登录\"\n                    });\n                  }, 500);\n\n                  _this2.getloginStatus();\n\n                  _context2.next = 15;\n                  break;\n\n                case 10:\n                  if (!(res.data.code === 800)) {\n                    _context2.next = 15;\n                    break;\n                  }\n\n                  _context2.next = 13;\n                  return res.data.message;\n\n                case 13:\n                  _this2.qrStatus = _context2.sent;\n                  _this2.qrStatus += \",请刷新获取\";\n\n                case 15:\n                  _this2.qrloading = false;\n\n                case 16:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function (_x2) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n    },\n    //获取登录状态\n    getloginStatus: function getloginStatus() {\n      var _this3 = this;\n\n      // console.log(\"this.loginStatus\", this.loginStatus);\n      // console.log(\"----------\", getCookie(\"MUSIC_U\"), getCookie(\"__csrf\"));\n      if (getCookie(\"__csrf\")) {\n        this.loginStatus = true;\n        this.user = JSON.parse(localStorage.getItem(\"user\"));\n      } else {\n        this.loginStatus = false;\n        localStorage.removeItem(\"user\");\n        this.user = {};\n      }\n\n      _getloginStatus().then( /*#__PURE__*/function () {\n        var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(res) {\n          return regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  if (!res.data.data.profile) {\n                    _context3.next = 5;\n                    break;\n                  }\n\n                  _context3.next = 3;\n                  return res.data.data.profile;\n\n                case 3:\n                  _this3.user = _context3.sent;\n                  localStorage.setItem(\"user\", JSON.stringify(_this3.user));\n\n                case 5:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3);\n        }));\n\n        return function (_x3) {\n          return _ref3.apply(this, arguments);\n        };\n      }());\n    },\n    //退出登录\n    loginOut: function loginOut() {\n      var _this4 = this;\n\n      _loginOut().then(function (res) {\n        removeCookie(\"__csrf\");\n        _this4.loginStatus = false;\n        localStorage.removeItem(\"loginStatus\");\n        _this4.user = {}; // this.getloginStatus(); //获取登陆状态\n      });\n    } //获取账户信息-需要与获取登陆状态api都调用，才会真实的刷新登陆状态\n    // getAccount() {\n    //   getAccount().then((res) => {\n    //     console.log(\"账号信息---：\", res.data.profile);\n    //   });\n    // },\n    // 获取用户详情\n    // getuserDetail() {\n    // 374598092 Wacht丶T\n    // getuserDetail({ uid: 374598092 }).then((res) => {\n    // console.log(\"用户详情---：\", res);\n    // });\n    // },\n\n  }\n};","map":{"version":3,"mappings":"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","names":["getqrKey","getqrImg","getqrStatus","getloginStatus","loginOut","name","data","loginWrapShow","qrStatus","qrtimer","key","user","avatarUrl","nickname","loginStatus","qrloading","computed","watch","mounted","methods","ceshi","setCookie","goLogin","getQRCode","qrurl","errorCorrectionLevel","type","quality","margin","width","height","text","color","dark","light","QRCode","refreshQr","timestamp","res","params","cookies","cookieParser","setTimeout","message","localStorage","removeCookie"],"sourceRoot":"src/components/login","sources":["index.vue"],"sourcesContent":["<template>\r\n  <!-- 暂时开启该功能 -->\r\n  <div>\r\n    <div v-if=\"!loginStatus\" class=\"login\" @click=\"goLogin\">登录</div>\r\n    <div v-if=\"loginStatus\" class=\"user\">\r\n      <img class=\"userAvatar\" :src=\"user.avatarUrl\" alt=\"\" /><span\r\n        class=\"nickName\"\r\n        >{{ user.nickname }}</span\r\n      >\r\n      <ul>\r\n        <li class=\"logined-li\" @click=\"loginOut\">退出登录</li>\r\n      </ul>\r\n    </div>\r\n    <!-- <li class=\"logined-li\" @click=\"loginOut\">退出登录</li> -->\r\n    <!-- <el-button style=\"color: black\" @click=\"getloginStatus\"\r\n      >登录状态获取</el-button\r\n    >\r\n    <button @click=\"ceshi\">登录,测试</button>\r\n    <el-button style=\"color: black\" @click=\"getuserDetail\"\r\n      >获取用户详情</el-button\r\n    > -->\r\n    <!-- <el-button style=\"color: black\" @click=\"getAccount\">获取账号信息</el-button> -->\r\n    <div class=\"loginWrap\" v-show=\"loginWrapShow\">\r\n      <p class=\"loginClose\" @click=\"loginWrapShow = false\">\r\n        <i class=\"el-icon-close\"></i>\r\n      </p>\r\n      <div class=\"imgWrap\">\r\n        <canvas id=\"QRCode_header\"></canvas>\r\n      </div>\r\n      <p class=\"refreshQr\">\r\n        <span @click=\"refreshQr\">刷新二维码</span>\r\n      </p>\r\n      <p id=\"qrStatus\"\r\n        {{ qrStatus }}<i v-if=\"qrloading\" vclass=\"el-icon-loading\"></i>\r\n      </p>\r\n      <p\r\n        class=\"enter\"\r\n        @click=\"\r\n          getqrStatus();\r\n          qrloading = true;\r\n        \"\r\n      >\r\n        <span\r\n          >请使用网易云音乐app进行扫码-确认登录后，若未自动跳转则手动点击此处进入</span\r\n        >\r\n      </p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport QRCode from \"qrcode\";\r\nimport {\r\n  getqrKey,\r\n  getqrImg,\r\n  getqrStatus,\r\n  getloginStatus,\r\n  loginOut,\r\n} from \"@/api/login\";\r\n// import { mapMutations, mapState } from \"vuex\";\r\nimport { getuserDetail, getAccount } from \"@/api/user\";\r\nimport { cookieParser, getTimestamp } from \"@/utils/commonApi\";\r\nimport { getCookie, removeCookie, setCookie } from \"@/utils/cookie\";\r\n\r\nexport default {\r\n  name: \"Login\",\r\n  data() {\r\n    return {\r\n      loginWrapShow: false, //展示登录窗口\r\n      qrStatus: \"\",\r\n      qrtimer: null,\r\n      key: \"\",\r\n      user: {\r\n        avatarUrl: \"\",\r\n        nickname: \"\",\r\n      },\r\n      loginStatus: false, //登录状态\r\n      qrloading: false, //点击判断是否已经授权时的加载图标状态\r\n    };\r\n  },\r\n  computed: {\r\n    // ...mapState(\"login\", [\"loginWrapShow\", \"loginStatus\"]),\r\n  },\r\n  watch: {\r\n    // loginWrapShow: {\r\n    //   handler(newValue) {\r\n    //     if (newValue) {\r\n    //       // console.log(document);\r\n    //       let adom = document.getElementById(\"qrStatus\");\r\n    //       console.log(\"adom\", adom);\r\n    //       this.qrtimer = setInterval(() => {\r\n    //         adom.click();\r\n    //       }, 1500);\r\n    //     }\r\n    //   },\r\n    //   // immediate: true,\r\n    // },\r\n  },\r\n  mounted() {\r\n    this.getloginStatus();\r\n  },\r\n  methods: {\r\n    // ...mapMutations(\"login\", [\"loginWrapOnOff\", \"loginStatusOnOff\"]),\r\n    ceshi() {\r\n      let a =\r\n        \"MUSIC_A_T=1481119727062; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/api/feedback; HTTPOnly;MUSIC_R_T=1481119757789; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/neapi/feedback; HTTPOnly;MUSIC_A_T=1481119727062; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/api/clientlog; HTTPOnly;MUSIC_A_T=1481119727062; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/wapi/clientlog; HTTPOnly;MUSIC_R_T=1481119757789; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/wapi/clientlog; HTTPOnly;MUSIC_R_T=1481119757789; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/api/feedback; HTTPOnly;MUSIC_A_T=1481119727062; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/weapi/clientlog; HTTPOnly;MUSIC_A_T=1481119727062; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/neapi/clientlog; HTTPOnly;MUSIC_A_T=1481119727062; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/openapi/clientlog; HTTPOnly;MUSIC_R_T=1481119757789; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/neapi/clientlog; HTTPOnly;MUSIC_R_T=1481119757789; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/eapi/clientlog; HTTPOnly;MUSIC_SNS=; Max-Age=0; Expires=Mon, 27 Feb 2023 15:10:28 GMT; Path=/;MUSIC_R_T=1481119757789; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/weapi/clientlog; HTTPOnly;MUSIC_R_T=1481119757789; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/openapi/clientlog; HTTPOnly;MUSIC_R_T=1481119757789; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/wapi/feedback; HTTPOnly;MUSIC_A_T=1481119727062; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/neapi/feedback; HTTPOnly;MUSIC_A_T=1481119727062; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/weapi/feedback; HTTPOnly;__csrf=a7ae33e29d089a9e30774e67bfd99367; Max-Age=1296010; Expires=Tue, 14 Mar 2023 15:10:38 GMT; Path=/;;MUSIC_A_T=1481119727062; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/eapi/clientlog; HTTPOnly;MUSIC_U=6bf80db2682091e66db7c358940e6034f555d03d999284f42033476c98e45796993166e004087dd3e30340b48322c4fd7a82616b73ff591e0195ea446a99c0ab92386fc4f57b0915a0d2166338885bd7; Max-Age=15552000; Expires=Sat, 26 Aug 2023 15:10:28 GMT; Path=/; HTTPOnly;MUSIC_A_T=1481119727062; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/wapi/feedback; HTTPOnly;MUSIC_A_T=1481119727062; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/eapi/feedback; HTTPOnly;MUSIC_R_T=1481119757789; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/eapi/feedback; HTTPOnly;MUSIC_R_T=1481119757789; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/weapi/feedback; HTTPOnly;MUSIC_R_T=1481119757789; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/api/clientlog; HTTPOnly\";\r\n\r\n      let cookies = cookieParser(a);\r\n      //两个都设置上才能请求成功\r\n      setCookie(\"MUSIC_U\", cookies[0]);\r\n      setCookie(\"__csrf\", cookies[1]);\r\n    },\r\n    goLogin() {\r\n      //点击登录，获取二维码\r\n      // this.loginWrapOnOff(true);\r\n      this.loginWrapShow = true;\r\n      this.refreshQr();\r\n    },\r\n    //生成二维码\r\n    getQRCode(qrurl) {\r\n      let opts = {\r\n        errorCorrectionLevel: \"H\", //容错级别\r\n        type: \"image/png\", //生成的二维码类型\r\n        quality: 0.3, //二维码质量\r\n        margin: 5, //二维码留白边距\r\n        width: 180, //宽\r\n        height: 180, //高\r\n        text: \"\", //二维码内容\r\n        color: {\r\n          dark: \"#333333\", //前景色\r\n          light: \"#fff\", //背景色\r\n        },\r\n      };\r\n      this.QRCodeMsg = qrurl; //生成的二维码为URL地址js\r\n      let msg = document.getElementById(\"QRCode_header\");\r\n      // 将获取到的数据（val）画到msg（canvas）上\r\n      QRCode.toCanvas(msg, qrurl, opts, function (error) {\r\n        // console.log(error)\r\n      });\r\n    },\r\n    //  获取/刷新二维码\r\n    refreshQr() {\r\n      let params = {\r\n        timestamp: getTimestamp(),\r\n      };\r\n      // console.log(params.timestamp)\r\n      getqrKey(params).then(async (res) => {\r\n        this.key = await res.data.data.unikey;\r\n        let params = {\r\n          key: res.data.data.unikey,\r\n        };\r\n        getqrImg(params).then((res) => {\r\n          this.getQRCode(res.data.data.qrurl);\r\n        });\r\n      });\r\n    },\r\n    // 二维码状态\r\n    getqrStatus() {\r\n      this.qrloading = true;\r\n      let params = {\r\n        key: this.key,\r\n      };\r\n      getqrStatus(params).then(async (res) => {\r\n        if (res.data.code === 803) {\r\n          // clearInterval(this.qrtimer);\r\n          // console.log(\"扫码登录成功\");\r\n          this.qrStatus = await res.data.message;\r\n          let cookies = cookieParser(res.data.cookie);\r\n          setCookie(\"__csrf\", cookies[1]);\r\n          setTimeout(() => {\r\n            this.loginWrapShow = false; //关闭登录窗口\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"已登录\",\r\n            });\r\n          }, 500);\r\n          this.getloginStatus();\r\n        } else if (res.data.code === 800) {\r\n          this.qrStatus = await res.data.message;\r\n          this.qrStatus += \",请刷新获取\";\r\n        }\r\n        this.qrloading = false;\r\n      });\r\n    },\r\n\r\n    //获取登录状态\r\n    getloginStatus() {\r\n      // console.log(\"this.loginStatus\", this.loginStatus);\r\n      // console.log(\"----------\", getCookie(\"MUSIC_U\"), getCookie(\"__csrf\"));\r\n      if (getCookie(\"__csrf\")) {\r\n        this.loginStatus = true;\r\n        this.user = JSON.parse(localStorage.getItem(\"user\"));\r\n      } else {\r\n        this.loginStatus = false;\r\n        localStorage.removeItem(\"user\");\r\n        this.user = {};\r\n      }\r\n      getloginStatus().then(async (res) => {\r\n        if (res.data.data.profile) {\r\n          this.user = await res.data.data.profile;\r\n          localStorage.setItem(\"user\", JSON.stringify(this.user));\r\n        }\r\n      });\r\n    },\r\n    //退出登录\r\n    loginOut() {\r\n      loginOut().then((res) => {\r\n        removeCookie(\"__csrf\");\r\n        this.loginStatus = false;\r\n        localStorage.removeItem(\"loginStatus\");\r\n        this.user = {};\r\n        // this.getloginStatus(); //获取登陆状态\r\n      });\r\n    },\r\n    //获取账户信息-需要与获取登陆状态api都调用，才会真实的刷新登陆状态\r\n    // getAccount() {\r\n    //   getAccount().then((res) => {\r\n    //     console.log(\"账号信息---：\", res.data.profile);\r\n    //   });\r\n    // },\r\n    // 获取用户详情\r\n    // getuserDetail() {\r\n    // 374598092 Wacht丶T\r\n    // getuserDetail({ uid: 374598092 }).then((res) => {\r\n    // console.log(\"用户详情---：\", res);\r\n    // });\r\n    // },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.login,\r\n.user {\r\n  position: absolute;\r\n  // width: 150px;\r\n  height: 30px;\r\n  top: 0;\r\n  right: 10px;\r\n  color: rgba(238, 238, 238, 0.61);\r\n  text-align: center;\r\n  overflow: hidden;\r\n  transition: 0.2s;\r\n  // background: rgb(161, 145, 139);\r\n  &:hover {\r\n    height: 64px;\r\n    transform: scale(1.01);\r\n  }\r\n\r\n  .userAvatar {\r\n    vertical-align: top;\r\n    margin-right: 10px;\r\n    width: 28px;\r\n    height: 28px;\r\n    border-radius: 50%;\r\n  }\r\n  .nickName {\r\n    display: inline-block;\r\n    font-size: 13px;\r\n    height: 30px;\r\n    line-height: 30px;\r\n  }\r\n  .logined-li {\r\n    height: 32px;\r\n    line-height: 32px;\r\n    font-size: 13px;\r\n    transition: 0.2s;\r\n    padding: 0 10px;\r\n    background: rgba(160, 160, 160, 0.041);\r\n\r\n    &:hover {\r\n      cursor: pointer;\r\n      color: rgb(39, 177, 131);\r\n      transform: scale(1.01);\r\n    }\r\n  }\r\n}\r\n.login {\r\n  &:hover {\r\n    cursor: pointer;\r\n    color: rgb(187, 145, 90);\r\n  }\r\n}\r\n.loginWrap {\r\n  z-index: 999;\r\n  position: fixed;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  margin: auto;\r\n  width: 500px;\r\n  height: 300px;\r\n  border-radius: 15px;\r\n  background: url(@/static/img/background8.jpeg);\r\n\r\n  .loginClose {\r\n    position: absolute;\r\n    height: 20px;\r\n    top: 15px;\r\n    right: 15px;\r\n\r\n    color: rgb(221, 191, 151);\r\n    transition: 0.2s;\r\n    /deep/ .el-icon-close {\r\n      font-size: 20px;\r\n\r\n      &:hover {\r\n        cursor: pointer;\r\n        color: rgb(187, 145, 90);\r\n      }\r\n    }\r\n  }\r\n  .imgWrap {\r\n    // display: inline-block;\r\n    margin: 45px auto 0;\r\n    width: 180px;\r\n    height: 180px;\r\n    #QRCode_header {\r\n      margin: auto;\r\n    }\r\n  }\r\n  #qrStatus {\r\n    color: #eee;\r\n    text-align: center;\r\n    // background-color: #eee;\r\n  }\r\n  .refreshQr {\r\n    padding: 5px;\r\n    color: rgba(255, 255, 255, 0.808);\r\n\r\n    text-align: center;\r\n    transition: 0.2s;\r\n    span {\r\n      font-size: 15px;\r\n      transition: 0.2s;\r\n      &:hover {\r\n        color: rgba(221, 191, 152);\r\n        cursor: pointer;\r\n      }\r\n    }\r\n  }\r\n  .enter {\r\n    position: absolute;\r\n    bottom: 5px;\r\n    right: 5px;\r\n    font-size: 14px;\r\n    color: rgba(221, 191, 152, 0.788);\r\n    transition: 0.2s;\r\n    &:hover {\r\n      color: rgba(221, 191, 152);\r\n      cursor: pointer;\r\n    }\r\n  }\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}