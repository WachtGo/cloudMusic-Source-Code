{"ast":null,"code":"import _createForOfIteratorHelper from \"D:/data/\\u684C\\u9762/git/cloudMusic-Source-Code/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _asyncToGenerator from \"D:/data/\\u684C\\u9762/git/cloudMusic-Source-Code/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.search.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getMusicInfo } from '@/api/api';\nimport { transMusicTime, transPlayCount } from '@/utils/commonApi';\nimport songlist from '@/components/songlist.vue';\nexport default {\n  components: {\n    songlist: songlist\n  },\n  data: function data() {\n    return {\n      //试听音乐\n      listen: [],\n      //单曲，专辑，歌手，歌单开关\n      tagSwitch: {},\n      //MV列表\n      videoList: [],\n      //歌单列表\n      playListTable: [],\n      // 歌曲列表\n      musicList: [],\n      // 专辑列表\n      albums: [],\n      //歌手列表\n      singerList: [],\n      //MV列表\n      mvList: [],\n      //音乐下载地址\n      downLoadUrl: '',\n      //标签切换\n      activeName: 'first',\n      //搜索内容总数（歌曲，歌单，mv,等）\n      count: 0,\n      //初始页\n      currentPage: 1\n    };\n  },\n  created: function created() {\n    // console.log(this);\n    var that = this;\n    that.tagSwitch = that.$store.state.musicPlayList.tagSwitch;\n    that.search();\n  },\n  methods: {\n    //标签切换\n    tagSelect: function tagSelect(tag) {\n      var that = this;\n      that.$store.commit('musicPlayList/tagSelect', tag);\n      that.$nextTick(function () {\n        that.search();\n      });\n    },\n    //分页\n    handleCurrentChange: function handleCurrentChange(currentPage) {\n      // console.log(`当前页: ${currentPage}`);\n      this.currentPage = currentPage;\n      var that = this;\n\n      if (that.tagSwitch.songSwitch) {\n        that.getSingleMuscic();\n      } else if (that.tagSwitch.playListSwitch) {\n        that.getMusicList();\n      } else if (that.tagSwitch.videoSwitch) {\n        that.getVideoList();\n      } else if (that.tagSwitch.mvSwitch) {\n        that.getMVList();\n      } else if (that.tagSwitch.singerSwitch) {\n        that.getSingerList();\n      } else if (that.tagSwitch.albumSwitch) {\n        that.getSingerList();\n      }\n    },\n    search: function search() {\n      var that = this;\n\n      if (that.tagSwitch.songSwitch) {\n        that.getSingleMuscic();\n      } else if (that.tagSwitch.playListSwitch) {\n        that.getMusicList();\n      } else if (that.tagSwitch.videoSwitch) {\n        that.getVideoList();\n      } else if (that.tagSwitch.mvSwitch) {\n        that.getMVList();\n      } else if (that.tagSwitch.singerSwitch) {\n        that.getSingerList();\n      } else if (that.tagSwitch.albumSwitch) {\n        that.getAlbumList();\n      }\n    },\n    //获取专辑详情\n    goAlbumDetail: function goAlbumDetail(id) {\n      this.$router.push({\n        name: 'albumDetail',\n        params: {\n          albumId: id\n        }\n      });\n    },\n    //获取歌手详情\n    goSingerDetail: function goSingerDetail(id) {\n      if (id) {\n        this.$router.push({\n          name: 'singerDetail',\n          params: {\n            singerId: id\n          }\n        });\n      }\n    },\n    //传入歌单id进入歌单详情\n    goSongList: function goSongList(songListDetail) {\n      console.log(songListDetail); //传入歌单id进入歌单详情\n\n      var that = this;\n      that.$router.push({\n        name: 'playListDetails',\n        params: {\n          songListDetail: songListDetail\n        }\n      });\n    },\n    //通过搜索关键词获取单曲（歌曲）\n    getSingleMuscic: function getSingleMuscic() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var that, params;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                that = _this;\n\n                if (that.$route.query.reload) {// console.log(\"this.$route:---\", that.$route);\n                } //获取歌曲列表\n\n\n                params = {\n                  keywords: that.$route.query.keywords,\n                  limit: 30,\n                  offset: (that.currentPage - 1) * 30,\n                  type: 1 //代表获取单曲\n\n                };\n                that.musicList = [];\n                _context.next = 6;\n                return getMusicInfo(params).then(function (res) {\n                  that.musicList = res.data.result.songs; // console.log(that.musicList)\n\n                  // console.log(that.musicList)\n                  that.count = res.data.result.songCount;\n                  transMusicTime(that.musicList, 'dt'); // console.log(\"音乐列表：\", res.data.result);\n                  //给每个列表添加一个防抖\n\n                  // console.log(\"音乐列表：\", res.data.result);\n                  //给每个列表添加一个防抖\n                  var _iterator = _createForOfIteratorHelper(that.musicList),\n                      _step;\n\n                  try {\n                    // console.log(\"音乐列表：\", res.data.result);\n                    //给每个列表添加一个防抖\n                    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                      var item = _step.value;\n                      that.$set(item, 'timer', true);\n                    }\n                  } catch (err) {\n                    _iterator.e(err);\n                  } finally {\n                    _iterator.f();\n                  }\n                });\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    // 通过搜索关键词获取专辑\n    getAlbumList: function getAlbumList() {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var that, params;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                that = _this2; //获取歌曲列表\n\n                params = {\n                  keywords: that.$route.query.keywords,\n                  limit: 30,\n                  offset: (that.currentPage - 1) * 30,\n                  type: 10 //代表获取专辑\n\n                };\n                that.albums = [];\n                _context2.next = 5;\n                return getMusicInfo(params).then(function (res) {\n                  that.albums = res.data.result.albums;\n                  that.count = res.data.result.albumCount; // console.log(\"专辑列表：\", res.data.result);\n                });\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    },\n    //通过搜索关键词获取歌手列表\n    getSingerList: function getSingerList() {\n      var _this3 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var that, params;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                that = _this3;\n                params = {\n                  keywords: that.$route.query.keywords,\n                  limit: 15,\n                  offset: (that.currentPage - 1) * 15,\n                  type: 100 //代表获取歌手\n\n                };\n                that.singerList = [];\n                _context3.next = 5;\n                return getMusicInfo(params).then(function (res) {\n                  // console.log(\"获取歌手列表----\", res.data.result);\n                  that.singerList = res.data.result.artists;\n                  that.count = res.data.result.artistCount;\n                });\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }))();\n    },\n    //通过搜索关键词获取歌单\n    getMusicList: function getMusicList() {\n      var _this4 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n        var that, params;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                that = _this4;\n                params = {\n                  keywords: that.$route.query.keywords,\n                  limit: 15,\n                  offset: (that.currentPage - 1) * 15,\n                  type: 1000 //代表获取歌单\n\n                };\n                that.playListTable = [];\n                _context4.next = 5;\n                return getMusicInfo(params).then(function (res) {\n                  // console.log('获取歌单列表----', res.data.result)\n                  that.playListTable = res.data.result.playlists;\n                  that.count = res.data.result.playlistCount;\n                  transPlayCount(that.playListTable, 'playCount');\n                });\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }))();\n    },\n    //通过搜索关键词获取对应视频列表\n    getVideoList: function getVideoList() {\n      var _this5 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n        var that, params;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                that = _this5;\n                params = {\n                  keywords: that.$route.query.keywords,\n                  limit: 12,\n                  offset: (that.currentPage - 1) * 12,\n                  type: 1014 //代表获取视频\n\n                };\n                that.videoList = [];\n                _context5.next = 5;\n                return getMusicInfo(params).then(function (res) {\n                  // console.log(\"获取视频列表----\", res.data.result);\n                  that.videoList = res.data.result.videos; // console.log(\"视频列表：\", that.videoList);\n\n                  // console.log(\"视频列表：\", that.videoList);\n                  that.count = res.data.result.videoCount; //转换歌曲时长单位为分秒\n\n                  //转换歌曲时长单位为分秒\n                  transMusicTime(that.videoList, 'durationms'); //将播放量转换成亿万单位\n\n                  //将播放量转换成亿万单位\n                  transPlayCount(that.videoList, 'playTime');\n                });\n\n              case 5:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }))();\n    },\n    //通过搜索关键词获取对应MV列表\n    getMVList: function getMVList() {\n      var _this6 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {\n        var that, params;\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                that = _this6;\n                params = {\n                  keywords: that.$route.query.keywords,\n                  limit: 12,\n                  offset: (that.currentPage - 1) * 12,\n                  type: 1004 //代表获取MV\n\n                };\n                that.mvList = [];\n                _context6.next = 5;\n                return getMusicInfo(params).then(function (res) {\n                  // console.log(\"获取MV列表----\", res.data.result);\n                  that.mvList = res.data.result.mvs; // console.log(\"MV列表：\", that.mvList);\n\n                  // console.log(\"MV列表：\", that.mvList);\n                  that.count = res.data.result.mvCount; //转换歌曲时间为分秒单位\n\n                  //转换歌曲时间为分秒单位\n                  transMusicTime(that.mvList, 'duration'); // 转换播放量单位为万\n\n                  // 转换播放量单位为万\n                  transPlayCount(that.mvList, 'playCount');\n                });\n\n              case 5:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }))();\n    },\n    goVideo: function goVideo(vid, type) {\n      if (type === 0) {\n        this.$router.push({\n          name: 'mvPlay',\n          params: {\n            mvId: vid\n          }\n        });\n      } else {\n        this.$router.push({\n          name: 'videoPlay',\n          params: {\n            videoId: vid\n          }\n        });\n      }\n    },\n    randomColor: function randomColor() {\n      return \"#\".concat((Math.random() * 0xffffff << 0).toString(16));\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["components","songlist","data","listen","tagSwitch","videoList","playListTable","musicList","albums","singerList","mvList","downLoadUrl","activeName","count","currentPage","created","that","methods","tagSelect","tag","handleCurrentChange","search","goAlbumDetail","id","name","params","albumId","goSingerDetail","singerId","goSongList","songListDetail","console","getSingleMuscic","keywords","limit","offset","type","getMusicInfo","transMusicTime","getAlbumList","getSingerList","getMusicList","transPlayCount","getVideoList","getMVList","goVideo","vid","mvId","videoId","randomColor"],"sourceRoot":"src/views/musiclist","sources":["MusicPlayList.vue"],"sourcesContent":["<template>\r\n  <div class=\"list-wrap\">\r\n      <div class=\"tagWrap\">\r\n        <span @click=\"tagSelect('songSwitch')\"\r\n              v-if=\"!tagSwitch.songSwitch\">单曲</span><span style=\"color: rgb(80, 180, 220)\"\r\n              v-if=\"tagSwitch.songSwitch\">单曲</span>\r\n        <span @click=\"tagSelect('albumSwitch')\"\r\n              v-if=\"!tagSwitch.albumSwitch\">专辑</span><span style=\"color: rgb(80, 180, 220)\"\r\n              v-if=\"tagSwitch.albumSwitch\">专辑</span>\r\n        <span @click=\"tagSelect('singerSwitch')\"\r\n              v-if=\"!tagSwitch.singerSwitch\">歌手</span><span style=\"color: rgb(80, 180, 220)\"\r\n              v-if=\"tagSwitch.singerSwitch\">歌手</span>\r\n        <span @click=\"tagSelect('playListSwitch')\"\r\n              v-if=\"!tagSwitch.playListSwitch\">歌单</span><span style=\"color: rgb(80, 180, 220)\"\r\n              v-if=\"tagSwitch.playListSwitch\">歌单</span><span @click=\"tagSelect('videoSwitch')\"\r\n              v-if=\"!tagSwitch.videoSwitch\">视频</span><span style=\"color: rgb(80, 180, 220)\"\r\n              v-if=\"tagSwitch.videoSwitch\">视频</span><span @click=\"tagSelect('mvSwitch')\"\r\n              v-if=\"!tagSwitch.mvSwitch\">MV</span><span style=\"color: rgb(80, 180, 220)\"\r\n              v-if=\"tagSwitch.mvSwitch\">MV</span>\r\n      </div>\r\n    <div class=\"descript\"></div>\r\n    <div>\r\n      <ul>\r\n        <!-- 单曲列表 -->\r\n        <div v-show=\"tagSwitch.songSwitch\">\r\n          <div class=\"loading\"\r\n              v-show=\"musicList.length === 0\"><i class=\"el-icon-loading\"></i></div>\r\n          <songlist :songlist=\"musicList\"></songlist>\r\n        </div>\r\n        <!-- 专辑列表 -->\r\n        <div class=\"albumListClass\"\r\n             v-show=\"tagSwitch.albumSwitch\">\r\n             <div class=\"loading\" v-show=\"albums.length === 0\"><i class=\"el-icon-loading\"></i></div>\r\n          <li class=\"liWrap\"\r\n              v-for=\"(item, index) in albums\"\r\n              :key=\"index\"\r\n              @click.stop=\"goAlbumDetail(item.id)\">\r\n            <div class=\"liWrap-block1\">\r\n              <img :src=\"item.blurPicUrl\"\r\n                   alt=\"\" />\r\n            </div>\r\n            <div class=\"liWrap-block2\">\r\n              <div class=\"div1\">\r\n                <span class=\"albumName\">{{ item.name }}\r\n                  <span v-if=\"item.alias[0]\"\r\n                        class=\"albumName2\">{{\r\n                    item.alias[0]\r\n                  }}</span></span>\r\n              </div>\r\n              <div>\r\n                <div class=\"divOther\">\r\n                  作者：<span>{{ item.artist.name }}</span>\r\n                </div>\r\n                <span class=\"inline-block\"\r\n                      style=\"display: inline-block; width: 50px\"></span>\r\n                <div class=\"divOther\"\r\n                     style=\"width: 100px\">\r\n                  歌曲：<span>{{ item.size }}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        </div>\r\n        <!-- 歌手列表 -->\r\n        <div class=\"singerListClass\"\r\n             v-show=\"tagSwitch.singerSwitch\">\r\n             <div class=\"loading\" v-show=\"singerList.length === 0\"><i class=\"el-icon-loading\"></i></div>\r\n          <li class=\"liWrap\"\r\n              v-for=\"(item, index) in singerList\"\r\n              :key=\"index\"\r\n              @click.stop=\"goSingerDetail(item.id)\">\r\n            <div class=\"liWrap-block1\">\r\n              <img :src=\"item.img1v1Url\"\r\n                   alt=\"\" />\r\n            </div>\r\n            <div class=\"liWrap-block2\">\r\n              <div class=\"div1\">\r\n                歌手：<span>{{ item.name }}</span>\r\n              </div>\r\n              <div>\r\n                <div class=\"divOther\">\r\n                  专辑：<span>{{ item.albumSize }}</span>\r\n                </div>\r\n\r\n                <div class=\"divOther\">\r\n                  MV：<span>{{ item.mvSize }}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        </div>\r\n        <div v-show=\"tagSwitch.albumSwitch\"></div>\r\n        <!-- 歌单列表 -->\r\n        <div class=\"playListClass\"\r\n             v-show=\"tagSwitch.playListSwitch\">\r\n             <div class=\"loading\" v-show=\"playListTable.length === 0\"><i class=\"el-icon-loading\"></i></div>\r\n          <div class=\"recPlay\">\r\n            <ul class=\"playListWrap\">\r\n              <li class=\"playListTable\"\r\n                  v-for=\"(item, index) in playListTable\"\r\n                  :key=\"index\">\r\n                <div class=\"image\">\r\n                  <img :src=\"item.coverImgUrl\"\r\n                       alt=\"\"\r\n                       title=\"\"\r\n                       @click=\"goSongList(item)\" />\r\n                  <span class=\"playCount\"><i class=\"el-icon-video-play\"\r\n                       style=\"margin-right: 1px\"></i>{{ item.playCount }}</span>\r\n                </div>\r\n                <p class=\"List-title\"\r\n                   @click=\"goSongList(item)\">\r\n                  <span>{{ item.name }} </span>\r\n                </p>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <!-- 视频列表 -->\r\n        <div class=\"videoListClass\"\r\n             v-show=\"tagSwitch.videoSwitch\">\r\n             <div class=\"loading\" v-show=\"videoList.length === 0\"><i class=\"el-icon-loading\"></i></div>\r\n          <div class=\"videoPlay\">\r\n            <ul class=\"videoPlaywrap\">\r\n              <li class=\"videoPlayList\"\r\n                  v-for=\"(item, index) in videoList\"\r\n                  :key=\"index\">\r\n                <div class=\"videoImage\">\r\n                  <img class=\"videoImg\"\r\n                       style=\"\r\n                      position: absolute;\r\n                      width: 240px;\r\n                      height: 155px;\r\n                      border-radius: 10px;\r\n                    \"\r\n                       :src=\"item.coverUrl\"\r\n                       alt=\"\" \r\n                       title=\"\"\r\n                       @click=\"goVideo(item.vid, item.type)\" />\r\n                  <span class=\"videoPlayTime\"><i class=\"el-icon-video-play\"\r\n                       style=\"margin-right: 1px\"></i>{{ item.playTime }}</span>\r\n                  <span class=\"videoPlayTime\"\r\n                        style=\"bottom: 0\">{{\r\n                    item.durationms\r\n                  }}</span>\r\n                </div>\r\n\r\n                <p class=\"List-title\"\r\n                   style=\"font-size: 10px\"\r\n                   @click=\"goVideo(item.vid, item.type)\">\r\n                  <span style=\"\r\n                      display: inline-block;\r\n                      width: 100%;\r\n                      overflow: hidden;\r\n                      white-space: nowrap;\r\n                      text-overflow: ellipsis;\r\n                    \"><span v-if=\"!item.type\"\r\n                          style=\"color: red\">MV&nbsp;</span>{{ item.title }}</span><br />\r\n                  <span style=\"color: rgb(199, 199, 199)\"><span v-if=\"item.markTypes\">by&nbsp;</span>\r\n                    <span>{{ item.creator[0].userName }}</span></span>\r\n                </p>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <!-- MV列表 -->\r\n        <div class=\"videoListClass\"\r\n             v-show=\"tagSwitch.mvSwitch\">\r\n           <div class=\"loading\" v-show=\"mvList.length === 0\"><i class=\"el-icon-loading\"></i></div>\r\n          <div class=\"videoPlay\">\r\n            <ul class=\"videoPlaywrap\">\r\n              <li class=\"videoPlayList\"\r\n                  v-for=\"(item, index) in mvList\"\r\n                  :key=\"index\">\r\n                <div class=\"videoImage\">\r\n                  <img class=\"videoImg\"\r\n                       style=\"\r\n                      position: absolute;\r\n                      width: 240px;\r\n                      height: 155px;\r\n                      border-radius: 10px;\r\n                    \"\r\n                       :src=\"item.cover\"\r\n                       alt=\"\"\r\n                       title=\"\"\r\n                       @click=\"goVideo(item.id, item.mark)\" />\r\n                  <span class=\"videoPlayTime\"><i class=\"el-icon-video-play\"\r\n                       style=\"margin-right: 1px\"></i>{{ item.playCount }}</span>\r\n                  <span class=\"videoPlayTime\"\r\n                        style=\"bottom: 0\">{{\r\n                    item.duration\r\n                  }}</span>\r\n                </div>\r\n\r\n                <p class=\"List-title\"\r\n                   style=\"font-size: 10px\"\r\n                   @click=\"goVideo(item.id, item.mark)\">\r\n                  <span style=\"\r\n                      display: inline-block;\r\n                      width: 100%;\r\n                      overflow: hidden;\r\n                      white-space: nowrap;\r\n                      text-overflow: ellipsis;\r\n                    \"><span v-if=\"!item.type\"\r\n                          style=\"color: red\">MV&nbsp;</span>{{ item.name }}</span><br />\r\n                  <span style=\"color: rgb(199, 199, 199)\"><span>by&nbsp;</span>\r\n                    <span>{{ item.artistName }}</span></span>\r\n                </p>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </ul>\r\n    </div>\r\n\r\n    <div class=\"pagination\">\r\n      <el-pagination v-show=\"count != 0\"\r\n                     @current-change=\"handleCurrentChange\"\r\n                     :current-page.sync=\"currentPage\"\r\n                     :page-size=\"15\"\r\n                     layout=\"prev, pager, next, jumper\"\r\n                     :total=\"count\"\r\n                     :background=\"true\">\r\n      </el-pagination>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getMusicInfo} from '@/api/api'\r\nimport { transMusicTime, transPlayCount } from '@/utils/commonApi'\r\nimport songlist from '@/components/songlist.vue'\r\nexport default {\r\n  components:{\r\n    songlist\r\n  },\r\n  data() {\r\n    return {\r\n      //试听音乐\r\n      listen: [],\r\n      //单曲，专辑，歌手，歌单开关\r\n      tagSwitch: {},\r\n      //MV列表\r\n      videoList: [],\r\n      //歌单列表\r\n      playListTable: [],\r\n      // 歌曲列表\r\n      musicList: [],\r\n      // 专辑列表\r\n      albums: [],\r\n      //歌手列表\r\n      singerList: [],\r\n      //MV列表\r\n      mvList: [],\r\n      //音乐下载地址\r\n      downLoadUrl: '',\r\n      //标签切换\r\n      activeName: 'first',\r\n      //搜索内容总数（歌曲，歌单，mv,等）\r\n      count: 0,\r\n      //初始页\r\n      currentPage: 1,\r\n    }\r\n  },\r\n  created() {\r\n    // console.log(this);\r\n    var that = this\r\n    that.tagSwitch = that.$store.state.musicPlayList.tagSwitch\r\n    that.search()\r\n  },\r\n  methods: {\r\n    //标签切换\r\n    tagSelect(tag) {\r\n      var that = this\r\n      that.$store.commit('musicPlayList/tagSelect', tag)\r\n      that.$nextTick(() => {\r\n        that.search()\r\n      })\r\n    },\r\n    //分页\r\n    handleCurrentChange: function (currentPage) {\r\n      // console.log(`当前页: ${currentPage}`);\r\n      this.currentPage = currentPage\r\n      var that = this\r\n      if (that.tagSwitch.songSwitch) {\r\n        that.getSingleMuscic()\r\n      } else if (that.tagSwitch.playListSwitch) {\r\n        that.getMusicList()\r\n      } else if (that.tagSwitch.videoSwitch) {\r\n        that.getVideoList()\r\n      } else if (that.tagSwitch.mvSwitch) {\r\n        that.getMVList()\r\n      } else if (that.tagSwitch.singerSwitch) {\r\n        that.getSingerList()\r\n      } else if (that.tagSwitch.albumSwitch) {\r\n        that.getSingerList()\r\n      }\r\n    },\r\n    search() {\r\n      var that = this\r\n      if (that.tagSwitch.songSwitch) {\r\n        that.getSingleMuscic()\r\n      } else if (that.tagSwitch.playListSwitch) {\r\n        that.getMusicList()\r\n      } else if (that.tagSwitch.videoSwitch) {\r\n        that.getVideoList()\r\n      } else if (that.tagSwitch.mvSwitch) {\r\n        that.getMVList()\r\n      } else if (that.tagSwitch.singerSwitch) {\r\n        that.getSingerList()\r\n      } else if (that.tagSwitch.albumSwitch) {\r\n        that.getAlbumList()\r\n      }\r\n    },\r\n\r\n    \r\n    //获取专辑详情\r\n    goAlbumDetail(id) {\r\n      this.$router.push({\r\n        name: 'albumDetail',\r\n        params: {\r\n          albumId: id,\r\n        },\r\n      })\r\n    },\r\n    //获取歌手详情\r\n    goSingerDetail(id) {\r\n      if (id) {\r\n        this.$router.push({\r\n          name: 'singerDetail',\r\n          params: {\r\n            singerId: id,\r\n          },\r\n        })\r\n      }\r\n    },\r\n    //传入歌单id进入歌单详情\r\n    goSongList(songListDetail) {\r\n      console.log(songListDetail)\r\n      //传入歌单id进入歌单详情\r\n      var that = this\r\n      that.$router.push({\r\n        name: 'playListDetails',\r\n        params: { songListDetail: songListDetail },\r\n      })\r\n    },\r\n    \r\n\r\n    \r\n\r\n    //通过搜索关键词获取单曲（歌曲）\r\n   async getSingleMuscic() {\r\n      var that = this\r\n      if (that.$route.query.reload) {\r\n        // console.log(\"this.$route:---\", that.$route);\r\n      }\r\n      //获取歌曲列表\r\n      let params = {\r\n        keywords: that.$route.query.keywords,\r\n        limit: 30,\r\n        offset: (that.currentPage - 1) * 30,\r\n        type: 1, //代表获取单曲\r\n      }\r\n      that.musicList = []\r\n     await getMusicInfo(params).then((res) => {\r\n        that.musicList = res.data.result.songs\r\n        // console.log(that.musicList)\r\n        that.count = res.data.result.songCount\r\n        transMusicTime(that.musicList, 'dt')\r\n        // console.log(\"音乐列表：\", res.data.result);\r\n        //给每个列表添加一个防抖\r\n        for (let item of that.musicList) {\r\n          that.$set(item, 'timer', true)\r\n        }\r\n      })\r\n    },\r\n    // 通过搜索关键词获取专辑\r\n   async getAlbumList() {\r\n      var that = this\r\n      //获取歌曲列表\r\n      let params = {\r\n        keywords: that.$route.query.keywords,\r\n        limit: 30,\r\n        offset: (that.currentPage - 1) * 30,\r\n        type: 10, //代表获取专辑\r\n      }\r\n      that.albums = []\r\n    await  getMusicInfo(params).then((res) => {\r\n        that.albums = res.data.result.albums\r\n        that.count = res.data.result.albumCount\r\n        // console.log(\"专辑列表：\", res.data.result);\r\n      })\r\n    },\r\n    //通过搜索关键词获取歌手列表\r\n   async getSingerList() {\r\n      var that = this\r\n      let params = {\r\n        keywords: that.$route.query.keywords,\r\n        limit: 15,\r\n        offset: (that.currentPage - 1) * 15,\r\n        type: 100, //代表获取歌手\r\n      }\r\n      that.singerList = []\r\n     await getMusicInfo(params).then((res) => {\r\n        // console.log(\"获取歌手列表----\", res.data.result);\r\n        that.singerList = res.data.result.artists\r\n        that.count = res.data.result.artistCount\r\n      })\r\n    },\r\n    //通过搜索关键词获取歌单\r\n   async getMusicList() {\r\n      var that = this\r\n      let params = {\r\n        keywords: that.$route.query.keywords,\r\n        limit: 15,\r\n        offset: (that.currentPage - 1) * 15,\r\n        type: 1000, //代表获取歌单\r\n      }\r\n      that.playListTable = []\r\n     await getMusicInfo(params).then((res) => {\r\n        // console.log('获取歌单列表----', res.data.result)\r\n        that.playListTable = res.data.result.playlists\r\n        that.count = res.data.result.playlistCount\r\n        transPlayCount(that.playListTable, 'playCount')\r\n      })\r\n    },\r\n    //通过搜索关键词获取对应视频列表\r\n   async getVideoList() {\r\n      var that = this\r\n      let params = {\r\n        keywords: that.$route.query.keywords,\r\n        limit: 12,\r\n        offset: (that.currentPage - 1) * 12,\r\n        type: 1014, //代表获取视频\r\n      }\r\n      that.videoList = []\r\n     await getMusicInfo(params).then((res) => {\r\n        // console.log(\"获取视频列表----\", res.data.result);\r\n        that.videoList = res.data.result.videos\r\n        // console.log(\"视频列表：\", that.videoList);\r\n        that.count = res.data.result.videoCount\r\n        //转换歌曲时长单位为分秒\r\n        transMusicTime(that.videoList, 'durationms')\r\n        //将播放量转换成亿万单位\r\n        transPlayCount(that.videoList, 'playTime')\r\n      })\r\n    },\r\n    //通过搜索关键词获取对应MV列表\r\n   async getMVList() {\r\n      var that = this\r\n      let params = {\r\n        keywords: that.$route.query.keywords,\r\n        limit: 12,\r\n        offset: (that.currentPage - 1) * 12,\r\n        type: 1004, //代表获取MV\r\n      }\r\n      that.mvList = []\r\n     await getMusicInfo(params).then((res) => {\r\n        // console.log(\"获取MV列表----\", res.data.result);\r\n        that.mvList = res.data.result.mvs\r\n        // console.log(\"MV列表：\", that.mvList);\r\n        that.count = res.data.result.mvCount\r\n        //转换歌曲时间为分秒单位\r\n        transMusicTime(that.mvList, 'duration')\r\n        // 转换播放量单位为万\r\n        transPlayCount(that.mvList, 'playCount')\r\n      })\r\n    },\r\n\r\n    \r\n    goVideo(vid, type) {\r\n      if (type === 0) {\r\n        this.$router.push({\r\n          name: 'mvPlay',\r\n          params: {\r\n            mvId: vid,\r\n          },\r\n        })\r\n      } else {\r\n        this.$router.push({\r\n          name: 'videoPlay',\r\n          params: {\r\n            videoId: vid,\r\n          },\r\n        })\r\n      }\r\n    },\r\n    randomColor() {\r\n      return `#${((Math.random() * 0xffffff) << 0).toString(16)}`\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n//视频列表页面样式\r\n.videoListClass {\r\n  .videoPlay {\r\n    overflow-x: hidden;\r\n    &::-webkit-scrollbar {\r\n      display: none;\r\n    }\r\n\r\n    .videoPlaywrap {\r\n      display: flex;\r\n      margin: 0 auto;\r\n      padding: 10px;\r\n      justify-content: space-evenly;\r\n      flex-wrap: wrap; //根据宽度限制一行的盒子个数\r\n      margin: 10px 0;\r\n      width: 98%;\r\n      background: transparent;\r\n      // overflow-x: hidden;\r\n\r\n      .videoPlayList {\r\n        margin-bottom: 10px;\r\n        width: 240px;\r\n        height: 155px;\r\n        border-radius: 10px;\r\n        box-sizing: border-box;\r\n\r\n        .videoImage {\r\n          position: relative;\r\n          margin-bottom: 10px;\r\n          width: 240px;\r\n          height: 155px;\r\n          border-radius: 10px;\r\n          overflow: hidden;\r\n          transition: 0.2s;\r\n\r\n          &:hover {\r\n            transform: scale(1.05);\r\n            cursor: pointer;\r\n          }\r\n          .videoImg {\r\n            position: absolute;\r\n            width: 100%;\r\n            height: 100%;\r\n          }\r\n\r\n          .videoPlayTime {\r\n            position: absolute;\r\n            z-index: 99;\r\n            right: 10px;\r\n            background: transparent;\r\n          }\r\n        }\r\n\r\n        p {\r\n          font-size: 15px;\r\n          padding: 0 10px;\r\n          // width: 100%;\r\n          transition: 0.2s;\r\n          overflow: hidden; /*必须结合的属性,当内容溢出元素框时发生的事情*/\r\n          text-overflow: ellipsis; /*可以用来多行文本的情况下，用省略号“…”隐藏超出范围的文本 。*/\r\n          display: -webkit-box; /*必须结合的属性 ，将对象作为弹性伸缩盒子模型显示 。*/\r\n          -webkit-line-clamp: 2; /*用来限制在一个块元素显示的文本的行数。*/\r\n          -webkit-box-orient: vertical; /*必须结合的属性 ，设置或检索伸缩盒对象的子元素的排列方式 。*/\r\n          span {\r\n            &:hover {\r\n              color: rgb(145, 245, 228);\r\n              cursor: pointer;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n// 歌单列表样式\r\n.playListClass {\r\n  .recPlay {\r\n    margin: auto;\r\n    max-height: 630px;\r\n    overflow-x: hidden;\r\n\r\n    &::-webkit-scrollbar {\r\n      display: none;\r\n    }\r\n\r\n    .playListWrap {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      flex-wrap: wrap; //根据宽度限制一行的盒子个数\r\n      margin: 10px 0;\r\n      width: 100%;\r\n      background: transparent;\r\n      // overflow-x: hidden;\r\n\r\n      .playListTable {\r\n        margin-bottom: 10px;\r\n        width: 205px;\r\n        height: 230px;\r\n        box-sizing: border-box;\r\n\r\n        .image {\r\n          position: relative;\r\n          margin: 10px auto;\r\n          width: 190px;\r\n          height: 190px;\r\n          border-radius: 10px;\r\n          overflow: hidden;\r\n          transition: 0.2s;\r\n\r\n          &:hover {\r\n            transform: scale(1.06);\r\n            cursor: pointer;\r\n            // height: 210px;\r\n          }\r\n          img {\r\n            position: absolute;\r\n            width: 100%;\r\n            height: 100%;\r\n          }\r\n\r\n          .playCount {\r\n            position: absolute;\r\n            z-index: 99;\r\n            right: 10px;\r\n            background: transparent;\r\n          }\r\n        }\r\n        .List-title {\r\n          margin: 0 auto;\r\n          font-size: 15px;\r\n          // padding: 0 10px;\r\n          width: 180px;\r\n          transition: 0.2s;\r\n          text-align: center;\r\n          text-overflow: ellipsis;\r\n          white-space: nowrap;\r\n          overflow: hidden; /*必须结合的属性,当内容溢出元素框时发生的事情*/\r\n          text-overflow: ellipsis; /*可以用来多行文本的情况下，用省略号“…”隐藏超出范围的文本 。*/\r\n          white-space: nowrap;\r\n          display: -webkit-box; /*必须结合的属性 ，将对象作为弹性伸缩盒子模型显示 。*/\r\n          -webkit-line-clamp: 1; /*用来限制在一个块元素显示的文本的行数。*/\r\n          -webkit-box-orient: vertical; /*必须结合的属性 ，设置或检索伸缩盒对象的子元素的排列方式 。*/\r\n          span {\r\n            display: inline-block;\r\n            width: 180px;\r\n            // text-align: center;\r\n            text-overflow: ellipsis;\r\n            overflow: hidden;\r\n            white-space: nowrap;\r\n\r\n            &:hover {\r\n              color: rgb(145, 245, 228);\r\n              cursor: pointer;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n//歌手列表样式\r\n.singerListClass {\r\n  .liWrap {\r\n    display: flex;\r\n    justify-content: space-around;\r\n    margin: 0 auto 10px;\r\n    padding: 0 10px;\r\n    width: 95%;\r\n    height: 60px;\r\n    border-radius: 12px;\r\n    background-color: rgba(129, 235, 199, 0.068);\r\n    box-sizing: border-box;\r\n    transition: 0.2s;\r\n    &:hover {\r\n      transform: scale(1.01);\r\n    }\r\n    .liWrap-block1 {\r\n      width: 60px;\r\n      height: 60px;\r\n      border-radius: 10px;\r\n      background-color: rgba(152, 158, 149, 0);\r\n      transition: 0.2s;\r\n      img {\r\n        width: 100%;\r\n        height: 100%;\r\n        border-radius: 10px;\r\n      }\r\n      &:hover {\r\n        transform: scale(1.05);\r\n        cursor: pointer;\r\n      }\r\n    }\r\n    .liWrap-block2 {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      padding: 10px;\r\n      width: 920px;\r\n      height: 60px;\r\n      font-size: 15px;\r\n      text-overflow: ellipsis;\r\n      overflow: hidden;\r\n      white-space: no;\r\n      border-radius: 10px;\r\n      line-height: 40px;\r\n      box-sizing: border-box;\r\n      // background-color: rgba(226, 214, 156, 0.075);\r\n      transition: 0.2s;\r\n\r\n      span {\r\n        &:hover {\r\n          color: rgba(136, 240, 240, 0.719);\r\n        }\r\n      }\r\n      .div1 {\r\n        display: inline-block;\r\n        // width: 200px;\r\n\r\n        span {\r\n          color: bisque;\r\n          transition: 0.2s;\r\n          &:hover {\r\n            color: rgba(252, 214, 167, 0.979);\r\n          }\r\n        }\r\n      }\r\n      .divOther {\r\n        display: inline-block;\r\n        width: 100px;\r\n        margin-right: 5px;\r\n\r\n        span {\r\n          color: bisque;\r\n          transition: 0.2s;\r\n          &:hover {\r\n            color: rgba(255, 198, 129, 0.979);\r\n          }\r\n        }\r\n      }\r\n      &:hover {\r\n        transform: scale(1.01);\r\n        cursor: pointer;\r\n      }\r\n    }\r\n  }\r\n}\r\n//专辑列表页面样式\r\n.albumListClass {\r\n  .liWrap {\r\n    display: flex;\r\n    justify-content: space-around;\r\n    margin: 0 auto 10px;\r\n    padding: 0 10px;\r\n    width: 95%;\r\n    height: 60px;\r\n    border-radius: 12px;\r\n    background-color: rgba(129, 235, 199, 0.068);\r\n    box-sizing: border-box;\r\n    transition: 0.2s;\r\n    &:hover {\r\n      // color: aqua;\r\n      transform: scale(1.01);\r\n    }\r\n    .liWrap-block1 {\r\n      width: 60px;\r\n      height: 60px;\r\n      border-radius: 10px;\r\n      background-color: rgba(177, 244, 151, 0);\r\n      transition: 0.2s;\r\n      img {\r\n        width: 100%;\r\n        height: 100%;\r\n        border-radius: 10px;\r\n      }\r\n      &:hover {\r\n        // color: aqua;\r\n        transform: scale(1.05);\r\n        cursor: pointer;\r\n      }\r\n    }\r\n    .liWrap-block2 {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      padding: 10px;\r\n      width: 920px;\r\n      height: 60px;\r\n      font-size: 15px;\r\n      border-radius: 10px;\r\n      line-height: 40px;\r\n      box-sizing: border-box;\r\n      // background-color: rgba(226, 214, 156, 0.075);\r\n      transition: 0.2s;\r\n\r\n      span {\r\n        &:hover {\r\n          color: rgba(109, 255, 255, 0.753);\r\n        }\r\n      }\r\n      .div1 {\r\n        display: inline-block;\r\n        width: 520px;\r\n        text-overflow: ellipsis;\r\n        overflow: hidden;\r\n        white-space: nowrap;\r\n        .albumName {\r\n          display: inline-block;\r\n          max-width: 500px;\r\n          text-overflow: ellipsis;\r\n          overflow: hidden;\r\n          white-space: nowrap;\r\n          color: rgb(196, 255, 250);\r\n          transition: 0.2s;\r\n          span {\r\n            &:hover {\r\n              color: rgba(97, 252, 252, 0.979);\r\n            }\r\n          }\r\n          &:hover {\r\n            color: rgba(97, 252, 252, 0.979);\r\n          }\r\n        }\r\n        &:hover {\r\n          color: rgba(97, 252, 252, 0.979);\r\n        }\r\n      }\r\n      .divOther {\r\n        display: inline-block;\r\n        width: 200px;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n        white-space: nowrap;\r\n        // text-align: left;\r\n        margin-right: 5px;\r\n\r\n        span {\r\n          color: rgb(196, 255, 250);\r\n          transition: 0.2s;\r\n          &:hover {\r\n            color: rgba(97, 252, 252, 0.979);\r\n          }\r\n        }\r\n      }\r\n      &:hover {\r\n        // color: rgba(97, 252, 252, 0.979);\r\n        transform: scale(1.01);\r\n        cursor: pointer;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.descript {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  color: aliceblue;\r\n  font-weight: bolder;\r\n  padding: 10px 20px;\r\n  border-radius: 20px 20px 0 0;\r\n  background: rgba(95, 158, 160, 0.05);\r\n  box-sizing: border-box;\r\n}\r\n.list-wrap {\r\n  margin: 10px auto 0;\r\n  padding: 0 20px 10px;\r\n  width: 1120px;\r\n  // height: 730px;\r\n  border-radius: 20px;\r\n  background: rgba(95, 158, 160, 0.11);\r\n  box-sizing: border-box;\r\n\r\n  .tagWrap {\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-content: center;\r\n    margin: 0 auto;\r\n    width: 50%;\r\n\r\n    span {\r\n      font-size: 18px;\r\n      padding: 0 10px;\r\n      transition: 0.2s;\r\n\r\n      &:hover {\r\n        color: rgb(101, 195, 233);\r\n        cursor: pointer;\r\n      }\r\n    }\r\n  }\r\n\r\n  ul {\r\n    height: 650px;\r\n    border-radius: 0 0 10px 10px;\r\n    background: rgba(95, 158, 160, 0.05);\r\n    overflow-x: hidden;\r\n\r\n    &::-webkit-scrollbar {\r\n      display: none;\r\n    }\r\n\r\n    .music-list {\r\n      position: relative;\r\n      display: flex;\r\n      margin: 5px auto 5px;\r\n      padding: 0 10px;\r\n      width: 96%;\r\n      height: 30px;\r\n      line-height: 30px;\r\n      overflow: hidden;\r\n      color: rgba(255, 255, 255, 1);\r\n      font-weight: bolder;\r\n      border-radius: 5px;\r\n      -o-text-overflow: ellipsis;\r\n      text-overflow: ellipsis;\r\n      // background: rgba(172, 233, 236, 0.055);\r\n      transition: 0.2s;\r\n\r\n      .music-list-span {\r\n        display: inline-block;\r\n        width: 270px;\r\n        // font-size:13px;\r\n        text-align: center;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n        white-space: nowrap;\r\n      }\r\n      .option {\r\n        position: absolute;\r\n        padding-left: 120px;\r\n        width: 240px;\r\n        right: 0px;\r\n        box-sizing: border-box;\r\n\r\n        span {\r\n          display: inline-block;\r\n          width: 30px;\r\n          &:hover {\r\n            cursor: pointer;\r\n          }\r\n        }\r\n      }\r\n\r\n      &:hover {\r\n        color: rgb(88, 255, 241);\r\n        transform: scale(1.01);\r\n        // background: rgba(141, 251, 255, 0.192);\r\n      }\r\n    }\r\n  }\r\n}\r\n.pagination {\r\n  text-align: center;\r\n  background: none !important;\r\n\r\n  /deep/ .el-pager {\r\n    height: 30px !important;\r\n    background: none !important;\r\n  }\r\n  /deep/ .number,\r\n  /deep/ .btn-prev,\r\n  /deep/ .btn-quicknext,\r\n  /deep/ .btn-next,\r\n  /deep/ .el-input__inner,\r\n  /deep/ .more {\r\n    color: #f2fff7 !important;\r\n    transition: 0.2s;\r\n    background: transparent !important;\r\n  }\r\n  /deep/ .number:hover,\r\n  /deep/ .btn-prev:hover,\r\n  /deep/ .btn-quicknext:hover,\r\n  /deep/ .btn-next:hover,\r\n  /deep/ .el-input__inner:hover,\r\n  /deep/ .more:hover {\r\n    transform: scale(1.02);\r\n    color: #f7a588 !important;\r\n  }\r\n  /deep/ .active {\r\n    color: #f7a588 !important;\r\n  }\r\n  /deep/ .el-input__inner {\r\n    border: none;\r\n  }\r\n  /deep/ .el-pagination__jump {\r\n    color: #f7dd88 !important;\r\n  }\r\n  /deep/.el-pagination {\r\n    height: 100%;\r\n  }\r\n  .iconhover {\r\n    transition: 0.2s;\r\n    &:hover {\r\n      color: rgb(247, 243, 45);\r\n    }\r\n  }\r\n}\r\n</style>\r\n\r\n"]},"metadata":{},"sourceType":"module"}