{"ast":null,"code":"import createPersistedState from \"vuex-persistedstate\";\nexport default {\n  namespaced: true,\n  state: {\n    // 歌曲生成周期\n    plugins: [createPersistedState({\n      key: 'aplayer',\n      storage: window.localStorage,\n      whiteList: ['audio', 'audition', 'musicAudioStatu', 'alplayShow']\n    })],\n    audio: [],\n    //播放列表音乐\n    audition: [],\n    //试听歌曲\n    musicAudioStatu: 0,\n    //控制audio,audition两个播放器显示\n    alplayShow: true\n  },\n  actions: {},\n  mutations: {\n    //播放器添加歌曲\n    addSONG(state, song) {\n      for (let item of state.audio) {\n        if (item.id === song.id) {\n          this._vm.$message(\"播放列表已存在这首歌\");\n\n          return;\n        }\n      }\n\n      state.audio.push(song); //将歌曲添加\n\n      this._vm.$message({\n        type: \"success\",\n        message: \"歌曲已添加到播放列表\"\n      });\n    },\n\n    //删除歌曲\n    deleteMUSIC(state, index) {\n      state.audio.splice(index, 1);\n\n      this._vm.$message({\n        type: \"success\",\n        message: \"歌曲已移出播放列表\"\n      });\n    },\n\n    //添加试听\n    addAUDITION(state, song) {\n      for (let item of state.audition) {\n        if (item.id === song.id) {\n          this._vm.$message(\"正在试听这首歌\");\n\n          return;\n        }\n      }\n\n      state.musicAudioStatu = 1;\n      state.audition.splice(0, 1);\n      state.audition[0] = song; //将歌曲添加\n\n      this._vm.$message({\n        type: \"success\",\n        message: \"歌曲已添加到试听\"\n      });\n    },\n\n    // 删除试听\n    deleteAUDITION(state, index) {\n      state.audition.splice(index, 1);\n\n      this._vm.$message({\n        type: \"success\",\n        message: \"歌曲已移出试听列表\"\n      });\n    },\n\n    //更换播放器\n    changeAPLAYER(state, statu) {\n      statu === 1 ? state.musicAudioStatu = 1 : state.musicAudioStatu = 0;\n    }\n\n  }\n};","map":null,"metadata":{},"sourceType":"module"}