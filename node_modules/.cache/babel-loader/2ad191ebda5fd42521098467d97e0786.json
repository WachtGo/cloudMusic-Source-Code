{"ast":null,"code":"import _asyncToGenerator from \"D:/data/\\u684C\\u9762/git/cloudMusic-Source-Code/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport QRCode from \"qrcode\";\nimport { getqrKey, getqrImg, getqrStatus as _getqrStatus, getloginStatus as _getloginStatus, loginOut as _loginOut } from \"@/api/login\";\nimport { getuserDetail as _getuserDetail, getAccount as _getAccount } from \"@/api/user\";\nimport { getTimestamp } from \"@/utils/commonApi\";\nexport default {\n  name: \"Login\",\n  data: function data() {\n    return {\n      loginWrapShow: false,\n      qrStatus: \"\",\n      qrtimer: null,\n      key: \"\",\n      user: {\n        avatarUrl: \"\",\n        nickname: \"\"\n      },\n      loginStatus: false\n    };\n  },\n  watch: {\n    loginWrapShow: function loginWrapShow() {\n      var that = this;\n\n      if (that.loginWrapShow) {\n        var adom = document.getElementById(\"qrStatus\");\n        console.log(\"adom\", adom);\n        that.qrtimer = setInterval(function () {\n          adom.click(); // console.log(\"刷新\");\n        }, 1000);\n      } else {\n        clearInterval(that.qrtimer);\n        console.log(\"停止\");\n      }\n    }\n  },\n  methods: {\n    goLogin: function goLogin() {\n      var _this = this;\n\n      this.loginWrapShow = true;\n      var params = {\n        timestamp: getTimestamp()\n      }; // console.log(params.timestamp)\n\n      getqrKey(params).then(function (res) {\n        _this.key = res.data.data.unikey;\n        var params = {\n          key: res.data.data.unikey // timestamp: getTimestamp()\n\n        };\n        getqrImg(params).then(function (res) {\n          console.log(res.data.data.qrurl);\n\n          _this.getQRCode(res.data.data.qrurl);\n        });\n      });\n    },\n    //生成二维码\n    getQRCode: function getQRCode(qrurl) {\n      var opts = {\n        errorCorrectionLevel: \"H\",\n        //容错级别\n        type: \"image/png\",\n        //生成的二维码类型\n        quality: 0.3,\n        //二维码质量\n        margin: 5,\n        //二维码留白边距\n        width: 180,\n        //宽\n        height: 180,\n        //高\n        text: \"\",\n        //二维码内容\n        color: {\n          dark: \"#333333\",\n          //前景色\n          light: \"#fff\" //背景色\n\n        }\n      };\n      this.QRCodeMsg = qrurl; //生成的二维码为URL地址js\n\n      var msg = document.getElementById(\"QRCode_header\"); // 将获取到的数据（val）画到msg（canvas）上\n\n      QRCode.toCanvas(msg, this.QRCodeMsg, opts, function (error) {// console.log(error)\n      });\n    },\n    //刷新二维码\n    refreshQr: function refreshQr() {\n      this.goLogin();\n    },\n    // 二维码状态\n    getqrStatus: function getqrStatus() {\n      var _this2 = this;\n\n      var params = {\n        key: this.key,\n        timestamp: getTimestamp()\n      };\n\n      _getqrStatus(params).then( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(res) {\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return res.data.message;\n\n                case 2:\n                  _this2.qrStatus = _context.sent;\n\n                  // console.log(this.qrStatus);\n                  if (res.data.code === 803) {\n                    _this2.qrStatus += \",1s后自动关闭\"; // console.log(\"登录成功：--\", res);、\n                    // this.$store.commit(\"setTOKEN\", res.data.cookie);\n\n                    setTimeout(function () {\n                      _this2.loginWrapShow = false;\n                    }, 1000);\n\n                    _this2.getloginStatus();\n                  } else if (res.data.code === 800) {\n                    _this2.qrStatus += \",请刷新获取\";\n                  }\n\n                case 4:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    },\n    //获取登录状态\n    getloginStatus: function getloginStatus() {\n      var _this3 = this;\n\n      _getloginStatus().then( /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(res) {\n          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  console.log(res); // let str =\n                  //   \"MUSIC_A_T=1481119727062; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/api/feedback; HTTPOnly;MUSIC_R_T=1481119757789; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/neapi/feedback; HTTPOnly;MUSIC_A_T=1481119727062; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/api/clientlog; HTTPOnly;MUSIC_A_T=1481119727062; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/wapi/clientlog; HTTPOnly;MUSIC_R_T=1481119757789; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/wapi/clientlog; HTTPOnly;MUSIC_R_T=1481119757789; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/api/feedback; HTTPOnly;MUSIC_A_T=1481119727062; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/weapi/clientlog; HTTPOnly;MUSIC_A_T=1481119727062; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/neapi/clientlog; HTTPOnly;MUSIC_A_T=1481119727062; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/openapi/clientlog; HTTPOnly;MUSIC_R_T=1481119757789; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/neapi/clientlog; HTTPOnly;MUSIC_R_T=1481119757789; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/eapi/clientlog; HTTPOnly;MUSIC_SNS=; Max-Age=0; Expires=Mon, 27 Feb 2023 15:10:28 GMT; Path=/;MUSIC_R_T=1481119757789; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/weapi/clientlog; HTTPOnly;MUSIC_R_T=1481119757789; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/openapi/clientlog; HTTPOnly;MUSIC_R_T=1481119757789; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/wapi/feedback; HTTPOnly;MUSIC_A_T=1481119727062; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/neapi/feedback; HTTPOnly;MUSIC_A_T=1481119727062; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/weapi/feedback; HTTPOnly;__csrf=a7ae33e29d089a9e30774e67bfd99367; Max-Age=1296010; Expires=Tue, 14 Mar 2023 15:10:38 GMT; Path=/;;MUSIC_A_T=1481119727062; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/eapi/clientlog; HTTPOnly;MUSIC_U=6bf80db2682091e66db7c358940e6034f555d03d999284f42033476c98e45796993166e004087dd3e30340b48322c4fd7a82616b73ff591e0195ea446a99c0ab92386fc4f57b0915a0d2166338885bd7; Max-Age=15552000; Expires=Sat, 26 Aug 2023 15:10:28 GMT; Path=/; HTTPOnly;MUSIC_A_T=1481119727062; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/wapi/feedback; HTTPOnly;MUSIC_A_T=1481119727062; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/eapi/feedback; HTTPOnly;MUSIC_R_T=1481119757789; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/eapi/feedback; HTTPOnly;MUSIC_R_T=1481119757789; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/weapi/feedback; HTTPOnly;MUSIC_R_T=1481119757789; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/api/clientlog; HTTPOnly\";\n                  // console.log(\"------------\", encodeURIComponent(str));\n\n                  if (!res.data.data.profile) {\n                    _context2.next = 9;\n                    break;\n                  }\n\n                  _context2.next = 4;\n                  return res.data.data.profile;\n\n                case 4:\n                  _this3.user = _context2.sent;\n                  _this3.loginStatus = true;\n\n                  _this3.$message({\n                    type: \"success\",\n                    message: \"已登录\"\n                  });\n\n                  _context2.next = 10;\n                  break;\n\n                case 9:\n                  _this3.$message({\n                    type: \"error\",\n                    message: \"当前未登录\"\n                  });\n\n                case 10:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function (_x2) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n    },\n    //退出登录\n    loginOut: function loginOut() {\n      var _this4 = this;\n\n      var params = {// cookie: \"MUSIC_SNS=; Max-Age=0; Expires=Sun, 07 Aug 2022 07:29:20 GMT; Path=/;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/eapi/feedback; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/api/feedback; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/wapi/clientlog; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/openapi/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/api/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/openapi/clientlog; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/eapi/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/weapi/feedback; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/wapi/feedback; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/api/feedback; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/neapi/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/wapi/feedback; HTTPOnly;NMTID=00O7WKRxVwcZw0Uw0D6ubODlxpdLj4AAAGCdzVVLw; Max-Age=315360000; Expires=Wed, 04 Aug 2032 07:29:20 GMT; Path=/;;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/weapi/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/neapi/feedback; HTTPOnly;MUSIC_U=9611c371e6419e2c184a366a7ca936bfe793a0a6f0d4dbbbb88db8dba5edf83d993166e004087dd37a99ad5471c3636273479095928a9cef26de8349c63f526ad40a31ebc291eb4ad4dbf082a8813684; Max-Age=15552000; Expires=Fri, 03 Feb 2023 07:29:20 GMT; Path=/; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/weapi/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/eapi/clientlog; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/weapi/feedback; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/neapi/feedback; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/eapi/feedback; HTTPOnly;__csrf=d1f2fa83b3815f03a3448349af4ecc04; Max-Age=1296010; Expires=Mon, 22 Aug 2022 07:29:30 GMT; Path=/;;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/api/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/wapi/clientlog; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/neapi/clientlog; HTTPOnly\",\n      };\n\n      _loginOut(params).then(function (res) {\n        // this.$store.commit(\"removeTOKEN\", \"token\");\n        _this4.loginStatus = false; //登录状态\n\n        _this4.user = {};\n      });\n    },\n    //获取账户信息\n    getAccount: function getAccount() {\n      _getAccount().then(function (res) {\n        console.log(\"账号信息---：\", res);\n      });\n    },\n    //获取用户详情\n    getuserDetail: function getuserDetail() {\n      // 374598092 Wacht丶T\n      _getuserDetail({\n        uid: 374598092\n      }).then(function (res) {\n        console.log(\"用户详情---：\", res);\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA;AACA,SACAA,QADA,EAEAC,QAFA,EAGAC,2BAHA,EAIAC,iCAJA,EAKAC,qBALA,QAMA,aANA;AAOA;AACA;AACA;AACAC,eADA;AAEAC,MAFA,kBAEA;AACA;AACAC,0BADA;AAEAC,kBAFA;AAGAC,mBAHA;AAIAC,aAJA;AAKAC;AACAC,qBADA;AAEAC;AAFA,OALA;AASAC;AATA;AAWA,GAdA;AAeAC;AACAR;AACA;;AACA;AACA;AACAS;AACAC;AACAC,uBADA,CAEA;AACA,SAHA,EAGA,IAHA;AAIA,OAPA,MAOA;AACAC;AACAH;AACA;AACA;AAdA,GAfA;AA+BAI;AACAC,WADA,qBACA;AAAA;;AACA;AACA;AACAC;AADA,QAFA,CAKA;;AACAtB;AACA;AACA;AACAU,mCADA,CAEA;;AAFA;AAIAT;AACAe;;AACA;AACA,SAHA;AAIA,OAVA;AAWA,KAlBA;AAmBA;AACAO,aApBA,qBAoBAC,KApBA,EAoBA;AACA;AACAC,iCADA;AACA;AACAC,yBAFA;AAEA;AACAC,oBAHA;AAGA;AACAC,iBAJA;AAIA;AACAC,kBALA;AAKA;AACAC,mBANA;AAMA;AACAC,gBAPA;AAOA;AACAC;AACAC,yBADA;AACA;AACAC,uBAFA,CAEA;;AAFA;AARA;AAaA,6BAdA,CAcA;;AACA,yDAfA,CAgBA;;AACAC,mEACA;AACA,OAFA;AAGA,KAxCA;AAyCA;AACAC,aA1CA,uBA0CA;AACA;AACA,KA5CA;AA6CA;AACAlC,eA9CA,yBA8CA;AAAA;;AACA;AACAQ,qBADA;AAEAY;AAFA;;AAIApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEAmC,gBAFA;;AAAA;AAEA,iCAFA;;AAGA;AACA;AACA,kDADA,CAEA;AACA;;AACAC;AACA;AACA,qBAFA,EAEA,IAFA;;AAGA;AACA,mBARA,MAQA;AACA;AACA;;AAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAgBA,KAnEA;AAoEA;AACAnC,kBArEA,4BAqEA;AAAA;;AACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACAa,mCADA,CAEA;AACA;AACA;;AAJA,uBAKAqB,qBALA;AAAA;AAAA;AAAA;;AAAA;AAAA,yBAMAA,qBANA;;AAAA;AAMA,6BANA;AAOA;;AACA;AACAX,mCADA;AAEAa;AAFA;;AARA;AAAA;;AAAA;AAaA;AACAb,iCADA;AAEAa;AAFA;;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAmBA,KAzFA;AA0FA;AACAnC,YA3FA,sBA2FA;AAAA;;AACA,oBACA;AADA;;AAGAA;AACA;AACA,mCAFA,CAEA;;AACA;AACA,OAJA;AAKA,KApGA;AAqGA;AACAoC,cAtGA,wBAsGA;AACAA;AACAxB;AACA,OAFA;AAGA,KA1GA;AA2GA;AACAyB,iBA5GA,2BA4GA;AACA;AACAA;AAAAC;AAAA;AACA1B;AACA,OAFA;AAGA;AAjHA;AA/BA","names":["getqrKey","getqrImg","getqrStatus","getloginStatus","loginOut","name","data","loginWrapShow","qrStatus","qrtimer","key","user","avatarUrl","nickname","loginStatus","watch","console","that","adom","clearInterval","methods","goLogin","timestamp","getQRCode","qrurl","errorCorrectionLevel","type","quality","margin","width","height","text","color","dark","light","QRCode","refreshQr","res","setTimeout","message","getAccount","getuserDetail","uid"],"sourceRoot":"src/components/login","sources":["index.vue"],"sourcesContent":["<template>\r\n  <!-- 暂时开启该功能 -->\r\n  <div>\r\n    <div v-if=\"!loginStatus\" class=\"login\" @click=\"goLogin\">登录</div>\r\n    <div v-if=\"loginStatus\" class=\"user\">\r\n      <img class=\"userAvatar\" :src=\"user.avatarUrl\" alt=\"\" /><span>{{\r\n        user.nickname\r\n      }}</span>\r\n    </div>\r\n    <el-button style=\"color: black\" @click=\"getloginStatus\"\r\n      >登录状态获取</el-button\r\n    >\r\n    <el-button style=\"color: black\" @click=\"loginOut\">退出登录</el-button>\r\n    <el-button style=\"color: black\" @click=\"getuserDetail\"\r\n      >获取用户详情</el-button\r\n    >\r\n    <el-button style=\"color: black\" @click=\"getAccount\">获取账号信息</el-button>\r\n    <div class=\"loginWrap\" v-if=\"loginWrapShow\">\r\n      <p class=\"loginClose\" @click=\"loginWrapShow = false\">\r\n        <i class=\"el-icon-close\"></i>\r\n      </p>\r\n      <div class=\"imgWrap\">\r\n        <canvas id=\"QRCode_header\"></canvas>\r\n      </div>\r\n      <p class=\"refreshQr\"><span @click=\"refreshQr\">刷新二维码</span></p>\r\n      <p id=\"qrStatus\" @click=\"getqrStatus\">{{ qrStatus }}</p>\r\n      <p class=\"enter\" @click=\"getqrStatus\">扫码确认登录后，点击此处进入</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport QRCode from \"qrcode\";\r\nimport {\r\n  getqrKey,\r\n  getqrImg,\r\n  getqrStatus,\r\n  getloginStatus,\r\n  loginOut,\r\n} from \"@/api/login\";\r\nimport { getuserDetail, getAccount } from \"@/api/user\";\r\nimport { getTimestamp } from \"@/utils/commonApi\";\r\nexport default {\r\n  name: \"Login\",\r\n  data() {\r\n    return {\r\n      loginWrapShow: false,\r\n      qrStatus: \"\",\r\n      qrtimer: null,\r\n      key: \"\",\r\n      user: {\r\n        avatarUrl: \"\",\r\n        nickname: \"\",\r\n      },\r\n      loginStatus: false,\r\n    };\r\n  },\r\n  watch: {\r\n    loginWrapShow: function () {\r\n      var that = this;\r\n      if (that.loginWrapShow) {\r\n        const adom = document.getElementById(\"qrStatus\");\r\n        console.log(\"adom\", adom);\r\n        that.qrtimer = setInterval(() => {\r\n          adom.click();\r\n          // console.log(\"刷新\");\r\n        }, 1000);\r\n      } else {\r\n        clearInterval(that.qrtimer);\r\n        console.log(\"停止\");\r\n      }\r\n    },\r\n  },\r\n  methods: {\r\n    goLogin() {\r\n      this.loginWrapShow = true;\r\n      let params = {\r\n        timestamp: getTimestamp(),\r\n      };\r\n      // console.log(params.timestamp)\r\n      getqrKey(params).then((res) => {\r\n        this.key = res.data.data.unikey;\r\n        let params = {\r\n          key: res.data.data.unikey,\r\n          // timestamp: getTimestamp()\r\n        };\r\n        getqrImg(params).then((res) => {\r\n          console.log(res.data.data.qrurl);\r\n          this.getQRCode(res.data.data.qrurl);\r\n        });\r\n      });\r\n    },\r\n    //生成二维码\r\n    getQRCode(qrurl) {\r\n      let opts = {\r\n        errorCorrectionLevel: \"H\", //容错级别\r\n        type: \"image/png\", //生成的二维码类型\r\n        quality: 0.3, //二维码质量\r\n        margin: 5, //二维码留白边距\r\n        width: 180, //宽\r\n        height: 180, //高\r\n        text: \"\", //二维码内容\r\n        color: {\r\n          dark: \"#333333\", //前景色\r\n          light: \"#fff\", //背景色\r\n        },\r\n      };\r\n      this.QRCodeMsg = qrurl; //生成的二维码为URL地址js\r\n      let msg = document.getElementById(\"QRCode_header\");\r\n      // 将获取到的数据（val）画到msg（canvas）上\r\n      QRCode.toCanvas(msg, this.QRCodeMsg, opts, function (error) {\r\n        // console.log(error)\r\n      });\r\n    },\r\n    //刷新二维码\r\n    refreshQr() {\r\n      this.goLogin();\r\n    },\r\n    // 二维码状态\r\n    getqrStatus() {\r\n      let params = {\r\n        key: this.key,\r\n        timestamp: getTimestamp(),\r\n      };\r\n      getqrStatus(params).then(async (res) => {\r\n        // console.log(res);\r\n        this.qrStatus = await res.data.message;\r\n        // console.log(this.qrStatus);\r\n        if (res.data.code === 803) {\r\n          this.qrStatus += \",1s后自动关闭\";\r\n          // console.log(\"登录成功：--\", res);、\r\n          // this.$store.commit(\"setTOKEN\", res.data.cookie);\r\n          setTimeout(() => {\r\n            this.loginWrapShow = false;\r\n          }, 1000);\r\n          this.getloginStatus();\r\n        } else if (res.data.code === 800) {\r\n          this.qrStatus += \",请刷新获取\";\r\n        }\r\n      });\r\n    },\r\n    //获取登录状态\r\n    getloginStatus() {\r\n      getloginStatus().then(async (res) => {\r\n        console.log(res);\r\n        // let str =\r\n        //   \"MUSIC_A_T=1481119727062; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/api/feedback; HTTPOnly;MUSIC_R_T=1481119757789; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/neapi/feedback; HTTPOnly;MUSIC_A_T=1481119727062; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/api/clientlog; HTTPOnly;MUSIC_A_T=1481119727062; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/wapi/clientlog; HTTPOnly;MUSIC_R_T=1481119757789; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/wapi/clientlog; HTTPOnly;MUSIC_R_T=1481119757789; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/api/feedback; HTTPOnly;MUSIC_A_T=1481119727062; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/weapi/clientlog; HTTPOnly;MUSIC_A_T=1481119727062; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/neapi/clientlog; HTTPOnly;MUSIC_A_T=1481119727062; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/openapi/clientlog; HTTPOnly;MUSIC_R_T=1481119757789; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/neapi/clientlog; HTTPOnly;MUSIC_R_T=1481119757789; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/eapi/clientlog; HTTPOnly;MUSIC_SNS=; Max-Age=0; Expires=Mon, 27 Feb 2023 15:10:28 GMT; Path=/;MUSIC_R_T=1481119757789; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/weapi/clientlog; HTTPOnly;MUSIC_R_T=1481119757789; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/openapi/clientlog; HTTPOnly;MUSIC_R_T=1481119757789; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/wapi/feedback; HTTPOnly;MUSIC_A_T=1481119727062; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/neapi/feedback; HTTPOnly;MUSIC_A_T=1481119727062; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/weapi/feedback; HTTPOnly;__csrf=a7ae33e29d089a9e30774e67bfd99367; Max-Age=1296010; Expires=Tue, 14 Mar 2023 15:10:38 GMT; Path=/;;MUSIC_A_T=1481119727062; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/eapi/clientlog; HTTPOnly;MUSIC_U=6bf80db2682091e66db7c358940e6034f555d03d999284f42033476c98e45796993166e004087dd3e30340b48322c4fd7a82616b73ff591e0195ea446a99c0ab92386fc4f57b0915a0d2166338885bd7; Max-Age=15552000; Expires=Sat, 26 Aug 2023 15:10:28 GMT; Path=/; HTTPOnly;MUSIC_A_T=1481119727062; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/wapi/feedback; HTTPOnly;MUSIC_A_T=1481119727062; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/eapi/feedback; HTTPOnly;MUSIC_R_T=1481119757789; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/eapi/feedback; HTTPOnly;MUSIC_R_T=1481119757789; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/weapi/feedback; HTTPOnly;MUSIC_R_T=1481119757789; Max-Age=2147483647; Expires=Sat, 17 Mar 2091 18:24:35 GMT; Path=/api/clientlog; HTTPOnly\";\r\n        // console.log(\"------------\", encodeURIComponent(str));\r\n        if (res.data.data.profile) {\r\n          this.user = await res.data.data.profile;\r\n          this.loginStatus = true;\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"已登录\",\r\n          });\r\n        } else {\r\n          this.$message({\r\n            type: \"error\",\r\n            message: \"当前未登录\",\r\n          });\r\n        }\r\n      });\r\n    },\r\n    //退出登录\r\n    loginOut() {\r\n      let params = {\r\n        // cookie: \"MUSIC_SNS=; Max-Age=0; Expires=Sun, 07 Aug 2022 07:29:20 GMT; Path=/;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/eapi/feedback; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/api/feedback; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/wapi/clientlog; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/openapi/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/api/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/openapi/clientlog; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/eapi/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/weapi/feedback; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/wapi/feedback; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/api/feedback; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/neapi/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/wapi/feedback; HTTPOnly;NMTID=00O7WKRxVwcZw0Uw0D6ubODlxpdLj4AAAGCdzVVLw; Max-Age=315360000; Expires=Wed, 04 Aug 2032 07:29:20 GMT; Path=/;;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/weapi/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/neapi/feedback; HTTPOnly;MUSIC_U=9611c371e6419e2c184a366a7ca936bfe793a0a6f0d4dbbbb88db8dba5edf83d993166e004087dd37a99ad5471c3636273479095928a9cef26de8349c63f526ad40a31ebc291eb4ad4dbf082a8813684; Max-Age=15552000; Expires=Fri, 03 Feb 2023 07:29:20 GMT; Path=/; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/weapi/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/eapi/clientlog; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/weapi/feedback; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/neapi/feedback; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/eapi/feedback; HTTPOnly;__csrf=d1f2fa83b3815f03a3448349af4ecc04; Max-Age=1296010; Expires=Mon, 22 Aug 2022 07:29:30 GMT; Path=/;;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/api/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/wapi/clientlog; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Fri, 25 Aug 2090 10:43:27 GMT; Path=/neapi/clientlog; HTTPOnly\",\r\n      };\r\n      loginOut(params).then((res) => {\r\n        // this.$store.commit(\"removeTOKEN\", \"token\");\r\n        this.loginStatus = false; //登录状态\r\n        this.user = {};\r\n      });\r\n    },\r\n    //获取账户信息\r\n    getAccount() {\r\n      getAccount().then((res) => {\r\n        console.log(\"账号信息---：\", res);\r\n      });\r\n    },\r\n    //获取用户详情\r\n    getuserDetail() {\r\n      // 374598092 Wacht丶T\r\n      getuserDetail({ uid: 374598092 }).then((res) => {\r\n        console.log(\"用户详情---：\", res);\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.login,\r\n.user {\r\n  position: absolute;\r\n  right: 10px;\r\n  color: rgba(238, 238, 238, 0.61);\r\n  text-align: center;\r\n  // background: rgb(161, 145, 139);\r\n  &:hover {\r\n    cursor: pointer;\r\n    color: #eee;\r\n  }\r\n\r\n  .userAvatar {\r\n    width: 30px;\r\n    height: 30px;\r\n    border-radius: 50%;\r\n  }\r\n}\r\n.loginWrap {\r\n  z-index: 999;\r\n  position: fixed;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  margin: auto;\r\n  width: 500px;\r\n  height: 300px;\r\n  background-color: rgba(51, 73, 128, 0.856);\r\n\r\n  .loginClose {\r\n    position: absolute;\r\n    height: 20px;\r\n    top: 5px;\r\n    right: 5px;\r\n    /deep/ .el-icon-close {\r\n      font-size: 20px;\r\n\r\n      &:hover {\r\n        cursor: pointer;\r\n      }\r\n    }\r\n  }\r\n  .imgWrap {\r\n    // display: inline-block;\r\n    margin: 50px auto 0;\r\n    width: 180px;\r\n    height: 180px;\r\n    #QRCode_header {\r\n      margin: auto;\r\n    }\r\n  }\r\n  #qrStatus {\r\n    color: #eee;\r\n    text-align: center;\r\n    // background-color: #eee;\r\n  }\r\n  .refreshQr {\r\n    color: rgba(255, 255, 255, 0.808);\r\n    margin-bottom: 20px;\r\n    text-align: center;\r\n    transition: 0.2s;\r\n    span {\r\n      font-size: 15px;\r\n      &:hover {\r\n        color: rgb(228, 74, 74);\r\n        cursor: pointer;\r\n      }\r\n    }\r\n  }\r\n  .enter {\r\n    position: absolute;\r\n    bottom: 0;\r\n    right: 5px;\r\n    font-size: 14px;\r\n    color: rgba(221, 191, 152, 0.788);\r\n    transition: 0.2s;\r\n    &:hover {\r\n      color: rgba(221, 191, 152);\r\n      cursor: pointer;\r\n    }\r\n  }\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}