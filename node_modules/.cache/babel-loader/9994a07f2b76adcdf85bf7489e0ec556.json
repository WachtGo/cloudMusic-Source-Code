{"ast":null,"code":"import axios from 'axios';\nexport var download = function download(src, filename) {\n  if (!src) {\n    return;\n  }\n\n  var fileName = filename || ''; // 文件名\n\n  console.log('--', src); // const downloadFileA = document.createElement('a')\n  // document.body.append(downloadFileA)\n  // downloadFileA.href = src\n  // downloadFileA.download = `${fileName}.mp3`\n  // // 超链接 target=\"_blank\" 要增加 rel=\"noopener noreferrer\" 来堵住钓鱼安全漏洞。如果你在链接上使用 target=\"_blank\"属性，并且不加上rel=\"noopener\"属性，那么你就让用户暴露在一个非常简单的钓鱼攻击之下。(摘要)\n  // downloadFileA.rel = 'noopener noreferrer'\n  // downloadFileA.click()\n  // document.body.removeChild(downloadFileA)\n}; // export const download = function (src, filename) {\n//     if (!src) {\n//         return\n//     }\n//     let fileName = filename || '' // 文件名\n//     console.log('--',src)\n//     axios({\n//         method: 'get',\n//         url: src,\n//         changeOrigin: true,  //解决跨域\n//         responseType: 'blob',\n//         headers: { 'content-type': 'audio/mpeg' },\n//     }).then((res) => {\n//         let blobType = 'application/force-download' // 设置blob请求头\n//         let blob = new Blob([res.data], { type: res.data.type }) // 创建blob 设置blob文件类型 data 设置为后端返回的文件(例如mp3,jpeg) type:这里设置后端返回的类型 为 mp3\n//         let downa = document.createElement('a') // 创建A标签\n//         let href = window.URL.createObjectURL(blob) // 创建下载的链接\n//         downa.href = href // 下载地址\n//         downa.download = fileName // 下载文件名\n//         document.body.appendChild(downa)\n//         downa.click() // 模拟点击A标签\n//         document.body.removeChild(downa) // 下载完成移除元素\n//         window.URL.revokeObjectURL(href) // 释放blob对象\n//     }).catch(function (error) {\n//         // console.log(error)\n//     })\n// }","map":{"version":3,"sources":["D:/Desktop/git工作区/cloudMusic-Source-Code/src/utils/download.js"],"names":["axios","download","src","filename","fileName","console","log"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAUC,GAAV,EAAeC,QAAf,EAAyB;AAC7C,MAAI,CAACD,GAAL,EAAU;AACN;AACH;;AACD,MAAIE,QAAQ,GAAGD,QAAQ,IAAI,EAA3B,CAJ6C,CAIf;;AAC9BE,EAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAiBJ,GAAjB,EAL6C,CAM7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,CAdM,C,CAeP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["\r\nimport axios from 'axios'\r\nexport const download = function (src, filename) {\r\n    if (!src) {\r\n        return\r\n    }\r\n    let fileName = filename || '' // 文件名\r\n    console.log('--',src)\r\n    // const downloadFileA = document.createElement('a')\r\n    // document.body.append(downloadFileA)\r\n    // downloadFileA.href = src\r\n    // downloadFileA.download = `${fileName}.mp3`\r\n    // // 超链接 target=\"_blank\" 要增加 rel=\"noopener noreferrer\" 来堵住钓鱼安全漏洞。如果你在链接上使用 target=\"_blank\"属性，并且不加上rel=\"noopener\"属性，那么你就让用户暴露在一个非常简单的钓鱼攻击之下。(摘要)\r\n    // downloadFileA.rel = 'noopener noreferrer'\r\n    // downloadFileA.click()\r\n    // document.body.removeChild(downloadFileA)\r\n}\r\n// export const download = function (src, filename) {\r\n//     if (!src) {\r\n//         return\r\n//     }\r\n//     let fileName = filename || '' // 文件名\r\n//     console.log('--',src)\r\n//     axios({\r\n//         method: 'get',\r\n//         url: src,\r\n//         changeOrigin: true,  //解决跨域\r\n//         responseType: 'blob',\r\n//         headers: { 'content-type': 'audio/mpeg' },\r\n//     }).then((res) => {\r\n//         let blobType = 'application/force-download' // 设置blob请求头\r\n//         let blob = new Blob([res.data], { type: res.data.type }) // 创建blob 设置blob文件类型 data 设置为后端返回的文件(例如mp3,jpeg) type:这里设置后端返回的类型 为 mp3\r\n//         let downa = document.createElement('a') // 创建A标签\r\n//         let href = window.URL.createObjectURL(blob) // 创建下载的链接\r\n//         downa.href = href // 下载地址\r\n//         downa.download = fileName // 下载文件名\r\n//         document.body.appendChild(downa)\r\n//         downa.click() // 模拟点击A标签\r\n//         document.body.removeChild(downa) // 下载完成移除元素\r\n//         window.URL.revokeObjectURL(href) // 释放blob对象\r\n//     }).catch(function (error) {\r\n//         // console.log(error)\r\n//     })\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}