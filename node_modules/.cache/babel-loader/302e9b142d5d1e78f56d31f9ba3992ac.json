{"ast":null,"code":"import _asyncToGenerator from \"D:/data/\\u684C\\u9762/\\u4EE3\\u7801\\u6587\\u4EF6\\u5939/git/cloudMusic-Source-Code-main/cloudMusic-Source-Code-main/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.string.sub.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getHotPlayList as _getHotPlayList, getAllPlayList as _getAllPlayList, getPlaylist as _getPlaylist } from \"@/api/api\";\nimport { transPlayCount } from \"@/utils/commonApi\";\nexport default {\n  data: function data() {\n    return {\n      hotPlaylistTag: [],\n      categaryShow: false,\n      order: \"最新\",\n      currentTag: \"全部\",\n      categories: {},\n      categoryTag: {\n        0: [],\n        1: [],\n        2: [],\n        3: [],\n        4: []\n      },\n      playListTable: [],\n      count: 0,\n      //初始页\n      currentPage: 1\n    };\n  },\n  watch: {\n    //排列顺序发生变化时，自动获取\n    order: function order() {\n      this.getPlaylist(this.currentTag);\n    }\n  },\n  mounted: function mounted() {\n    this.getHotPlayList();\n    this.getAllPlayList();\n    this.getPlaylist(this.currentTag);\n  },\n  methods: {\n    //获取热门分类歌单\n    getHotPlayList: function getHotPlayList() {\n      var that = this;\n\n      _getHotPlayList().then(function (res) {\n        that.hotPlaylistTag = res.data.tags;\n      });\n    },\n    //获取全部歌单分类\n    getAllPlayList: function getAllPlayList() {\n      var that = this;\n\n      _getAllPlayList().then( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(res) {\n          var _loop, key;\n\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return res.data.categories;\n\n                case 2:\n                  that.categories = _context.sent;\n\n                  _loop = function _loop(key) {\n                    res.data.sub.forEach(function (item) {\n                      if (item.category == key) {\n                        that.categoryTag[key].push(item); // console.log(that.categoryTag)\n                      }\n                    });\n                  };\n\n                  for (key in that.categoryTag) {\n                    _loop(key);\n                  }\n\n                case 5:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    },\n    //获取歌单列表----\n    getPlaylist: function getPlaylist(cat, notChangePage) {\n      var that = this;\n      var params = {\n        cat: cat,\n        order: that.order,\n        limit: 15,\n        offset: (that.currentPage - 1) * 15\n      };\n      that.categaryShow = false;\n      if (that.currentTag === cat && notChangePage) return;\n      that.playListTable = []; //清空，重新获取，防止页面图片加载慢\n\n      that.currentTag = cat;\n\n      _getPlaylist(params).then( /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(res) {\n          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.next = 2;\n                  return res.data.playlists;\n\n                case 2:\n                  that.playListTable = _context2.sent;\n                  _context2.next = 5;\n                  return res.data.total;\n\n                case 5:\n                  that.count = _context2.sent;\n                  // transPlayCount(that.playListTable)\n                  transPlayCount(that.playListTable, \"playCount\");\n\n                case 7:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function (_x2) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n    },\n    //传入歌单id进入歌单详情\n    goSongList: function goSongList(songListDetail) {\n      //传入歌单id进入歌单详情\n      console.log(\"歌单详情\", songListDetail);\n      var that = this;\n      that.$router.push({\n        name: \"playListDetails\",\n        params: {\n          playListDetail: songListDetail\n        }\n      });\n    },\n    //分页\n    handleCurrentChange: function handleCurrentChange(currentPage) {\n      // console.log(`当前页: ${currentPage}`);\n      var that = this;\n      that.currentPage = currentPage;\n      that.getPlaylist(that.currentTag, false);\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module"}