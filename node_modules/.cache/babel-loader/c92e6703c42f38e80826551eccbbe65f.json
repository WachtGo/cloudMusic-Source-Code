{"ast":null,"code":"import _defineProperty from \"D:/data/\\u684C\\u9762/git/cloudMusic-Source-Code/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _asyncToGenerator from \"D:/data/\\u684C\\u9762/git/cloudMusic-Source-Code/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.function.name.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getDownloadUrl as _getDownloadUrl, getSongDetails as _getSongDetails, getSongComment as _getSongComment } from \"@/api/api\";\nimport { likeMusic as _likeMusic } from \"@/api/needLogin/musicOperate\";\nimport { download, transMusicTime } from \"@/utils/commonApi\";\nexport default {\n  // props: ['songId'],\n  data: function data() {\n    return {\n      //评论分页\n      currentPage: 1,\n      songUrlAdd: null,\n      // songId: '', //接收的歌曲id\n      songDetails: {\n        al: {\n          picUrl: \"\"\n        },\n        ar: [{\n          name: \"\"\n        }],\n        alia: [],\n        fee: 0\n      },\n      //歌曲详情\n      songComment: [],\n      commentCount: 0,\n      //搜索歌曲总数\n      count: 0\n    };\n  },\n  created: function created() {\n    //路由中含有歌曲详细信息时，直接使用\n    if (this.$route.params.songDetails) {\n      this.songDetails = this.$route.params.songDetails;\n      localStorage.setItem(\"songDetails\", JSON.stringify(this.$route.params.songDetails));\n      this.getSongComment(this.songDetails.id);\n    } else {\n      //路由只设置了歌曲id时，便发起请求获取歌曲信息。反之若都没有，代表只是刷新了页面，直接使用缓存获取路由信息\n      if (this.$route.params.id) {\n        this.getSongDetails();\n        this.getSongComment(this.$route.params.id);\n      } else {\n        this.songDetails = JSON.parse(localStorage.getItem(\"songDetails\"));\n      }\n    }\n  },\n  methods: _defineProperty({\n    // 分页\n    songhandleCurrentChange: function songhandleCurrentChange(currentPage) {\n      var that = this;\n      that.currentPage = currentPage;\n      that.getSongComment();\n    },\n    // 获取歌曲详情\n    getSongDetails: function getSongDetails() {\n      var that = this;\n      var params = {\n        ids: this.$route.params.id\n      };\n\n      _getSongDetails(params).then( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(res) {\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return res.data.songs[0];\n\n                case 2:\n                  that.songDetails = _context.sent;\n                  that.$set(that.songDetails, \"timer\", true);\n                  transMusicTime(that.songDetails, \"dt\");\n                  localStorage.setItem(\"songDetails\", JSON.stringify(that.songDetails)); // console.log(\"歌曲详情\", res.data.songs[0]);\n\n                case 6:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    },\n    //获取歌曲评论\n    getSongComment: function getSongComment(id) {\n      var that = this;\n      var params = {\n        id: id,\n        limit: 7,\n        offset: (that.currentPage - 1) * 7\n      };\n\n      _getSongComment(params).then(function (res) {\n        that.songComment = res.data.comments;\n        that.commentCount = res.data.total; // console.log(\"歌曲评论：\", res.data);\n      });\n    },\n    //喜欢/取消喜欢音乐\n    likeMusic: function likeMusic(id, like) {\n      var _this = this;\n\n      _likeMusic({\n        id: id,\n        like: like\n      }).then(function (res) {\n        if (res.data.code === 200) {\n          if (bool) {\n            _this.$message({\n              type: \"success\",\n              message: \"已添加入我的喜欢-可进入网易云音乐查看\"\n            });\n\n            return;\n          }\n\n          _this.$message({\n            type: \"success\",\n            message: \"已从我的喜欢列表删除\"\n          });\n        }\n      }).catch(function (error) {});\n    },\n    //试听音乐\n    listenMusic: function listenMusic(songDetails) {\n      // console.log('歌曲信息---：',songDetails)\n      if (songDetails.timer) {\n        //获取播放音乐链接\n        if (songDetails.noCopyrightRcmd) {\n          this.$message({\n            message: \"这首歌暂无版权\",\n            type: \"error\"\n          });\n          songDetails.timer = false;\n          setTimeout(function () {\n            songDetails.timer = true;\n          }, 3000);\n          return;\n        }\n\n        if (songDetails.fee == 1) {\n          this.$message({\n            message: \"VIP歌曲 - 只能试听30s\",\n            type: \"warning\"\n          });\n        } // 获取歌词\n        // getSongLyric({\n        //   id: id,\n        // }).then((res) => {\n        //   songlrc = res.data.lrc.lyric;\n        // }),\n\n\n        this.$store.commit(\"aplayer/addAUDITION\", {\n          name: songDetails.name,\n          //歌曲名\n          artist: songDetails.ar[0].name,\n          //作者\n          // url: songUrlAdd,\n          url: \"https://music.163.com/song/media/outer/url?id=\".concat(songDetails.id, \".mp3\"),\n          cover: songDetails.al.picUrl,\n          //   lrc: songlrc,\n          id: songDetails.id\n        });\n        songDetails.timer = false;\n        setTimeout(function () {\n          songDetails.timer = true;\n        }, 3000);\n      }\n    },\n    //添加歌曲到播放列表\n    playMusic: function playMusic(songDetails) {\n      if (songDetails.timer) {\n        //获取播放音乐链接\n        if (songDetails.noCopyrightRcmd) {\n          this.$message({\n            message: \"这首歌暂无版权\",\n            type: \"error\"\n          });\n          songDetails.timer = false;\n          setTimeout(function () {\n            songDetails.timer = true;\n          }, 3000);\n          return;\n        }\n\n        if (songDetails.fee == 1) {\n          this.$message({\n            message: \"VIP歌曲 - 只能试听30s\",\n            type: \"warning\"\n          });\n        } // 获取歌词\n        // getSongLyric({\n        //   id: id,\n        // }).then((res) => {\n        //   songlrc = res.data.lrc.lyric;\n        // }),\n\n\n        this.$store.commit(\"aplayer/addSONG\", {\n          name: songDetails.name,\n          //歌曲名\n          artist: songDetails.ar[0].name,\n          //作者\n          // url: songUrlAdd,\n          url: \"https://music.163.com/song/media/outer/url?id=\".concat(songDetails.id, \".mp3\"),\n          cover: songDetails.al.picUrl,\n          //   lrc: songlrc,\n          id: songDetails.id\n        });\n        songDetails.timer = false;\n        setTimeout(function () {\n          songDetails.timer = true;\n        }, 3000);\n      }\n    },\n    playMV: function playMV(mvId) {\n      //获取mv播放链接\n      this.$router.push({\n        name: \"mvPlay\",\n        params: {\n          mvId: mvId\n        }\n      });\n    },\n    //获取歌曲下载地址\n    getDownloadUrl: function getDownloadUrl(songId, songName) {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var that, params;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                that = _this2;\n                that.$message({\n                  type: \"warning\",\n                  message: \"正在尝试下载\"\n                });\n                params = {\n                  id: songId\n                };\n                _context3.next = 5;\n                return _getDownloadUrl(params).then( /*#__PURE__*/function () {\n                  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(res) {\n                    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                      while (1) {\n                        switch (_context2.prev = _context2.next) {\n                          case 0:\n                            _context2.next = 2;\n                            return download(res.data.data[0].url, songName);\n\n                          case 2:\n                            that.$message({\n                              type: \"success\",\n                              message: \"可以开始下载了\"\n                            });\n\n                          case 3:\n                          case \"end\":\n                            return _context2.stop();\n                        }\n                      }\n                    }, _callee2);\n                  }));\n\n                  return function (_x2) {\n                    return _ref2.apply(this, arguments);\n                  };\n                }());\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }))();\n    },\n    //进入歌手页面\n    goSingerDetail: function goSingerDetail(id) {\n      // let routerInfo = {\n      //   name: \"singerDetail\",\n      //   params: {\n      //     id: id,\n      //   },\n      // };\n      // this.$router.push({\n      //   name: \"emptyPage\",\n      //   params: routerInfo,\n      // });\n      this.$router.push({\n        name: \"singerDetail\",\n        params: {\n          id: id\n        }\n      });\n    }\n  }, \"playMV\", function playMV(mvId) {\n    //获取mv播放链接\n    this.$router.push({\n      name: \"mvPlay\",\n      params: {\n        mvId: mvId\n      }\n    });\n  })\n};","map":{"version":3,"mappings":"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","names":["data","currentPage","songUrlAdd","songDetails","al","picUrl","ar","name","alia","fee","songComment","commentCount","count","created","localStorage","JSON","methods","songhandleCurrentChange","that","getSongDetails","ids","res","transMusicTime","getSongComment","id","limit","offset","likeMusic","like","then","type","message","catch","listenMusic","setTimeout","artist","url","cover","playMusic","playMV","mvId","params","getDownloadUrl","songId","songName","download","goSingerDetail"],"sourceRoot":"src/views/songDetails","sources":["songDetails.vue"],"sourcesContent":["<template>\r\n  <div class=\"list-wrap\">\r\n    <div class=\"pageName\">歌曲详情</div>\r\n    <div class=\"descript\"></div>\r\n    <div>\r\n      <ul>\r\n        <div class=\"details\">\r\n          <div class=\"details-img\">\r\n            <img :src=\"songDetails.al.picUrl\" alt=\"\" />\r\n          </div>\r\n          <div class=\"detailsRight\">\r\n            <div style=\"margin-left: 0px; text-align: left; font-size: 20px\">\r\n              {{ songDetails.name }}\r\n              <div style=\"display: inline-block\">\r\n                <button\r\n                  class=\"my-button\"\r\n                  @click=\"likeMusic(songDetails.id, true)\"\r\n                >\r\n                  喜欢<i class=\"iFont el-icon-star-on iconhover\"></i></button\r\n                ><button\r\n                  class=\"my-button\"\r\n                  @click=\"likeMusic(songDetails.id, false)\"\r\n                >\r\n                  不喜欢了<i class=\"iFont el-icon-star-off iconhover\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div style=\"margin: 10px 0 10px 0; height: 30px; font-size: 14px\">\r\n              <span\r\n                class=\"playListNickName\"\r\n                @click=\"goSingerDetail(songDetails.ar[0].id)\"\r\n                >{{ songDetails.ar[0].name }}</span\r\n              ><span\r\n                ><br />\r\n                时长&nbsp;&nbsp;-&nbsp;&nbsp;<span\r\n                  style=\"color: antiquewhite\"\r\n                  >{{ songDetails.dt }}</span\r\n                ></span\r\n              >\r\n              <div class=\"option\">\r\n                <div class=\"flexBetween\">\r\n                  <!-- 试听 -->\r\n                  <span\r\n                    class=\"inline-block\"\r\n                    style=\"margin-right: 5px\"\r\n                    @click=\"listenMusic(songDetails)\"\r\n                    ><i class=\"el-icon-headset iconhover\"></i\r\n                  ></span>\r\n                  <!-- 添加到播放列表 -->\r\n                  <span\r\n                    class=\"inline-block\"\r\n                    style=\"margin-right: 5px\"\r\n                    v-if=\"songDetails.fee === 0 || songDetails.fee === 8\"\r\n                    @click.stop=\"playMusic(songDetails)\"\r\n                    ><i class=\"el-icon-folder-add iconhover\"></i>\r\n                  </span>\r\n                  <span\r\n                    class=\"inline-block\"\r\n                    style=\"\"\r\n                    v-if=\"Boolean(songDetails.mv)\"\r\n                    @click=\"playMV(songDetails.mv)\"\r\n                    ><i class=\"el-icon-video-camera iconhover\"></i>&nbsp;\r\n                  </span>\r\n\r\n                  <span\r\n                    class=\"inline-block\"\r\n                    style=\"margin-right: 5px\"\r\n                    v-if=\"songDetails.fee === 0 || songDetails.fee === 8\"\r\n                    @click=\"getDownloadUrl(songDetails.id, songDetails.name)\"\r\n                    ><i class=\"el-icon-download iconhover\"></i>&nbsp;</span\r\n                  ><span v-if=\"songDetails.fee !== 0\">&nbsp;&nbsp;&nbsp; </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div style=\"margin-top: 30px; font-size: 14px\">\r\n              <span>{{ songDetails.alia[0] }}</span>\r\n            </div>\r\n            <br />\r\n          </div>\r\n        </div>\r\n\r\n        <div style=\"padding: 0px 50px\">\r\n          <div class=\"countLine\">\r\n            <span v-if=\"commentCount\">评论({{ commentCount }}条)</span>\r\n          </div>\r\n          <div\r\n            class=\"hoverBackColor\"\r\n            v-for=\"item in songComment\"\r\n            :key=\"item.id\"\r\n          >\r\n            <img\r\n              :src=\"item.user.avatarUrl\"\r\n              style=\"width: 50px; border-radius: 25px\"\r\n            />\r\n            <span\r\n              style=\"display: inline-block; margin-left: 10px; font-size: 15px\"\r\n              >{{ item.user.nickname }}&nbsp;&nbsp;:&nbsp;&nbsp;</span\r\n            >\r\n            <span style=\"margin-left: 20px; width: 750px\">\r\n              {{ item.content }}\r\n            </span>\r\n            <div style=\"height: 30px\">\r\n              <span style=\"float: right; width: 130px\"\r\n                >&nbsp;&nbsp;时间：{{ item.timeStr }}</span\r\n              ><span style=\"float: right\"\r\n                >{{ item.likedCount }} 赞&nbsp;&nbsp;&nbsp;</span\r\n              >\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"pagination\">\r\n            <el-pagination\r\n              v-if=\"commentCount !== 0\"\r\n              @current-change=\"songhandleCurrentChange\"\r\n              :current-page.sync=\"currentPage\"\r\n              :page-size=\"7\"\r\n              layout=\"prev, pager, next, jumper\"\r\n              :total=\"commentCount\"\r\n              :background=\"true\"\r\n            >\r\n            </el-pagination>\r\n          </div>\r\n        </div>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getDownloadUrl, getSongDetails, getSongComment } from \"@/api/api\";\r\nimport { likeMusic } from \"@/api/needLogin/musicOperate\";\r\nimport { download, transMusicTime } from \"@/utils/commonApi\";\r\nexport default {\r\n  // props: ['songId'],\r\n  data() {\r\n    return {\r\n      //评论分页\r\n      currentPage: 1,\r\n      songUrlAdd: null,\r\n      // songId: '', //接收的歌曲id\r\n      songDetails: { al: { picUrl: \"\" }, ar: [{ name: \"\" }], alia: [], fee: 0 }, //歌曲详情\r\n      songComment: [],\r\n      commentCount: 0,\r\n      //搜索歌曲总数\r\n      count: 0,\r\n    };\r\n  },\r\n  created() {\r\n    //路由中含有歌曲详细信息时，直接使用\r\n    if (this.$route.params.songDetails) {\r\n      this.songDetails = this.$route.params.songDetails;\r\n      localStorage.setItem(\r\n        \"songDetails\",\r\n        JSON.stringify(this.$route.params.songDetails)\r\n      );\r\n      this.getSongComment(this.songDetails.id);\r\n    } else {\r\n      //路由只设置了歌曲id时，便发起请求获取歌曲信息。反之若都没有，代表只是刷新了页面，直接使用缓存获取路由信息\r\n      if (this.$route.params.id) {\r\n        this.getSongDetails();\r\n        this.getSongComment(this.$route.params.id);\r\n      } else {\r\n        this.songDetails = JSON.parse(localStorage.getItem(\"songDetails\"));\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    // 分页\r\n    songhandleCurrentChange(currentPage) {\r\n      var that = this;\r\n      that.currentPage = currentPage;\r\n      that.getSongComment();\r\n    },\r\n    // 获取歌曲详情\r\n    getSongDetails() {\r\n      var that = this;\r\n      let params = {\r\n        ids: this.$route.params.id,\r\n      };\r\n      getSongDetails(params).then(async (res) => {\r\n        that.songDetails = await res.data.songs[0];\r\n        that.$set(that.songDetails, \"timer\", true);\r\n        transMusicTime(that.songDetails, \"dt\");\r\n        localStorage.setItem(\"songDetails\", JSON.stringify(that.songDetails));\r\n        // console.log(\"歌曲详情\", res.data.songs[0]);\r\n      });\r\n    },\r\n    //获取歌曲评论\r\n    getSongComment(id) {\r\n      var that = this;\r\n      let params = {\r\n        id: id,\r\n        limit: 7,\r\n        offset: (that.currentPage - 1) * 7,\r\n      };\r\n      getSongComment(params).then((res) => {\r\n        that.songComment = res.data.comments;\r\n        that.commentCount = res.data.total;\r\n        // console.log(\"歌曲评论：\", res.data);\r\n      });\r\n    },\r\n    //喜欢/取消喜欢音乐\r\n    likeMusic(id, like) {\r\n      likeMusic({ id: id, like: like })\r\n        .then((res) => {\r\n          if (res.data.code === 200) {\r\n            if (bool) {\r\n              this.$message({\r\n                type: \"success\",\r\n                message: \"已添加入我的喜欢-可进入网易云音乐查看\",\r\n              });\r\n              return;\r\n            }\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"已从我的喜欢列表删除\",\r\n            });\r\n          }\r\n        })\r\n        .catch((error) => {});\r\n    },\r\n    //试听音乐\r\n    listenMusic(songDetails) {\r\n      // console.log('歌曲信息---：',songDetails)\r\n      if (songDetails.timer) {\r\n        //获取播放音乐链接\r\n        if (songDetails.noCopyrightRcmd) {\r\n          this.$message({\r\n            message: \"这首歌暂无版权\",\r\n            type: \"error\",\r\n          });\r\n          songDetails.timer = false;\r\n          setTimeout(() => {\r\n            songDetails.timer = true;\r\n          }, 3000);\r\n          return;\r\n        }\r\n        if (songDetails.fee == 1) {\r\n          this.$message({\r\n            message: \"VIP歌曲 - 只能试听30s\",\r\n            type: \"warning\",\r\n          });\r\n        }\r\n        // 获取歌词\r\n        // getSongLyric({\r\n        //   id: id,\r\n        // }).then((res) => {\r\n        //   songlrc = res.data.lrc.lyric;\r\n        // }),\r\n        this.$store.commit(\"aplayer/addAUDITION\", {\r\n          name: songDetails.name, //歌曲名\r\n          artist: songDetails.ar[0].name, //作者\r\n          // url: songUrlAdd,\r\n          url: `https://music.163.com/song/media/outer/url?id=${songDetails.id}.mp3`,\r\n          cover: songDetails.al.picUrl,\r\n          //   lrc: songlrc,\r\n          id: songDetails.id,\r\n        });\r\n        songDetails.timer = false;\r\n        setTimeout(() => {\r\n          songDetails.timer = true;\r\n        }, 3000);\r\n      }\r\n    },\r\n    //添加歌曲到播放列表\r\n    playMusic(songDetails) {\r\n      if (songDetails.timer) {\r\n        //获取播放音乐链接\r\n        if (songDetails.noCopyrightRcmd) {\r\n          this.$message({\r\n            message: \"这首歌暂无版权\",\r\n            type: \"error\",\r\n          });\r\n          songDetails.timer = false;\r\n          setTimeout(() => {\r\n            songDetails.timer = true;\r\n          }, 3000);\r\n          return;\r\n        }\r\n        if (songDetails.fee == 1) {\r\n          this.$message({\r\n            message: \"VIP歌曲 - 只能试听30s\",\r\n            type: \"warning\",\r\n          });\r\n        }\r\n        // 获取歌词\r\n        // getSongLyric({\r\n        //   id: id,\r\n        // }).then((res) => {\r\n        //   songlrc = res.data.lrc.lyric;\r\n        // }),\r\n        this.$store.commit(\"aplayer/addSONG\", {\r\n          name: songDetails.name, //歌曲名\r\n          artist: songDetails.ar[0].name, //作者\r\n          // url: songUrlAdd,\r\n          url: `https://music.163.com/song/media/outer/url?id=${songDetails.id}.mp3`,\r\n          cover: songDetails.al.picUrl,\r\n          //   lrc: songlrc,\r\n          id: songDetails.id,\r\n        });\r\n        songDetails.timer = false;\r\n        setTimeout(() => {\r\n          songDetails.timer = true;\r\n        }, 3000);\r\n      }\r\n    },\r\n    playMV(mvId) {\r\n      //获取mv播放链接\r\n      this.$router.push({\r\n        name: \"mvPlay\",\r\n        params: { mvId: mvId },\r\n      });\r\n    },\r\n    //获取歌曲下载地址\r\n    async getDownloadUrl(songId, songName) {\r\n      var that = this;\r\n      that.$message({\r\n        type: \"warning\",\r\n        message: \"正在尝试下载\",\r\n      });\r\n      let params = {\r\n        id: songId,\r\n      };\r\n      await getDownloadUrl(params).then(async (res) => {\r\n        // console.log('歌曲下载地址：', res.data)\r\n        // console.log(\"歌曲下载地址：\", res.data.data.url);\r\n        // download(res.data.data.url, songName)\r\n        await download(res.data.data[0].url, songName);\r\n        that.$message({\r\n          type: \"success\",\r\n          message: \"可以开始下载了\",\r\n        });\r\n      });\r\n    },\r\n    //进入歌手页面\r\n    goSingerDetail(id) {\r\n      // let routerInfo = {\r\n      //   name: \"singerDetail\",\r\n      //   params: {\r\n      //     id: id,\r\n      //   },\r\n      // };\r\n      // this.$router.push({\r\n      //   name: \"emptyPage\",\r\n      //   params: routerInfo,\r\n      // });\r\n      this.$router.push({\r\n        name: \"singerDetail\",\r\n        params: { id: id },\r\n      });\r\n    },\r\n    // 进入mv详情页面\r\n    playMV(mvId) {\r\n      //获取mv播放链接\r\n      this.$router.push({\r\n        name: \"mvPlay\",\r\n        params: { mvId: mvId },\r\n      });\r\n    },\r\n    //根据主题更换播放器颜色\r\n    // randomColor() {\r\n    //   return `#${((Math.random() * 0xffffff) << 0).toString(16)}`\r\n    // },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.descript {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  color: aliceblue;\r\n  font-weight: bolder;\r\n  padding: 10px 20px;\r\n  border-radius: 20px 20px 0 0;\r\n  background: rgba(221, 239, 243, 0.05);\r\n  box-sizing: border-box;\r\n}\r\n\r\n.list-wrap {\r\n  margin: 10px auto 0;\r\n  padding: 0 20px 10px;\r\n  width: 1120px;\r\n  height: 730px;\r\n  border-radius: 20px;\r\n  background: rgba(221, 239, 243, 0.05);\r\n  box-sizing: border-box;\r\n\r\n  ul {\r\n    height: 630px;\r\n    border-radius: 0 0 10px 10px;\r\n    background: rgba(221, 239, 243, 0.05);\r\n    overflow-x: hidden;\r\n\r\n    &::-webkit-scrollbar {\r\n      display: none;\r\n    }\r\n\r\n    .details {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      margin: 0 auto;\r\n      padding: 10px;\r\n      width: 98%;\r\n      height: 200px;\r\n      // border: 1px solid rgb(97, 226, 183);\r\n      border-radius: 10px;\r\n      // background: rgba(109, 109, 109, 0);\r\n      box-sizing: border-box;\r\n\r\n      .details-img {\r\n        display: inline-block;\r\n        // width: 180px;\r\n        // height: 180px;\r\n        border-radius: 10px;\r\n\r\n        img {\r\n          width: 180px;\r\n          height: 180px;\r\n          border-radius: 10px;\r\n          transition: 0.2s;\r\n\r\n          &:hover {\r\n            transform: scale(1.03);\r\n          }\r\n        }\r\n      }\r\n\r\n      .detailsRight {\r\n        width: 820px;\r\n        height: 180px;\r\n        // background: rgb(181, 209, 152);\r\n\r\n        .option {\r\n          display: inline-block;\r\n\r\n          margin-left: 50px;\r\n\r\n          .flexBetween {\r\n            .inline-block {\r\n              display: inline-block;\r\n              transition: 0.2s;\r\n\r\n              &:hover {\r\n                cursor: pointer;\r\n                color: rgb(246, 255, 119);\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        .songTns {\r\n          margin: 10px 0 10px 0;\r\n          width: 100%;\r\n          max-height: 75px;\r\n          font-size: 14px;\r\n          overflow-x: hidden;\r\n\r\n          &::-webkit-scrollbar {\r\n            display: none;\r\n          }\r\n        }\r\n\r\n        .playListNickName {\r\n          display: inline-block;\r\n          margin-bottom: 10px;\r\n          color: antiquewhite;\r\n          transition: 0.2s;\r\n\r\n          &:hover {\r\n            cursor: pointer;\r\n            color: #d6a897;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    .music-list {\r\n      display: flex;\r\n      padding: 10px 10px;\r\n      width: 1080px;\r\n      overflow: hidden;\r\n      color: rgba(255, 255, 255, 1);\r\n      font-weight: bolder;\r\n      -o-text-overflow: ellipsis;\r\n      text-overflow: ellipsis;\r\n      background: rgba(221, 239, 243, 0.11);\r\n      transition: 0.2s;\r\n\r\n      .music-list-span {\r\n        display: inline-block;\r\n        width: 270px;\r\n        text-align: center;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n        white-space: nowrap;\r\n      }\r\n\r\n      .option {\r\n        display: inline-block;\r\n        width: 250px;\r\n        text-align: center;\r\n\r\n        span {\r\n          display: inline-block;\r\n          width: 30px;\r\n\r\n          &:hover {\r\n            cursor: pointer;\r\n          }\r\n        }\r\n      }\r\n\r\n      &:hover {\r\n        background: rgba(76, 152, 155, 0.527);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.pagination {\r\n  text-align: center;\r\n  background: none !important;\r\n}\r\n\r\n/deep/ .el-pager {\r\n  height: 30px !important;\r\n  background: none !important;\r\n}\r\n\r\n/deep/ .number,\r\n/deep/ .btn-prev,\r\n/deep/ .btn-quicknext,\r\n/deep/ .btn-next,\r\n/deep/ .el-input__inner,\r\n/deep/ .more {\r\n  color: #f2fff7 !important;\r\n  background: transparent !important;\r\n}\r\n\r\n/deep/ .number:hover,\r\n/deep/ .btn-prev:hover,\r\n/deep/ .btn-quicknext:hover,\r\n/deep/ .btn-next:hover,\r\n/deep/ .el-input__inner:hover,\r\n/deep/ .more:hover {\r\n  color: #f7a588 !important;\r\n}\r\n\r\n/deep/ .active {\r\n  color: #f7a588 !important;\r\n}\r\n\r\n/deep/ .el-input__inner {\r\n  border: none;\r\n}\r\n\r\n/deep/ .el-pagination__jump {\r\n  color: #f7dd88 !important;\r\n}\r\n\r\n/deep/ .el-pagination {\r\n  height: 30px !important;\r\n}\r\n\r\n.iconhover {\r\n  transition: 0.2s;\r\n\r\n  &:hover {\r\n    color: rgb(247, 243, 45);\r\n  }\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}