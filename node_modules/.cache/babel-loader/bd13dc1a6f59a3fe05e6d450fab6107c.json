{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getSingerlist } from \"@/api/api\";\nexport default {\n  data() {\n    return {\n      type: \"-1\",\n      area: \"-1\",\n      align: \"热门\",\n      categaryShow: false,\n      initialtitle: [\"热门\", \"序号\"],\n      initialData: {\n        0: [{\n          order: \"热门\",\n          orderValue: \"a\"\n        }],\n        1: [{\n          order: \"A\",\n          orderValue: \"a\"\n        }, {\n          order: \"B\",\n          orderValue: \"b\"\n        }, {\n          order: \"C\",\n          orderValue: \"c\"\n        }, {\n          order: \"D\",\n          orderValue: \"d\"\n        }, {\n          order: \"E\",\n          orderValue: \"e\"\n        }, {\n          order: \"F\",\n          orderValue: \"f\"\n        }, {\n          order: \"G\",\n          orderValue: \"g\"\n        }, {\n          order: \"F\",\n          orderValue: \"f\"\n        }, {\n          order: \"H\",\n          orderValue: \"h\"\n        }, {\n          order: \"I\",\n          orderValue: \"i\"\n        }, {\n          order: \"J\",\n          orderValue: \"j\"\n        }, {\n          order: \"K\",\n          orderValue: \"k\"\n        }, {\n          order: \"L\",\n          orderValue: \"l\"\n        }, {\n          order: \"M\",\n          orderValue: \"m\"\n        }, {\n          order: \"N\",\n          orderValue: \"n\"\n        }, {\n          order: \"O\",\n          orderValue: \"o\"\n        }, {\n          order: \"P\",\n          orderValue: \"p\"\n        }, {\n          order: \"Q\",\n          orderValue: \"q\"\n        }, {\n          order: \"R\",\n          orderValue: \"r\"\n        }, {\n          order: \"S\",\n          orderValue: \"s\"\n        }, {\n          order: \"T\",\n          orderValue: \"t\"\n        }, {\n          order: \"U\",\n          orderValue: \"u\"\n        }, {\n          order: \"V\",\n          orderValue: \"v\"\n        }, {\n          order: \"W\",\n          orderValue: \"w\"\n        }, {\n          order: \"X\",\n          orderValue: \"x\"\n        }, {\n          order: \"Y\",\n          orderValue: \"y\"\n        }, {\n          order: \"Z\",\n          orderValue: \"z\"\n        }]\n      },\n      initial: \"-1\",\n      singerType: [{\n        type: \"-1\",\n        typeName: \"全部\"\n      }, {\n        type: \"1\",\n        typeName: \"男歌手\"\n      }, {\n        type: \"2\",\n        typeName: \"女歌手\"\n      }, {\n        type: \"3\",\n        typeName: \"乐队\"\n      }],\n      singerArea: [{\n        area: \"-1\",\n        areaName: \"全部\"\n      }, {\n        area: \"7\",\n        areaName: \"华语\"\n      }, {\n        area: \"96\",\n        areaName: \"欧美\"\n      }, {\n        area: \"8\",\n        areaName: \"日本\"\n      }, {\n        area: \"16\",\n        areaName: \"韩国\"\n      }, {\n        area: \"0\",\n        areaName: \"其他\"\n      }],\n      typeareaElement: [],\n      singerList: [],\n      count: 999,\n      //初始页\n      currentPage: 1\n    };\n  },\n\n  watch: {\n    //排列顺序发生变化时，自动获取\n    initial() {\n      this.getSingerlist(this.type, this.area);\n    }\n\n  },\n\n  mounted() {\n    this.typeElement = document.querySelectorAll(\".singer-type\");\n    this.areaElement = document.querySelectorAll(\".singer-area\");\n    this.getSingerlist(this.currentTag);\n  },\n\n  methods: {\n    //更改点击样式，方便查看选择的歌手类型和地区\n    checkedStyle(element, idx) {\n      // console.log(element)\n      element.forEach((item, index) => {\n        if (idx === index) {\n          item.classList.add(\"type-area-checked\");\n        } else {\n          if (item.classList.contains(\"type-area-checked\")) {\n            item.classList.remove(\"type-area-checked\");\n          }\n        }\n      });\n    },\n\n    areaStyle() {},\n\n    //获取歌手列表----\n    async getSingerlist(type, area) {\n      let that = this;\n      that.type = type;\n      that.area = area;\n      let params = {\n        type: that.type,\n        area: that.area,\n        initial: this.initial,\n        limit: 9,\n        offset: (that.currentPage - 1) * 9\n      }; // that.categaryShow = false\n      // if (that.currentTag === cat && notChangePage) return\n\n      that.singerList = []; //清空，重新获取，防止页面图片加载慢\n\n      await getSingerlist(params).then(async res => {\n        // console.log(res.data.artists);\n        that.singerList = await res.data.artists;\n      });\n    },\n\n    //获取歌手详情\n    goSingerDetail(singerDetail) {\n      // console.log(singerDetail);\n      let params = {\n        id: singerDetail.id,\n        img1v1Url: singerDetail.img1v1Url,\n        name: singerDetail.name,\n        alias: singerDetail.alias,\n        musicSize: singerDetail.musicSize,\n        albumSize: singerDetail.albumSize,\n        mvSize: singerDetail.mvSize,\n        briefDesc: \"\"\n      };\n      this.$router.push({\n        name: \"singerDetail\",\n        params: {\n          artist: params\n        }\n      });\n    },\n\n    //分页\n    handleCurrentChange: function (currentPage) {\n      // console.log(`当前页: ${currentPage}`);\n      var that = this;\n      that.currentPage = currentPage;\n      that.getSingerlist(that.type, that.area);\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module"}