{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getDownloadUrl, getSingerDetail, // getSingerDesc,\ngetSingerSongList, getSingerMvList, getSingerAlbum } from \"@/api/api\";\nimport { transMusicTime, transPlayCount, download } from \"@/utils/commonApi\";\nimport songlist from \"@/components/songlist.vue\";\nexport default {\n  components: {\n    songlist\n  },\n\n  // props: ['artist.id'],\n  data() {\n    return {\n      //歌手信息\n      artist: {\n        alias: [],\n        musicSize: \"\",\n        id: \"\",\n        img1v1Url: \"\",\n        name: \"\",\n        alias: [\"\", \"\"],\n        musicSize: \"\",\n        albumSize: \"\",\n        mvSize: \"\",\n        briefDesc: \"\"\n      },\n      songList: [],\n      albumList: [],\n      mvList: [],\n      tagSwitch: {\n        detailSwitch: true,\n        songSwitch: false,\n        albumSwitch: false,\n        mvSwitch: false\n      },\n      songcurrentPage: 1,\n      albumcurrentPage: 1,\n      mvcurrentPage: 1\n    };\n  },\n\n  created() {\n    // 判断路由传入了歌手信息还是歌手id\n    if (this.$route.params.artist) {\n      //路由传入的是歌手详情\n      this.artist = this.$route.params.artist;\n      this.getSingerDetail(this.$route.params.artist.id);\n    } else {\n      //当路由传入的是id时\n      this.$route.params.id ? //传入id，把之前的缓存清掉\n      this.getSingerDetail(this.$route.params.id) : this.artist = JSON.parse(localStorage.getItem(\"artist\")); //刷新页面会走向这，可以直接从缓存获取\n    }\n  },\n\n  methods: {\n    //显示歌手单曲、专辑、mv列表开关\n    switchChange(tag) {\n      var that = this;\n\n      for (let key in that.tagSwitch) {\n        if (key != tag) {\n          that.tagSwitch[key] = false;\n        }\n      }\n\n      that.tagSwitch[tag] = true;\n    },\n\n    //获取歌手详情\n    getSingerDetail(id) {\n      // id:4292 李荣浩\n      getSingerDetail({\n        id: id\n      }).then(async res => {\n        if (res.data.code === 200) {\n          this.artist = await res.data.artist; // console.log(\"歌手详情--\", res.data.artist);\n\n          localStorage.setItem(\"artist\", JSON.stringify(res.data.artist));\n        }\n      }).catch(res => {});\n    },\n\n    //获取歌手单曲列表\n    getSingerSongList(tag) {\n      var that = this;\n      let params = {\n        id: that.artist.id,\n        limit: 30,\n        offset: (that.songcurrentPage - 1) * 30\n      };\n      that.detailShow = false;\n      that.songList = [];\n      getSingerSongList(params).then(async res => {\n        // console.log('歌手单曲列表：', res.data)\n        that.songList = await res.data.songs; // that.songCount = res.data.total\n        //给每首曲子添加防抖\n\n        for (let item of that.songList) {\n          that.$set(item, \"timer\", true);\n        } //转换时间\n\n\n        let dt = \"dt\";\n        transMusicTime(that.songList, dt);\n      });\n      that.switchChange(tag);\n    },\n\n    //获取歌手专辑列表\n    getSingerAlbum(tag) {\n      var that = this;\n      let params = {\n        id: that.artist.id,\n        limit: 6,\n        offset: (that.albumcurrentPage - 1) * 6\n      };\n      that.detailShow = false;\n      that.albumList = [];\n      getSingerAlbum(params).then(res => {\n        // console.log(\"歌手专辑列表\", res.data.hotAlbums);\n        that.albumList = res.data.hotAlbums;\n      });\n      that.switchChange(tag);\n    },\n\n    //获取歌手mv\n    getSingerMvList(tag) {\n      var that = this;\n      let params = {\n        id: that.artist.id,\n        limit: 8,\n        offset: (that.mvcurrentPage - 1) * 8\n      };\n      that.mvList = [];\n      getSingerMvList(params).then(async res => {\n        // console.log(\"获取到的歌手MV：\", res.data.mvs);\n        that.mvList = await res.data.mvs; // 转换时间单位\n\n        transMusicTime(that.mvList, \"duration\"); //转换播放量单位\n\n        transPlayCount(that.mvList, \"playCount\");\n      });\n      that.switchChange(tag);\n    },\n\n    ////获取歌手描述\n    // getSingerDesc() {\n    //   // console.log(Boolean(this.artist))\n    //   var that = this;\n    //   let params = {\n    //     id: that.artist.id,\n    //   };\n    //   getSingerDesc(params).then((res) => {\n    //     console.log(\"歌手描述\", res.data);\n    //     that.artist = res.data.artist;\n    //   });\n    // },\n    //跳转到专辑详情\n    goAlbumDetail(albumId) {\n      this.$router.push({\n        name: \"albumDetail\",\n        params: {\n          albumId: albumId\n        }\n      });\n    },\n\n    //跳转到播放MV页面\n    playMV(mvId) {\n      //获取mv播放链接\n      this.$router.push({\n        name: \"mvPlay\",\n        params: {\n          mvId: mvId\n        }\n      });\n    },\n\n    //歌手歌曲分页\n    songHandleCurrentChange: function (currentPage) {\n      // console.log(`当前页: ${currentPage}`);\n      var that = this;\n      that.songcurrentPage = currentPage;\n      that.getSingerSongList(\"songSwitch\");\n    },\n    //歌手专辑分页\n    albumHandleCurrentChange: function (currentPage) {\n      // console.log(`当前页: ${currentPage}`);\n      var that = this;\n      that.albumcurrentPage = currentPage;\n      that.getSingerAlbum(\"albumSwitch\");\n    },\n    // 歌手mv分页\n    mvHandleCurrentChange: function (currentPage) {\n      // console.log(`当前页: ${currentPage}`);\n      var that = this;\n      that.mvcurrentPage = currentPage;\n      that.getSingerMvList(\"mvSwitch\");\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module"}