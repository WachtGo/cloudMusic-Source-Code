{"ast":null,"code":"import _createForOfIteratorHelper from \"D:/data/\\u684C\\u9762/git/cloudMusic-Source-Code/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getAlbumContent as _getAlbumContent, getDownloadUrl } from \"@/api/api\";\nimport { transMusicTime, download } from \"@/utils/commonApi\";\nimport songlist from \"@/components/songlist.vue\";\nexport default {\n  components: {\n    songlist: songlist\n  },\n  data: function data() {\n    return {\n      listen: [],\n      albumId: \"\",\n      albumSongs: [],\n      albumDesc: {\n        artist: {\n          img1v1Url: \"\"\n        }\n      }\n    };\n  },\n  mounted: function mounted() {\n    //缓存id,解决params数据在刷新页面后丢失，导致无法获取到歌单id\n    if (this.$route.params.albumId) {\n      localStorage.setItem(\"albumId\", this.$route.params.albumId);\n    } // 判断是否使用缓存\n\n\n    this.$route.params.albumId ? this.albumId = this.$route.params.albumId : this.albumId = localStorage.getItem(\"albumId\");\n    this.getAlbumContent();\n  },\n  methods: {\n    getAlbumContent: function getAlbumContent() {\n      var that = this;\n      var params = {\n        id: that.albumId\n      };\n\n      _getAlbumContent(params).then(function (res) {\n        // console.log(\"专辑信息---：\", res.data.album);\n        // console.log(\"专辑歌曲---：\", res.data.songs);\n        that.albumDesc = res.data.album;\n        that.albumSongs = res.data.songs; //给每个列表添加一个防抖\n\n        var _iterator = _createForOfIteratorHelper(that.albumSongs),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var item = _step.value;\n            that.$set(item, \"timer\", true);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n\n        var dt = \"dt\";\n        transMusicTime(that.albumSongs, dt);\n      });\n    } //根据主题更换播放器颜色\n    // randomColor() {\n    //   return `#${((Math.random() * 0xffffff) << 0).toString(16)}`\n    // },\n\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA;AACA;AACA;AAEA;AACAA;AACAC;AADA,GADA;AAIAC,MAJA,kBAIA;AACA;AACAC,gBADA;AAEAC,iBAFA;AAGAC,oBAHA;AAIAC;AACAC;AAAAC;AAAA;AADA;AAJA;AAQA,GAbA;AAcAC,SAdA,qBAcA;AACA;AACA;AACAC;AACA,KAJA,CAKA;;;AACA,iCACA,yCADA,GAEA,8CAFA;AAGA;AACA,GAxBA;AAyBAC;AACAC,mBADA,6BACA;AACA;AACA;AACAC;AADA;;AAGAD;AACA;AACA;AACAE;AACAA,yCAJA,CAKA;;AALA,mDAMAA,eANA;AAAA;;AAAA;AAMA;AAAA;AACAA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;;AASA;AACAC;AACA,OAXA;AAYA,KAlBA,CAoBA;AACA;AACA;AACA;;AAvBA;AAzBA","names":["components","songlist","data","listen","albumId","albumSongs","albumDesc","artist","img1v1Url","mounted","localStorage","methods","getAlbumContent","id","that","transMusicTime"],"sourceRoot":"src/views","sources":["albumDetail.vue"],"sourcesContent":["<template>\n  <div class=\"list-wrap\">\n    <div class=\"pageName\">专辑详情</div>\n    <div class=\"descript\"></div>\n    <div>\n      <div class=\"ul\">\n        <div class=\"details\">\n          <div class=\"details-img\">\n            <img :src=\"albumDesc.blurPicUrl\" alt=\" \" />\n          </div>\n          <div class=\"detailsRight\">\n            <div style=\"margin-left: 0px; text-align: left; font-size: 20px\">\n              {{ albumDesc.name }}\n            </div>\n            <div style=\"font-size: 14px\">\n              <div class=\"aliasClass\">\n                <img\n                  class=\"artistPic\"\n                  :src=\"albumDesc.artist.img1v1Url\"\n                  alt=\" \"\n                />-\n                <span class=\"playListNickName\">{{\n                  albumDesc.artist.name\n                }}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div id=\"singleSongs\">\n          <div class=\"countLine\">专辑歌曲：{{ albumSongs.length }} 首</div>\n          <songlist :songlist=\"albumSongs\"></songlist>\n        </div>\n      </div>\n    </div>\n    <div v-show=\"false\">\n      <aplayer :autoplay=\"true\" :fixed=\"true\" :audio=\"listen\" :liric-type=\"1\">\n      </aplayer>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { getAlbumContent, getDownloadUrl } from \"@/api/api\";\nimport { transMusicTime, download } from \"@/utils/commonApi\";\nimport songlist from \"@/components/songlist.vue\";\n\nexport default {\n  components: {\n    songlist,\n  },\n  data() {\n    return {\n      listen: [],\n      albumId: \"\",\n      albumSongs: [],\n      albumDesc: {\n        artist: { img1v1Url: \"\" },\n      },\n    };\n  },\n  mounted() {\n    //缓存id,解决params数据在刷新页面后丢失，导致无法获取到歌单id\n    if (this.$route.params.albumId) {\n      localStorage.setItem(\"albumId\", this.$route.params.albumId);\n    }\n    // 判断是否使用缓存\n    this.$route.params.albumId\n      ? (this.albumId = this.$route.params.albumId)\n      : (this.albumId = localStorage.getItem(\"albumId\"));\n    this.getAlbumContent();\n  },\n  methods: {\n    getAlbumContent() {\n      var that = this;\n      let params = {\n        id: that.albumId,\n      };\n      getAlbumContent(params).then((res) => {\n        // console.log(\"专辑信息---：\", res.data.album);\n        // console.log(\"专辑歌曲---：\", res.data.songs);\n        that.albumDesc = res.data.album;\n        that.albumSongs = res.data.songs;\n        //给每个列表添加一个防抖\n        for (let item of that.albumSongs) {\n          that.$set(item, \"timer\", true);\n        }\n        let dt = \"dt\";\n        transMusicTime(that.albumSongs, dt);\n      });\n    },\n\n    //根据主题更换播放器颜色\n    // randomColor() {\n    //   return `#${((Math.random() * 0xffffff) << 0).toString(16)}`\n    // },\n  },\n};\n</script>\n\n<style lang=\"less\" >\n.descript {\n  display: flex;\n  justify-content: space-between;\n  // color: aliceblue;\n  font-weight: bolder;\n  padding: 10px 20px;\n  border-radius: 20px 20px 0 0;\n  // background: rgba(221, 239, 243, 0.05);\n  box-sizing: border-box;\n}\n.list-wrap {\n  margin: 10px auto 0;\n  padding: 0 20px 10px;\n  width: 1120px;\n  border-radius: 20px;\n  // background: rgba(221, 239, 243, 0.05);\n  box-sizing: border-box;\n\n  .ul {\n    height: 630px;\n    border-radius: 0 0 10px 10px;\n    // background: rgba(221, 239, 243, 0.05);\n    overflow-x: hidden;\n\n    &::-webkit-scrollbar {\n      display: none;\n    }\n    .details {\n      display: flex;\n      justify-content: space-between;\n      margin: 0 auto 10px;\n      padding: 10px;\n      width: 96%;\n      height: 170px;\n      // border: 1px solid rgb(97, 226, 183);\n      border-radius: 10px;\n      // background: rgba(221, 239, 243, 0.05);\n      box-sizing: border-box;\n\n      .details-img {\n        display: inline-block;\n        // width: 180px;\n        // height: 180px;\n        border-radius: 10px;\n\n        img {\n          width: 150px;\n          height: 150px;\n          border-radius: 10px;\n          transition: 0.2s;\n\n          &:hover {\n            transform: scale(1.03);\n          }\n        }\n      }\n\n      .detailsRight {\n        position: relative;\n        width: 820px;\n        height: 150px;\n        // background: rgb(181, 209, 152);\n\n        .option {\n          position: absolute;\n          bottom: 0;\n\n          .flexBetween {\n            .inline-block {\n              display: inline-block;\n              margin-right: 40px;\n              transition: 0.2s;\n\n              &:hover {\n                cursor: pointer;\n                // color: rgb(246, 255, 119);\n              }\n            }\n          }\n        }\n        .songTns {\n          width: 100%;\n          font-size: 14px;\n          overflow-x: hidden;\n\n          &::-webkit-scrollbar {\n            display: none;\n          }\n        }\n        .aliasClass {\n          position: absolute;\n          top: 69px;\n        }\n        .artistPic {\n          margin-right: 10px;\n          width: 30px;\n          height: 30px;\n          border-radius: 15px;\n        }\n        .playListNickName {\n          display: inline-block;\n          margin-right: 20px;\n        }\n      }\n    }\n    #singleSongs {\n      margin: 0 auto;\n      padding: 0px 10px 20px;\n      width: 96%;\n      height: 420px;\n      border-radius: 10px;\n      // background: rgba(95, 158, 160, 0.05);\n      box-sizing: border-box;\n      overflow-x: hidden;\n\n      &::-webkit-scrollbar {\n        display: none;\n      }\n    }\n  }\n}\n.pagination {\n  text-align: center;\n  background: none !important;\n\n  /deep/ .el-pager {\n    height: 30px !important;\n    background: none !important;\n  }\n  /deep/ .number,\n  /deep/ .btn-prev,\n  /deep/ .btn-quicknext,\n  /deep/ .btn-next,\n  /deep/ .el-input__inner,\n  /deep/ .more {\n    color: #f2fff7 !important;\n    background: transparent !important;\n  }\n  /deep/ .number:hover,\n  /deep/ .btn-prev:hover,\n  /deep/ .btn-quicknext:hover,\n  /deep/ .btn-next:hover,\n  /deep/ .el-input__inner:hover,\n  /deep/ .more:hover {\n    color: #f7a588 !important;\n  }\n  /deep/ .active {\n    color: #f7a588 !important;\n  }\n  /deep/ .el-input__inner {\n    border: none;\n  }\n  /deep/ .el-pagination__jump {\n    color: #f7dd88 !important;\n  }\n  .iconhover {\n    transition: 0.2s;\n    &:hover {\n      color: rgb(247, 243, 45);\n    }\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}