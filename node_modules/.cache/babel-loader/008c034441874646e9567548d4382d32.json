{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport Vue from 'vue';\nimport VueRouter from 'vue-router';\nVue.use(VueRouter);\nvar routes = [];\nvar router = new VueRouter({\n  mode: 'hash',\n  // mode:'hash',\n  routes: [{\n    path: \"\" // redirect: { name: \"HomePage\" }\n\n  }, // 首页\n  {\n    path: \"/HomePage\",\n    name: \"HomePage\",\n    redirect: {\n      name: \"recommend\"\n    },\n    component: function component() {\n      return import(\"@/views/home/HomePage.vue\");\n    },\n    children: [{\n      //个性推荐\n      path: \"/HomePage/recommend\",\n      name: \"recommend\",\n      component: function component() {\n        return import(\"@/views/recommend/index.vue\");\n      }\n    }, {\n      //歌单分类\n      path: \"/HomePage/playlistCategary\",\n      name: \"playlistCategary\",\n      component: function component() {\n        return import(\"@/views/categery/playlistCategary.vue\");\n      }\n    }, {\n      //歌手分类\n      path: \"/HomePage/singerCategary\",\n      name: \"singerCategary\",\n      component: function component() {\n        return import(\"@/views/categery/singerCategary.vue\");\n      }\n    }]\n  }, {\n    path: \"/emptyPage\",\n    name: \"emptyPage\",\n    component: function component() {\n      return import(\"@/components/emptyPage.vue\");\n    }\n  }, //搜索的音乐页面\n  {\n    path: \"/MusicPlayList\",\n    name: \"MusicPlayList\",\n    component: function component() {\n      return import(\"@/views/musiclist/MusicPlayList.vue\");\n    }\n  }, //歌曲详情\n  {\n    path: \"/songDetails\",\n    name: \"songDetails\",\n    component: function component() {\n      return import(\"@/views/songDetails/songDetails.vue\");\n    },\n    props: true\n  }, //专辑详情\n  {\n    path: \"/albumDetail\",\n    name: \"albumDetail\",\n    component: function component() {\n      return import(\"@/views/albumDetail/albumDetail.vue\");\n    },\n    props: true\n  }, //歌手详情\n  {\n    path: \"/singerDetail\",\n    name: \"singerDetail\",\n    component: function component() {\n      return import(\"@/views/singerDetail/singerDetail.vue\");\n    },\n    props: true\n  }, //歌单详情\n  {\n    path: '/playListDetails',\n    name: 'playListDetails',\n    component: function component() {\n      return import(\"@/views/playListDetails/playListDetails.vue\");\n    },\n    props: true\n  }, //MV页面\n  {\n    path: \"/mvPlay\",\n    name: \"mvPlay\",\n    component: function component() {\n      return import(\"@/views/mvPlay/mvPlay.vue\");\n    },\n    props: true,\n    meta: {\n      login: true,\n      met: false\n    } // meta: { keepAlive: true }\n\n  }, //视频页面\n  {\n    path: \"/videoPlay\",\n    name: \"videoPlay\",\n    component: function component() {\n      return import(\"@/views/videoPlay/videoPlay.vue\");\n    },\n    props: true // meta: { keepAlive: true }\n    // 独享路由\n    // beforeEnter(to,from,next){\n    //   if(from.path=='/MusicPlayList'){\n    //     next()\n    //     // alert('buyun')\n    //   }\n    // },\n    //\n    // afterEnter(to,from,next){\n    // }\n\n  }]\n}); // 前置路由\n// router.beforeEach((to,from,next)=>{\n//   if(to.name === 'videoPlay' || to.meta.met === false) {\n//     alert('不允许进入')\n//   }else{\n//     next()\n//   }\n// })\n//后置路由\n// router.afterEach((to,from,next)=>{\n// })\n// //还有组件内路由如下,组件内使用\n// beforRouteEnter(to,from,next){\n// }\n// befroeRouteLeave(to,from,next){\n// }\n// beforeRouteUpdate(to,from,next){\n// }\n//去除首页导航重复导航相同页面报错 ：Avoided redundant navigation to current location:\n\nvar originalPush = VueRouter.prototype.push;\n\nVueRouter.prototype.push = function push(location) {\n  return originalPush.call(this, location).catch(function (err) {\n    return err;\n  });\n};\n\nexport default router;","map":{"version":3,"sources":["D:/data/桌面/git/cloudMusic-Source-Code/src/router/index.js"],"names":["Vue","VueRouter","use","routes","router","mode","path","name","redirect","component","children","props","meta","login","met","originalPush","prototype","push","location","call","catch","err"],"mappings":"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","sourcesContent":["import Vue from 'vue'\r\nimport VueRouter from 'vue-router'\r\n\r\nVue.use(VueRouter)\r\nconst routes = [\r\n]\r\n\r\nconst router = new VueRouter({\r\n  mode:'hash',\r\n  // mode:'hash',\r\n  routes: [\r\n    {\r\n      path: \"\",\r\n      // redirect: { name: \"HomePage\" }\r\n    },\r\n    // 首页\r\n    {\r\n      path: \"/HomePage\",\r\n      name: \"HomePage\",\r\n      redirect: { name: \"recommend\" },\r\n      component: () => import(\"@/views/home/HomePage.vue\"),\r\n      children:[\r\n        {//个性推荐\r\n          path:\"/HomePage/recommend\",\r\n          name:\"recommend\",\r\n          component:()=>import(\"@/views/recommend/index.vue\")\r\n        },\r\n        {//歌单分类\r\n          path:\"/HomePage/playlistCategary\",\r\n          name:\"playlistCategary\",\r\n          component:()=>import(\"@/views/categery/playlistCategary.vue\")\r\n        },\r\n        {//歌手分类\r\n          path:\"/HomePage/singerCategary\",\r\n          name:\"singerCategary\",\r\n          component:()=>import(\"@/views/categery/singerCategary.vue\")\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      path: \"/emptyPage\",\r\n      name: \"emptyPage\",\r\n      component: () => import(\"@/components/emptyPage.vue\")\r\n    },\r\n    //搜索的音乐页面\r\n    {\r\n      path: \"/MusicPlayList\",\r\n      name: \"MusicPlayList\",\r\n      component: () => import(\"@/views/musiclist/MusicPlayList.vue\"),\r\n    },\r\n    //歌曲详情\r\n    {\r\n      path: \"/songDetails\",\r\n      name: \"songDetails\",\r\n      component: () => import(\"@/views/songDetails/songDetails.vue\"),\r\n      props:true,\r\n    },\r\n    //专辑详情\r\n    {\r\n      path: \"/albumDetail\",\r\n      name: \"albumDetail\",\r\n      component: () => import(\"@/views/albumDetail/albumDetail.vue\"),\r\n      props:true,\r\n    },\r\n    //歌手详情\r\n    {\r\n      path: \"/singerDetail\",\r\n      name: \"singerDetail\",\r\n      component: () => import(\"@/views/singerDetail/singerDetail.vue\"),\r\n      props:true,\r\n    },\r\n    //歌单详情\r\n    {\r\n      path: '/playListDetails',\r\n      name: 'playListDetails',\r\n      component: () => import(\"@/views/playListDetails/playListDetails.vue\"),\r\n      props:true,\r\n    },\r\n    //MV页面\r\n    {\r\n      path: \"/mvPlay\",\r\n      name: \"mvPlay\",\r\n      component: () => import(\"@/views/mvPlay/mvPlay.vue\"),\r\n      props:true,\r\n      meta:{\r\n        login:true,\r\n        met:false\r\n      },\r\n      \r\n      \r\n      // meta: { keepAlive: true }\r\n    },\r\n    //视频页面\r\n    {\r\n      path: \"/videoPlay\",\r\n      name: \"videoPlay\",\r\n      component: () => import(\"@/views/videoPlay/videoPlay.vue\"),\r\n      props:true,\r\n      // meta: { keepAlive: true }\r\n      // 独享路由\r\n      // beforeEnter(to,from,next){\r\n      //   if(from.path=='/MusicPlayList'){\r\n      //     next()\r\n      //     // alert('buyun')\r\n      //   }\r\n      // },\r\n      //\r\n      // afterEnter(to,from,next){\r\n\r\n      // }\r\n    },\r\n  ]\r\n})\r\n// 前置路由\r\n// router.beforeEach((to,from,next)=>{\r\n//   if(to.name === 'videoPlay' || to.meta.met === false) {\r\n//     alert('不允许进入')\r\n//   }else{\r\n//     next()\r\n//   }\r\n// })\r\n\r\n//后置路由\r\n// router.afterEach((to,from,next)=>{\r\n  \r\n// })\r\n// //还有组件内路由如下,组件内使用\r\n// beforRouteEnter(to,from,next){\r\n\r\n// }\r\n// befroeRouteLeave(to,from,next){\r\n\r\n// }\r\n// beforeRouteUpdate(to,from,next){\r\n\r\n// }\r\n\r\n//去除首页导航重复导航相同页面报错 ：Avoided redundant navigation to current location:\r\n\r\nconst originalPush = VueRouter.prototype.push\r\nVueRouter.prototype.push = function push (location){\r\n  return originalPush.call(this,location).catch(err=>err)\r\n}\r\nexport default router\r\n"]},"metadata":{},"sourceType":"module"}