{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport axios from 'axios';\nimport { Message } from 'element-ui';\nimport loginUrl from './needLogin/loginUrl';\nimport { getCookie } from '@/utils/cookie'; // import { getToken } from '@/utils/auth'\n// import { MessageBox, Message } from 'element-ui'\n//可以创建多个axois实例，需要用哪个就引入使用哪个\n\nvar cloudMusic = axios.create({\n  baseURL: 'https://biejuanle.icu/',\n  // baseURL: 'http://localhost:3000/',\n  // changeOrigin: true,  //解决跨域\n  withCredentials: true\n});\nvar cloudMusic2 = axios.create({\n  baseURL: 'https://biejuanle.icu/',\n  // baseURL:'http://localhost:3000/'\n  // changeOrigin: true,  //解决跨域\n  withCredentials: true\n}); //配置全局的axios默认值\n// axios.defaults.baseURL = '你的基础域名'\n\naxios.defaults.timeout = 5000; // 在全局请求和响应拦截器中添加请求状态\n// Add a request interceptor\n\ncloudMusic.interceptors.request.use(function (config) {\n  if (loginUrl.includes(config.url) && !localStorage.getItem(\"user\")) {\n    //当请求的url需要登录，并且此时未登录时，进入此处\n    Message.error('该操作需要登录');\n    return false;\n  }\n\n  return config;\n}, function (error) {\n  // Do something with request error\n  return Promise.reject(error);\n}); // Add a response interceptor\n\ncloudMusic.interceptors.response.use(function (response) {\n  return response;\n}, function (error) {\n  if (loginUrl.includes(config.url) && !localStorage.getItem(\"user\")) {\n    //当请求的url需要登录，并且此时未登录时，进入此处\n    Message.error('请求错误');\n    return false;\n  }\n\n  return Promise.reject(error);\n});\nexport { cloudMusic, cloudMusic2 }; //其他文件可通过import { cloudMusic, cloudMusic2 } from  ...导入使用\n// export default cloudMusic2;//default只能导出一个","map":null,"metadata":{},"sourceType":"module"}