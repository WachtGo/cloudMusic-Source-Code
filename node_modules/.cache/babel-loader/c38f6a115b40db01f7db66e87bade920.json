{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getHotPlayList, getAllPlayList, getPlaylist } from \"@/api/api\";\nimport { transPlayCount } from \"@/utils/commonApi\";\nexport default {\n  data() {\n    return {\n      hotPlaylistTag: [],\n      categaryShow: false,\n      order: \"最新\",\n      currentTag: \"全部\",\n      categories: {},\n      categoryTag: {\n        0: [],\n        1: [],\n        2: [],\n        3: [],\n        4: []\n      },\n      playListTable: [],\n      count: 0,\n      //初始页\n      currentPage: 1\n    };\n  },\n\n  watch: {\n    //排列顺序发生变化时，自动获取\n    order() {\n      this.getPlaylist(this.currentTag);\n    }\n\n  },\n\n  mounted() {\n    this.getHotPlayList();\n    this.getAllPlayList();\n    this.getPlaylist(this.currentTag);\n  },\n\n  methods: {\n    //获取热门分类歌单\n    getHotPlayList() {\n      let that = this;\n      getHotPlayList().then(res => {\n        that.hotPlaylistTag = res.data.tags;\n      });\n    },\n\n    //获取全部歌单分类\n    getAllPlayList() {\n      let that = this;\n      getAllPlayList().then(async res => {\n        // console.log(res)\n        that.categories = await res.data.categories;\n\n        for (let key in that.categoryTag) {\n          res.data.sub.forEach(item => {\n            if (item.category == key) {\n              that.categoryTag[key].push(item); // console.log(that.categoryTag)\n            }\n          });\n        }\n      });\n    },\n\n    //获取歌单列表----\n    getPlaylist(cat, notChangePage) {\n      let that = this;\n      let params = {\n        cat: cat,\n        order: that.order,\n        limit: 15,\n        offset: (that.currentPage - 1) * 15\n      };\n      that.categaryShow = false;\n      if (that.currentTag === cat && notChangePage) return;\n      that.playListTable = []; //清空，重新获取，防止页面图片加载慢\n\n      that.currentTag = cat;\n      getPlaylist(params).then(async res => {\n        // console.log(res)\n        that.playListTable = await res.data.playlists; // console.log(that.playListTable)\n\n        that.count = await res.data.total; // transPlayCount(that.playListTable)\n\n        transPlayCount(that.playListTable, \"playCount\");\n      });\n    },\n\n    //传入歌单id进入歌单详情\n    goSongList(songListDetail) {\n      //传入歌单id进入歌单详情\n      var that = this;\n      that.$router.push({\n        name: \"playListDetails\",\n        params: {\n          playListDetail: songListDetail\n        }\n      });\n    },\n\n    //分页\n    handleCurrentChange: function (currentPage) {\n      // console.log(`当前页: ${currentPage}`);\n      var that = this;\n      that.currentPage = currentPage;\n      that.getPlaylist(that.currentTag, false);\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkHA;AACA;AACA;AACAA;AACA;AACAC,wBADA;AAEAC,yBAFA;AAGAC,iBAHA;AAIAC,sBAJA;AAKAC,oBALA;AAMAC;AACA,aADA;AAEA,aAFA;AAGA,aAHA;AAIA,aAJA;AAKA;AALA,OANA;AAaAC,uBAbA;AAcAC,cAdA;AAeA;AACAC;AAhBA;AAkBA,GApBA;;AAqBAC;AACA;AACAP;AACA;AACA;;AAJA,GArBA;;AA2BAQ;AACA;AACA;AACA;AACA,GA/BA;;AAgCAC;AACA;AACAC;AACA;AACAA;AACAC;AACA,OAFA;AAGA,KAPA;;AAQA;AACAC;AACA;AACAA;AACA;AACAD;;AACA;AACAE;AACA;AACAF,+CADA,CAEA;AACA;AACA,WALA;AAMA;AACA,OAXA;AAYA,KAvBA;;AAwBA;AACAG;AACA;AACA;AACAC,gBADA;AAEAf,yBAFA;AAGAgB,iBAHA;AAIAC;AAJA;AAMAN;AACA;AACAA,8BAVA,CAUA;;AACAA;AACAG;AACA;AACAH,sDAFA,CAGA;;AACAA,0CAJA,CAKA;;AACAO;AACA,OAPA;AAQA,KA7CA;;AA8CA;AACAC;AACA;AACA;AACAR;AACAS,+BADA;AAEAC;AAAAC;AAAA;AAFA;AAIA,KAtDA;;AAuDA;AACAC;AACA;AACA;AACAZ;AACAA;AACA;AA7DA;AAhCA","names":["data","hotPlaylistTag","categaryShow","order","currentTag","categories","categoryTag","playListTable","count","currentPage","watch","mounted","methods","getHotPlayList","that","getAllPlayList","res","getPlaylist","cat","limit","offset","transPlayCount","goSongList","name","params","playListDetail","handleCurrentChange"],"sourceRoot":"src/views/categery","sources":["playlistCategary.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"list-wrap\">\r\n      <div>\r\n        <div class=\"inline-block\" style=\"padding: 5px 0\">\r\n          <span style=\"font-size: 16px\">热门歌单分类：</span>\r\n          <span\r\n            class=\"hotCategary\"\r\n            v-for=\"item in hotPlaylistTag\"\r\n            :key=\"item.id\"\r\n            @click=\"getPlaylist(item.name)\"\r\n          >\r\n            {{ item.name }}\r\n          </span>\r\n        </div>\r\n        <div class=\"inline-block clearfix\" style=\"float: right; padding: 5px 0\">\r\n          <span style=\"color: #eee\">当前：</span>\r\n          <span class=\"categary-select\">{{ currentTag }}</span> -\r\n          <span style=\"color: #eee\">&nbsp;排列：</span>\r\n          <span\r\n            class=\"categary-select\"\r\n            v-if=\"order === '最热'\"\r\n            @click=\"order = '最新'\"\r\n            >最热</span\r\n          >\r\n          <span\r\n            class=\"categary-select\"\r\n            v-if=\"order === '最新'\"\r\n            @click=\"order = '最热'\"\r\n            >最新</span\r\n          >\r\n          -\r\n          <span class=\"categary-allTag\" @click=\"categaryShow = !categaryShow\"\r\n            >&nbsp;全部分类</span\r\n          >\r\n          <!-- 全部分类窗口 -->\r\n          <div class=\"categary-allTag-wrap\" v-if=\"categaryShow\">\r\n            <div\r\n              class=\"categary-allTag-wrap-list\"\r\n              v-for=\"(item, index) in categories\"\r\n              :key=\"index\"\r\n            >\r\n              <div>\r\n                <span>{{ item }}:</span>\r\n              </div>\r\n              <div class=\"categary-allTag-wrap-list-item\">\r\n                <span\r\n                  v-for=\"(item, index2) in categoryTag[index]\"\r\n                  @click=\"getPlaylist(item.name)\"\r\n                  :key=\"index2\"\r\n                  >{{ item.name }}</span\r\n                >\r\n              </div>\r\n            </div>\r\n            <div class=\"categary-allTag-wrap-list\">\r\n              <div><span>全部:</span></div>\r\n              <div class=\"categary-allTag-wrap-list-item\">\r\n                <span @click=\"getPlaylist('全部')\">全部</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <!-- <div class=\"descript\"></div> -->\r\n      </div>\r\n\r\n      <!-- <div class=\"descript\"></div> -->\r\n      <!-- 歌单列表 -->\r\n      <div class=\"playListClass\">\r\n        <div class=\"recPlay\">\r\n          <div class=\"loading\" v-show=\"playListTable.length === 0\">\r\n            <i class=\"el-icon-loading\"></i>\r\n          </div>\r\n          <ul class=\"playListWrap\">\r\n            <li\r\n              class=\"playListTable\"\r\n              v-for=\"(item, index) in playListTable\"\r\n              :key=\"index\"\r\n            >\r\n              <div class=\"image\">\r\n                <img\r\n                  :src=\"item.coverImgUrl\"\r\n                  alt=\"\"\r\n                  title=\"\"\r\n                  @click=\"goSongList(item)\"\r\n                />\r\n                <span class=\"playCount\"\r\n                  ><i class=\"el-icon-video-play\" style=\"margin-right: 1px\"></i\r\n                  >{{ item.playCount }}</span\r\n                >\r\n              </div>\r\n              <p class=\"List-title\" @click=\"goSongList(item)\">\r\n                <span>{{ item.name }} </span>\r\n              </p>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"pagination\">\r\n      <el-pagination\r\n        v-show=\"count !== 0\"\r\n        @current-change=\"handleCurrentChange\"\r\n        :current-page.sync=\"currentPage\"\r\n        :page-size=\"15\"\r\n        layout=\"prev, pager, next, jumper\"\r\n        :total=\"count\"\r\n        :background=\"true\"\r\n      >\r\n      </el-pagination>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getHotPlayList, getAllPlayList, getPlaylist } from \"@/api/api\";\r\nimport { transPlayCount } from \"@/utils/commonApi\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      hotPlaylistTag: [],\r\n      categaryShow: false,\r\n      order: \"最新\",\r\n      currentTag: \"全部\",\r\n      categories: {},\r\n      categoryTag: {\r\n        0: [],\r\n        1: [],\r\n        2: [],\r\n        3: [],\r\n        4: [],\r\n      },\r\n      playListTable: [],\r\n      count: 0,\r\n      //初始页\r\n      currentPage: 1,\r\n    };\r\n  },\r\n  watch: {\r\n    //排列顺序发生变化时，自动获取\r\n    order() {\r\n      this.getPlaylist(this.currentTag);\r\n    },\r\n  },\r\n  mounted() {\r\n    this.getHotPlayList();\r\n    this.getAllPlayList();\r\n    this.getPlaylist(this.currentTag);\r\n  },\r\n  methods: {\r\n    //获取热门分类歌单\r\n    getHotPlayList() {\r\n      let that = this;\r\n      getHotPlayList().then((res) => {\r\n        that.hotPlaylistTag = res.data.tags;\r\n      });\r\n    },\r\n    //获取全部歌单分类\r\n    getAllPlayList() {\r\n      let that = this;\r\n      getAllPlayList().then(async (res) => {\r\n        // console.log(res)\r\n        that.categories = await res.data.categories;\r\n        for (let key in that.categoryTag) {\r\n          res.data.sub.forEach((item) => {\r\n            if (item.category == key) {\r\n              that.categoryTag[key].push(item);\r\n              // console.log(that.categoryTag)\r\n            }\r\n          });\r\n        }\r\n      });\r\n    },\r\n    //获取歌单列表----\r\n    getPlaylist(cat, notChangePage) {\r\n      let that = this;\r\n      let params = {\r\n        cat: cat,\r\n        order: that.order,\r\n        limit: 15,\r\n        offset: (that.currentPage - 1) * 15,\r\n      };\r\n      that.categaryShow = false;\r\n      if (that.currentTag === cat && notChangePage) return;\r\n      that.playListTable = []; //清空，重新获取，防止页面图片加载慢\r\n      that.currentTag = cat;\r\n      getPlaylist(params).then(async (res) => {\r\n        // console.log(res)\r\n        that.playListTable = await res.data.playlists;\r\n        // console.log(that.playListTable)\r\n        that.count = await res.data.total;\r\n        // transPlayCount(that.playListTable)\r\n        transPlayCount(that.playListTable, \"playCount\");\r\n      });\r\n    },\r\n    //传入歌单id进入歌单详情\r\n    goSongList(songListDetail) {\r\n      //传入歌单id进入歌单详情\r\n      var that = this;\r\n      that.$router.push({\r\n        name: \"playListDetails\",\r\n        params: { playListDetail: songListDetail },\r\n      });\r\n    },\r\n    //分页\r\n    handleCurrentChange: function (currentPage) {\r\n      // console.log(`当前页: ${currentPage}`);\r\n      var that = this;\r\n      that.currentPage = currentPage;\r\n      that.getPlaylist(that.currentTag, false);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.descript {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  // color: aliceblue;\r\n  font-weight: bolder;\r\n  padding: 0 20px;\r\n  border-radius: 20px 20px 0 0;\r\n  // background: rgba(95, 158, 160, 0.05);\r\n  box-sizing: border-box;\r\n}\r\n.list-wrap {\r\n  margin: 10px auto 0;\r\n  padding: 0 20px;\r\n  width: 1120px;\r\n  height: 697px;\r\n  border-radius: 20px;\r\n  // background: rgba(95, 158, 160, 0.11);\r\n  box-sizing: border-box;\r\n\r\n  .hotCategary {\r\n    padding: 0 5px;\r\n    font-size: 15px;\r\n    color: rgb(201, 185, 165);\r\n    // border: 1px dotted rgb(192, 190, 190);\r\n    // border-radius: 10px;\r\n    transition: 0.3s;\r\n\r\n    &:hover {\r\n      cursor: pointer;\r\n      color: rgb(202, 162, 108);\r\n    }\r\n  }\r\n  .categary-select {\r\n    padding: 0 10px;\r\n    // border: 1px solid #eee;\r\n    border-radius: 10px;\r\n\r\n    color: rgb(202, 162, 108);\r\n    transition: 0.3s;\r\n    &:hover {\r\n      color: rgb(202, 162, 108);\r\n      cursor: pointer;\r\n    }\r\n  }\r\n  .categary-allTag {\r\n    color: rgb(201, 185, 165);\r\n    transition: 0.2s;\r\n    &:hover {\r\n      color: rgb(202, 162, 108);\r\n      cursor: pointer;\r\n    }\r\n  }\r\n  .categary-allTag-wrap {\r\n    z-index: 100;\r\n    position: absolute;\r\n    right: 40px;\r\n    width: 600px;\r\n    height: 300px;\r\n    padding: 10px;\r\n    background: url(@/static/img/background8.jpeg); //---------------需要与主题一同更改\r\n    // background-size: cover;\r\n    border-radius: 20px;\r\n    overflow-x: hidden;\r\n    box-sizing: border-box;\r\n    &::-webkit-scrollbar {\r\n      display: none;\r\n    }\r\n\r\n    .categary-allTag-wrap-list-item {\r\n      padding: 5px 20px;\r\n\r\n      box-sizing: border-box;\r\n      // background: rgb(153, 140, 140);\r\n\r\n      span {\r\n        display: inline-block;\r\n        margin: 5px 10px;\r\n        color: rgb(207, 206, 204);\r\n        transition: 0.2s;\r\n\r\n        &:hover {\r\n          color: rgb(202, 162, 108);\r\n          cursor: pointer;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n/* 歌单列表样式 */\r\n.playListClass {\r\n  .recPlay {\r\n    margin: auto;\r\n    width: 100%;\r\n    height: 655px;\r\n    overflow-x: hidden;\r\n\r\n    &::-webkit-scrollbar {\r\n      display: none;\r\n    }\r\n\r\n    .playListWrap {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      flex-wrap: wrap; //根据宽度限制一行的盒子个数\r\n      margin: 0 0 10px;\r\n      width: 100%;\r\n      // max-height: 100%;\r\n      background: transparent;\r\n      overflow-x: hidden;\r\n      &::-webkit-scrollbar {\r\n        display: none;\r\n      }\r\n      .playListTable {\r\n        margin-bottom: 10px;\r\n        width: 205px;\r\n        height: 230px;\r\n        box-sizing: border-box;\r\n\r\n        .image {\r\n          position: relative;\r\n          margin: 10px auto;\r\n          width: 190px;\r\n          height: 190px;\r\n          border-radius: 10px;\r\n          overflow: hidden;\r\n          transition: 0.2s;\r\n\r\n          &:hover {\r\n            transform: scale(1.06);\r\n            cursor: pointer;\r\n            // height: 210px;\r\n          }\r\n          img {\r\n            position: absolute;\r\n            width: 100%;\r\n            height: 100%;\r\n          }\r\n\r\n          .playCount {\r\n            position: absolute;\r\n            z-index: 99;\r\n            right: 10px;\r\n            background: transparent;\r\n          }\r\n        }\r\n        .List-title {\r\n          margin: 0 auto;\r\n          font-size: 15px;\r\n          // padding: 0 10px;\r\n          width: 180px;\r\n          transition: 0.2s;\r\n          text-align: center;\r\n          text-overflow: ellipsis;\r\n          white-space: nowrap;\r\n          overflow: hidden; /*必须结合的属性,当内容溢出元素框时发生的事情*/\r\n          text-overflow: ellipsis; /*可以用来多行文本的情况下，用省略号“…”隐藏超出范围的文本 。*/\r\n          white-space: nowrap;\r\n          display: -webkit-box; /*必须结合的属性 ，将对象作为弹性伸缩盒子模型显示 。*/\r\n          -webkit-line-clamp: 1; /*用来限制在一个块元素显示的文本的行数。*/\r\n          -webkit-box-orient: vertical; /*必须结合的属性 ，设置或检索伸缩盒对象的子元素的排列方式 。*/\r\n          span {\r\n            display: inline-block;\r\n            width: 180px;\r\n            // text-align: center;\r\n            text-overflow: ellipsis;\r\n            overflow: hidden;\r\n            white-space: nowrap;\r\n\r\n            &:hover {\r\n              color: rgb(145, 245, 228);\r\n              cursor: pointer;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n.pagination {\r\n  text-align: center;\r\n  background: none !important;\r\n\r\n  /deep/ .el-pager {\r\n    height: 30px !important;\r\n    background: none !important;\r\n  }\r\n  /deep/ .number,\r\n  /deep/ .btn-prev,\r\n  /deep/ .btn-quicknext,\r\n  /deep/ .btn-next,\r\n  /deep/ .el-input__inner,\r\n  /deep/ .more {\r\n    color: #f2fff7 !important;\r\n    background: transparent !important;\r\n  }\r\n  /deep/ .number:hover,\r\n  /deep/ .btn-prev:hover,\r\n  /deep/ .btn-quicknext:hover,\r\n  /deep/ .btn-next:hover,\r\n  /deep/ .el-input__inner:hover,\r\n  /deep/ .more:hover {\r\n    color: #f7a588 !important;\r\n  }\r\n  /deep/ .active {\r\n    color: #f7a588 !important;\r\n  }\r\n  /deep/ .el-input__inner {\r\n    border: none;\r\n  }\r\n  /deep/ .el-pagination__jump {\r\n    color: #f7dd88 !important;\r\n  }\r\n  /deep/ .el-pagination {\r\n    height: 100% !important;\r\n  }\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}