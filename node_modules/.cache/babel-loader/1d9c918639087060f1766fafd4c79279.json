{"ast":null,"code":"import _asyncToGenerator from \"D:/data/\\u684C\\u9762/git/cloudMusic-Source-Code/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.function.name.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getSingerlist as _getSingerlist } from \"@/api/api\";\nexport default {\n  data: function data() {\n    return {\n      type: \"-1\",\n      area: \"-1\",\n      align: \"热门\",\n      categaryShow: false,\n      initialtitle: [\"热门\", \"序号\"],\n      initialData: {\n        0: [{\n          order: \"热门\",\n          orderValue: \"a\"\n        }],\n        1: [{\n          order: \"A\",\n          orderValue: \"a\"\n        }, {\n          order: \"B\",\n          orderValue: \"b\"\n        }, {\n          order: \"C\",\n          orderValue: \"c\"\n        }, {\n          order: \"D\",\n          orderValue: \"d\"\n        }, {\n          order: \"E\",\n          orderValue: \"e\"\n        }, {\n          order: \"F\",\n          orderValue: \"f\"\n        }, {\n          order: \"G\",\n          orderValue: \"g\"\n        }, {\n          order: \"F\",\n          orderValue: \"f\"\n        }, {\n          order: \"H\",\n          orderValue: \"h\"\n        }, {\n          order: \"I\",\n          orderValue: \"i\"\n        }, {\n          order: \"J\",\n          orderValue: \"j\"\n        }, {\n          order: \"K\",\n          orderValue: \"k\"\n        }, {\n          order: \"L\",\n          orderValue: \"l\"\n        }, {\n          order: \"M\",\n          orderValue: \"m\"\n        }, {\n          order: \"N\",\n          orderValue: \"n\"\n        }, {\n          order: \"O\",\n          orderValue: \"o\"\n        }, {\n          order: \"P\",\n          orderValue: \"p\"\n        }, {\n          order: \"Q\",\n          orderValue: \"q\"\n        }, {\n          order: \"R\",\n          orderValue: \"r\"\n        }, {\n          order: \"S\",\n          orderValue: \"s\"\n        }, {\n          order: \"T\",\n          orderValue: \"t\"\n        }, {\n          order: \"U\",\n          orderValue: \"u\"\n        }, {\n          order: \"V\",\n          orderValue: \"v\"\n        }, {\n          order: \"W\",\n          orderValue: \"w\"\n        }, {\n          order: \"X\",\n          orderValue: \"x\"\n        }, {\n          order: \"Y\",\n          orderValue: \"y\"\n        }, {\n          order: \"Z\",\n          orderValue: \"z\"\n        }]\n      },\n      initial: \"-1\",\n      singerType: [{\n        type: \"-1\",\n        typeName: \"全部\"\n      }, {\n        type: \"1\",\n        typeName: \"男歌手\"\n      }, {\n        type: \"2\",\n        typeName: \"女歌手\"\n      }, {\n        type: \"3\",\n        typeName: \"乐队\"\n      }],\n      singerArea: [{\n        area: \"-1\",\n        areaName: \"全部\"\n      }, {\n        area: \"7\",\n        areaName: \"华语\"\n      }, {\n        area: \"96\",\n        areaName: \"欧美\"\n      }, {\n        area: \"8\",\n        areaName: \"日本\"\n      }, {\n        area: \"16\",\n        areaName: \"韩国\"\n      }, {\n        area: \"0\",\n        areaName: \"其他\"\n      }],\n      typeareaElement: [],\n      singerList: [],\n      count: 999,\n      //初始页\n      currentPage: 1\n    };\n  },\n  watch: {\n    //排列顺序发生变化时，自动获取\n    initial: function initial() {\n      this.getSingerlist(this.type, this.area);\n    }\n  },\n  mounted: function mounted() {\n    this.typeElement = document.querySelectorAll(\".singer-type\");\n    this.areaElement = document.querySelectorAll(\".singer-area\");\n    this.getSingerlist(this.currentTag);\n  },\n  methods: {\n    //更改点击样式，方便查看选择的歌手类型和地区\n    checkedStyle: function checkedStyle(element, idx) {\n      // console.log(element)\n      element.forEach(function (item, index) {\n        if (idx === index) {\n          item.classList.add(\"type-area-checked\");\n        } else {\n          if (item.classList.contains(\"type-area-checked\")) {\n            item.classList.remove(\"type-area-checked\");\n          }\n        }\n      });\n    },\n    areaStyle: function areaStyle() {},\n    //获取歌手列表----\n    getSingerlist: function getSingerlist(type, area) {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var that, params;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                that = _this;\n                that.type = type;\n                that.area = area;\n                params = {\n                  type: that.type,\n                  area: that.area,\n                  initial: _this.initial,\n                  limit: 9,\n                  offset: (that.currentPage - 1) * 9\n                }; // that.categaryShow = false\n                // if (that.currentTag === cat && notChangePage) return\n\n                that.singerList = []; //清空，重新获取，防止页面图片加载慢\n\n                _context2.next = 7;\n                return _getSingerlist(params).then( /*#__PURE__*/function () {\n                  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(res) {\n                    return regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            _context.next = 2;\n                            return res.data.artists;\n\n                          case 2:\n                            that.singerList = _context.sent;\n\n                          case 3:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee);\n                  }));\n\n                  return function (_x) {\n                    return _ref.apply(this, arguments);\n                  };\n                }());\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    },\n    //获取歌手详情\n    goSingerDetail: function goSingerDetail(singerDetail) {\n      // console.log(singerDetail);\n      var params = {\n        id: singerDetail.id,\n        img1v1Url: singerDetail.img1v1Url,\n        name: singerDetail.name,\n        alias: singerDetail.alias,\n        musicSize: singerDetail.musicSize,\n        albumSize: singerDetail.albumSize,\n        mvSize: singerDetail.mvSize,\n        briefDesc: \"\"\n      };\n      this.$router.push({\n        name: \"singerDetail\",\n        params: {\n          artist: params\n        }\n      });\n    },\n    //分页\n    handleCurrentChange: function handleCurrentChange(currentPage) {\n      // console.log(`当前页: ${currentPage}`);\n      var that = this;\n      that.currentPage = currentPage;\n      that.getSingerlist(that.type, that.area);\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["data","type","area","align","categaryShow","initialtitle","initialData","order","orderValue","initial","singerType","typeName","singerArea","areaName","typeareaElement","singerList","count","currentPage","watch","mounted","methods","checkedStyle","element","idx","item","areaStyle","getSingerlist","that","params","limit","offset","res","goSingerDetail","singerDetail","id","img1v1Url","name","alias","musicSize","albumSize","mvSize","briefDesc","artist","handleCurrentChange"],"sourceRoot":"src/views/categery","sources":["singerCategary.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"list-wrap\">\n      <div>\n        <div>\n          <div class=\"inline-block\" style=\"padding: 5px 0\">\n            <span style=\"font-size: 16px\">类型：</span>\n            <span\n              class=\"type-area singer-type\"\n              v-for=\"(item, index) in singerType\"\n              :key=\"item.type\"\n              @click=\"\n                checkedStyle(typeElement, index);\n                getSingerlist(item.type, area);\n              \"\n            >\n              {{ item.typeName }}\n            </span>\n          </div>\n        </div>\n        <div>\n          <div class=\"inline-block\" style=\"padding: 5px 0\">\n            <span style=\"font-size: 16px\">地区：</span>\n            <span\n              class=\"type-area singer-area\"\n              v-for=\"(item, index) in singerArea\"\n              :key=\"item.area\"\n              @click=\"\n                checkedStyle(areaElement, index);\n                getSingerlist(type, item.area);\n              \"\n            >\n              {{ item.areaName }}\n            </span>\n          </div>\n          <div\n            class=\"inline-block clearfix\"\n            style=\"float: right; padding: 5px 0\"\n          >\n            <!-- <span style=\"color:#eee\">当前：</span>\n          <span class='categary-select'>{{currentTag}}</span> -\n\t\t\t\t\t<span class='categary-select'>{{currentTag}}</span> - -->\n            <span style=\"color: #eee\">&nbsp;排列：</span>\n            <span\n              class=\"categary-select\"\n              @click=\"categaryShow = !categaryShow\"\n              >{{ align }}</span\n            >\n            <!-- 全部分类窗口 -->\n            <div class=\"categary-allTag-wrap\" v-if=\"categaryShow\">\n              <div\n                class=\"categary-allTag-wrap-list\"\n                v-for=\"(item, index) in initialtitle\"\n                :key=\"index\"\n              >\n                <div>\n                  <span>{{ item }}:</span>\n                </div>\n                <div class=\"categary-allTag-wrap-list-item\">\n                  <span\n                    v-for=\"(item2, index2) in initialData[index]\"\n                    @click=\"\n                      initial = item2.orderValue;\n                      align = item2.order;\n                      categaryShow = false;\n                    \"\n                    :key=\"index2\"\n                    >{{ item2.order }}</span\n                  >\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- 歌手列表 -->\n      <div class=\"singerListClass\">\n        <div class=\"loading\" v-show=\"singerList.length === 0\">\n          <i class=\"el-icon-loading\"></i>\n        </div>\n        <li\n          class=\"liWrap\"\n          v-for=\"(item, index) in singerList\"\n          :key=\"index\"\n          @click.stop=\"goSingerDetail(item)\"\n        >\n          <div class=\"liWrap-block1\">\n            <img :src=\"item.img1v1Url\" alt=\" \" />\n          </div>\n          <div class=\"liWrap-block2\">\n            <div class=\"div1\">\n              歌手：<span>{{ item.name }}</span>\n            </div>\n            <div>\n              <div class=\"divOther\">\n                专辑：<span>{{ item.albumSize }}</span>\n              </div>\n\n              <div class=\"divOther\">\n                歌曲：<span>{{ item.musicSize }}</span>\n              </div>\n            </div>\n          </div>\n        </li>\n      </div>\n    </div>\n    <div class=\"pagination\">\n      <el-pagination\n        v-show=\"count !== 0\"\n        @current-change=\"handleCurrentChange\"\n        :current-page.sync=\"currentPage\"\n        :page-size=\"9\"\n        layout=\"prev, pager, next, jumper\"\n        :total=\"count\"\n        :background=\"true\"\n      >\n      </el-pagination>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { getSingerlist } from \"@/api/api\";\nexport default {\n  data() {\n    return {\n      type: \"-1\",\n      area: \"-1\",\n      align: \"热门\",\n      categaryShow: false,\n      initialtitle: [\"热门\", \"序号\"],\n      initialData: {\n        0: [\n          {\n            order: \"热门\",\n            orderValue: \"a\",\n          },\n        ],\n        1: [\n          {\n            order: \"A\",\n            orderValue: \"a\",\n          },\n          {\n            order: \"B\",\n            orderValue: \"b\",\n          },\n          {\n            order: \"C\",\n            orderValue: \"c\",\n          },\n          {\n            order: \"D\",\n            orderValue: \"d\",\n          },\n          {\n            order: \"E\",\n            orderValue: \"e\",\n          },\n          {\n            order: \"F\",\n            orderValue: \"f\",\n          },\n          {\n            order: \"G\",\n            orderValue: \"g\",\n          },\n          {\n            order: \"F\",\n            orderValue: \"f\",\n          },\n          {\n            order: \"H\",\n            orderValue: \"h\",\n          },\n          {\n            order: \"I\",\n            orderValue: \"i\",\n          },\n          {\n            order: \"J\",\n            orderValue: \"j\",\n          },\n          {\n            order: \"K\",\n            orderValue: \"k\",\n          },\n          {\n            order: \"L\",\n            orderValue: \"l\",\n          },\n          {\n            order: \"M\",\n            orderValue: \"m\",\n          },\n          {\n            order: \"N\",\n            orderValue: \"n\",\n          },\n          {\n            order: \"O\",\n            orderValue: \"o\",\n          },\n          {\n            order: \"P\",\n            orderValue: \"p\",\n          },\n          {\n            order: \"Q\",\n            orderValue: \"q\",\n          },\n          {\n            order: \"R\",\n            orderValue: \"r\",\n          },\n          {\n            order: \"S\",\n            orderValue: \"s\",\n          },\n          {\n            order: \"T\",\n            orderValue: \"t\",\n          },\n          {\n            order: \"U\",\n            orderValue: \"u\",\n          },\n          {\n            order: \"V\",\n            orderValue: \"v\",\n          },\n          {\n            order: \"W\",\n            orderValue: \"w\",\n          },\n          {\n            order: \"X\",\n            orderValue: \"x\",\n          },\n          {\n            order: \"Y\",\n            orderValue: \"y\",\n          },\n          {\n            order: \"Z\",\n            orderValue: \"z\",\n          },\n        ],\n      },\n      initial: \"-1\",\n      singerType: [\n        {\n          type: \"-1\",\n          typeName: \"全部\",\n        },\n        {\n          type: \"1\",\n          typeName: \"男歌手\",\n        },\n        {\n          type: \"2\",\n          typeName: \"女歌手\",\n        },\n        {\n          type: \"3\",\n          typeName: \"乐队\",\n        },\n      ],\n      singerArea: [\n        {\n          area: \"-1\",\n          areaName: \"全部\",\n        },\n        {\n          area: \"7\",\n          areaName: \"华语\",\n        },\n        {\n          area: \"96\",\n          areaName: \"欧美\",\n        },\n        {\n          area: \"8\",\n          areaName: \"日本\",\n        },\n        {\n          area: \"16\",\n          areaName: \"韩国\",\n        },\n        {\n          area: \"0\",\n          areaName: \"其他\",\n        },\n      ],\n      typeareaElement: [],\n      singerList: [],\n      count: 999,\n      //初始页\n      currentPage: 1,\n    };\n  },\n  watch: {\n    //排列顺序发生变化时，自动获取\n    initial() {\n      this.getSingerlist(this.type, this.area);\n    },\n  },\n  mounted() {\n    this.typeElement = document.querySelectorAll(\".singer-type\");\n    this.areaElement = document.querySelectorAll(\".singer-area\");\n    this.getSingerlist(this.currentTag);\n  },\n  methods: {\n    //更改点击样式，方便查看选择的歌手类型和地区\n    checkedStyle(element, idx) {\n      // console.log(element)\n      element.forEach((item, index) => {\n        if (idx === index) {\n          item.classList.add(\"type-area-checked\");\n        } else {\n          if (item.classList.contains(\"type-area-checked\")) {\n            item.classList.remove(\"type-area-checked\");\n          }\n        }\n      });\n    },\n    areaStyle() {},\n    //获取歌手列表----\n    async getSingerlist(type, area) {\n      let that = this;\n      that.type = type;\n      that.area = area;\n      let params = {\n        type: that.type,\n        area: that.area,\n        initial: this.initial,\n        limit: 9,\n        offset: (that.currentPage - 1) * 9,\n      };\n      // that.categaryShow = false\n      // if (that.currentTag === cat && notChangePage) return\n      that.singerList = []; //清空，重新获取，防止页面图片加载慢\n      await getSingerlist(params).then(async (res) => {\n        // console.log(res.data.artists);\n        that.singerList = await res.data.artists;\n      });\n    },\n    //获取歌手详情\n    goSingerDetail(singerDetail) {\n      // console.log(singerDetail);\n      let params = {\n        id: singerDetail.id,\n        img1v1Url: singerDetail.img1v1Url,\n        name: singerDetail.name,\n        alias: singerDetail.alias,\n        musicSize: singerDetail.musicSize,\n        albumSize: singerDetail.albumSize,\n        mvSize: singerDetail.mvSize,\n        briefDesc: \"\",\n      };\n\n      this.$router.push({\n        name: \"singerDetail\",\n        params: {\n          artist: params,\n        },\n      });\n    },\n    //分页\n    handleCurrentChange: function (currentPage) {\n      // console.log(`当前页: ${currentPage}`);\n      var that = this;\n      that.currentPage = currentPage;\n      that.getSingerlist(that.type, that.area);\n    },\n  },\n};\n</script>\n\n<style lang=\"less\" scoped>\n.descript {\n  display: flex;\n  justify-content: space-between;\n  color: aliceblue;\n  font-weight: bolder;\n  padding: 0 20px;\n  border-radius: 20px 20px 0 0;\n  // background: rgba(95, 158, 160, 0.05);\n  box-sizing: border-box;\n}\n.list-wrap {\n  margin: 10px auto 0;\n  padding: 0 20px;\n  width: 1120px;\n  // height: 635px;\n  border-radius: 20px;\n  // background: rgba(95, 158, 160, 0.11);\n  box-sizing: border-box;\n\n  .type-area {\n    padding: 0 5px;\n    font-size: 15px;\n    color: rgb(201, 185, 165);\n    // border: 1px dotted rgb(192, 190, 190);\n    // border-radius: 10px;\n    transition: 0.3s;\n\n    &:hover {\n      cursor: pointer;\n      color: rgb(238, 195, 143);\n    }\n  }\n  .type-area-checked {\n    color: rgba(255, 192, 115, 0.966) !important;\n    // border: 1px solid rgba(255, 198, 129, 0.89);\n    // border-radius: 10px;\n  }\n  .categary-select {\n    display: inline-block;\n    // padding: 0 10px;\n    width: 50px;\n    text-align: center;\n    // border: 1px solid #eee;\n    border-radius: 10px;\n\n    color: rgb(202, 162, 108);\n    transition: 0.3s;\n    &:hover {\n      color: rgb(202, 162, 108);\n      cursor: pointer;\n    }\n  }\n  .categary-allTag {\n    color: rgb(201, 185, 165);\n    transition: 0.2s;\n    &:hover {\n      color: rgb(202, 162, 108);\n      cursor: pointer;\n    }\n  }\n  .categary-allTag-wrap {\n    z-index: 100;\n    position: absolute;\n    right: 40px;\n    width: 600px;\n    height: 300px;\n    padding: 10px;\n    background: url(@/static/img/background8.jpeg); //需要与主题一同更改\n    border-radius: 20px;\n    overflow-x: hidden;\n    box-sizing: border-box;\n    &::-webkit-scrollbar {\n      display: none;\n    }\n\n    .categary-allTag-wrap-list-item {\n      padding: 5px 20px;\n      box-sizing: border-box;\n      // background: rgb(153, 140, 140);\n\n      span {\n        display: inline-block;\n        width: 40px;\n        margin: 5px 0px;\n        text-align: center;\n        color: rgb(207, 206, 204);\n        transition: 0.2s;\n\n        &:hover {\n          color: rgb(202, 162, 108);\n          cursor: pointer;\n        }\n      }\n    }\n  }\n}\n//歌手列表样式\n.singerListClass {\n  padding: 5px 0;\n  height: 635px;\n  box-sizing: border-box;\n  // overflow-x: hidden;\n\n  // &::-webkit-scrollbar {\n  //   display: none;\n  // }\n  .liWrap {\n    display: flex;\n    justify-content: space-around;\n    margin: 0 auto 10px;\n    padding: 2px 10px;\n    width: 99%;\n    height: 60px;\n    border-radius: 12px;\n    background-color: rgba(129, 235, 199, 0.068);\n    box-sizing: border-box;\n    transition: 0.2s;\n    &:hover {\n      transform: scale(1.01);\n    }\n    .liWrap-block1 {\n      width: 56px;\n      height: 56px;\n      border-radius: 10px;\n      background-color: rgba(152, 158, 149, 0);\n      transition: 0.2s;\n      img {\n        width: 100%;\n        height: 100%;\n        border-radius: 10px;\n      }\n      &:hover {\n        transform: scale(1.05);\n        cursor: pointer;\n      }\n    }\n    .liWrap-block2 {\n      display: flex;\n      justify-content: space-between;\n      padding: 10px;\n      width: 80%;\n      height: 56px;\n      font-size: 15px;\n      text-overflow: ellipsis;\n      overflow: hidden;\n      white-space: nowrap;\n      border-radius: 10px;\n      line-height: 36px;\n      box-sizing: border-box;\n      // background-color: rgba(226, 214, 156, 0.075);\n      transition: 0.2s;\n\n      span {\n        &:hover {\n          color: rgba(136, 240, 240, 0.719);\n        }\n      }\n      .div1 {\n        display: inline-block;\n        // width: 200px;\n\n        span {\n          color: bisque;\n          transition: 0.2s;\n          &:hover {\n            color: rgba(252, 214, 167, 0.979);\n          }\n        }\n      }\n      .divOther {\n        display: inline-block;\n        width: 100px;\n        margin-right: 5px;\n\n        span {\n          color: bisque;\n          transition: 0.2s;\n          &:hover {\n            color: rgba(255, 198, 129, 0.979);\n          }\n        }\n      }\n      &:hover {\n        transform: scale(1.01);\n        cursor: pointer;\n      }\n    }\n  }\n}\n\n.pagination {\n  text-align: center;\n  background: none !important;\n\n  /deep/ .el-pager {\n    height: 30px !important;\n    background: none !important;\n  }\n  /deep/ .number,\n  /deep/ .btn-prev,\n  /deep/ .btn-quicknext,\n  /deep/ .btn-next,\n  /deep/ .el-input__inner,\n  /deep/ .more {\n    color: #f2fff7 !important;\n    background: transparent !important;\n  }\n  /deep/ .number:hover,\n  /deep/ .btn-prev:hover,\n  /deep/ .btn-quicknext:hover,\n  /deep/ .btn-next:hover,\n  /deep/ .el-input__inner:hover,\n  /deep/ .more:hover {\n    color: #f7a588 !important;\n  }\n  /deep/ .active {\n    color: #f7a588 !important;\n  }\n  /deep/ .el-input__inner {\n    border: none;\n  }\n  /deep/ .el-pagination__jump {\n    color: #f7dd88 !important;\n  }\n  /deep/ .el-pagination {\n    height: 100% !important;\n  }\n}\n</style>"]},"metadata":{},"sourceType":"module"}