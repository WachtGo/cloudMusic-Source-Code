{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport QRCode from \"qrcode\";\nimport { getqrKey, getqrImg, getqrStatus, getloginStatus, loginOut } from \"@/api/login\"; // import { mapMutations, mapState } from \"vuex\";\n// import { getuserDetail, getAccount } from \"@/api/user\";\n\nimport { cookieParser, getTimestamp } from \"@/utils/commonApi\";\nimport { getCookie, removeCookie, setCookie } from \"@/utils/cookie\";\nexport default {\n  name: \"Login\",\n\n  data() {\n    return {\n      loginWrapShow: false,\n      //展示登录窗口\n      qrStatus: \"\",\n      qrtimer: null,\n      key: \"\",\n      user: {\n        avatarUrl: \"\",\n        nickname: \"\",\n        userId: \"\",\n        userType: \"\"\n      },\n      loginStatus: false,\n      //登录状态\n      qrloading: false //点击判断是否已经授权时的加载图标状态\n\n    };\n  },\n\n  computed: {},\n\n  created() {\n    if (localStorage.getItem(\"user\")) {\n      this.user = JSON.parse(localStorage.getItem(\"user\"));\n    }\n\n    this.getloginStatus();\n  },\n\n  methods: {\n    goLogin() {\n      //点击登录，获取二维码\n      // this.loginWrapOnOff(true);\n      this.loginWrapShow = true;\n      this.refreshQr();\n    },\n\n    //生成二维码\n    getQRCode(qrurl) {\n      let opts = {\n        errorCorrectionLevel: \"H\",\n        //容错级别\n        type: \"image/png\",\n        //生成的二维码类型\n        quality: 0.3,\n        //二维码质量\n        margin: 5,\n        //二维码留白边距\n        width: 180,\n        //宽\n        height: 180,\n        //高\n        text: \"\",\n        //二维码内容\n        color: {\n          dark: \"#333333\",\n          //前景色\n          light: \"#fff\" //背景色\n\n        }\n      };\n      this.QRCodeMsg = qrurl; //生成的二维码为URL地址js\n\n      let msg = document.getElementById(\"QRCode_header\"); // 将获取到的数据（val）画到msg（canvas）上\n\n      QRCode.toCanvas(msg, qrurl, opts, function (error) {// console.log(error)\n      });\n    },\n\n    //  获取/刷新二维码\n    refreshQr() {\n      let params = {\n        timestamp: getTimestamp()\n      }; // console.log(params.timestamp)\n\n      getqrKey(params).then(async res => {\n        this.key = await res.data.data.unikey;\n        let params = {\n          key: res.data.data.unikey\n        };\n        getqrImg(params).then(res => {\n          this.getQRCode(res.data.data.qrurl);\n        });\n      });\n    },\n\n    // 二维码状态\n    getqrStatus() {\n      this.qrloading = true;\n      let params = {\n        key: this.key\n      };\n      getqrStatus(params).then(async res => {\n        this.qrStatus = await res.data.message;\n\n        if (res.data.code === 803) {\n          // clearInterval(this.qrtimer);\n          // console.log(\"扫码登录成功\");\n          let cookies = cookieParser(res.data.cookie);\n          setCookie(\"__csrf\", cookies[1]);\n          setTimeout(() => {\n            this.loginWrapShow = false; //关闭登录窗口\n\n            this.$message({\n              type: \"success\",\n              message: \"已登录\"\n            });\n          }, 500);\n          this.getloginStatus();\n        } else if (res.data.code === 800) {\n          this.qrStatus += \",请刷新获取\";\n        } else if (res.data.code === 400) {\n          this.qrStatus = \"请求错误\";\n        }\n\n        this.qrloading = false;\n      });\n    },\n\n    //获取登录状态\n    getloginStatus() {\n      getloginStatus().then(async res => {\n        // console.log(res.data.data.profile);\n        if (res.data.data.profile) {\n          this.loginStatus = true;\n          this.user = {\n            avatarUrl: res.data.data.profile.avatarUrl,\n            nickname: res.data.data.profile.nickname,\n            userId: res.data.data.profile.userId,\n            userType: res.data.data.profile.userType\n          }; // console.log(this.user);\n\n          localStorage.setItem(\"user\", JSON.stringify(this.user));\n        } else {\n          this.loginStatus = false;\n          localStorage.removeItem(\"user\");\n        }\n      });\n    },\n\n    //退出登录\n    loginOut() {\n      const loading = this.$loading({\n        background: \"rgba(255,255,255,0.1)\"\n      });\n      loginOut().then(res => {\n        this.$nextTick(() => {\n          loading.close();\n        });\n        this.loginStatus = false;\n        this.user = {};\n        localStorage.removeItem(\"user\");\n        this.$message.success(\"已退出登录\"); // this.getloginStatus(); //获取登陆状态\n      }).catch(err => {\n        this.$nextTick(() => {\n          loading.close();\n        });\n      });\n    },\n\n    golike() {\n      this.$router.push({\n        name: \"myPlayList\",\n        params: {\n          id: this.user.userId\n        }\n      });\n    }\n\n  }\n};","map":null,"metadata":{},"sourceType":"module"}