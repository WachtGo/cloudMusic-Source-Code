{"ast":null,"code":"import _asyncToGenerator from \"D:/Desktop/git/cloudMusic-Source-Code/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport { playMusicUrl, getSongLyric, getSongDetails } from \"@/api/api\"; //添加歌曲到播放列表\n\nexport function playMusic(id, fee, index, list, that) {\n  //获取播放音乐链接\n  // console.log(that,'----')\n  var songUrlAdd = null; //音乐地址\n\n  var songlrc = \"\"; //歌词\n\n  if (that[list][index].timer) return;\n  that[list][index].timer = setTimeout( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            that[list][index].timer = null;\n\n            if (fee == 1) {\n              that.$message({\n                message: \"VIP歌曲 - 只能试听30s\",\n                type: \"warning\"\n              });\n            }\n\n            _context.next = 4;\n            return playMusicUrl({\n              id: id\n            }).then(function (res) {\n              // console.log(\"播放音乐链接\", res.data.data[0].url);\n              if (res.data.data[0].url) {\n                songUrlAdd = res.data.data[0].url;\n              } else {\n                that.$message({\n                  message: \"这首歌暂无版权\",\n                  type: \"error\"\n                });\n                return;\n              }\n            });\n\n          case 4:\n            _context.next = 6;\n            return getSongLyric({\n              id: id\n            }).then(function (res) {\n              songlrc = res.data.lrc.lyric;\n            });\n\n          case 6:\n            _context.next = 8;\n            return getSongDetails({\n              ids: id\n            }).then(function (res) {\n              that.$store.commit(\"aplayer/addSONG\", {\n                name: res.data.songs[0].name,\n                //歌曲名\n                artist: res.data.songs[0].ar[0].name,\n                //作者\n                url: songUrlAdd,\n                cover: res.data.songs[0].al.picUrl,\n                lrc: songlrc,\n                id: id\n              });\n            });\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })), 2000);\n} //播放试听音乐\n\nexport function listenMusic(_x, _x2, _x3, _x4, _x5) {\n  return _listenMusic.apply(this, arguments);\n}\n\nfunction _listenMusic() {\n  _listenMusic = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(id, fee, index, list, that) {\n    var songUrlAdd, songlrc;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            songUrlAdd = null;\n            songlrc = \"\";\n\n            if (!that[list][index].timer) {\n              _context2.next = 4;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 4:\n            if (fee == 1) {\n              that.$message({\n                message: \"VIP歌曲 - 只能试听30s\",\n                type: \"warning\"\n              });\n            }\n\n            playMusicUrl({\n              id: id\n            }).then(function (res) {\n              // console.log(\"播放音乐链接\", res.data.data[0].url);\n              if (res.data.data[0].url) {\n                songUrlAdd = res.data.data[0].url;\n              } else {\n                that.$message({\n                  message: \"这首歌暂无版权\",\n                  type: \"error\"\n                });\n                that[list][index].timer = setTimeout(function () {\n                  that[list][index].timer = null;\n                }, 2000);\n                return;\n              }\n            }), // 获取歌词\n            getSongLyric({\n              id: id\n            }).then(function (res) {\n              songlrc = res.data.lrc.lyric;\n            }), // 获取歌曲信息\n            getSongDetails({\n              ids: id\n            }).then(function (res) {\n              if (songUrlAdd != null) {\n                that.$store.commit(\"aplayer/addAUDITION\", {\n                  name: res.data.songs[0].name,\n                  //歌曲名\n                  artist: res.data.songs[0].ar[0].name,\n                  //作者\n                  url: songUrlAdd,\n                  cover: res.data.songs[0].al.picUrl,\n                  lrc: songlrc,\n                  id: id,\n                  timer: null //试听中添加，防止用户连点消耗性能，在添加播放列表方法中可使用到\n\n                });\n              }\n\n              that[list][index].timer = setTimeout(function () {\n                that[list][index].timer = null;\n              }, 2000);\n            });\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _listenMusic.apply(this, arguments);\n}","map":{"version":3,"sources":["D:/Desktop/git/cloudMusic-Source-Code/src/utils/musicPlay.js"],"names":["playMusicUrl","getSongLyric","getSongDetails","playMusic","id","fee","index","list","that","songUrlAdd","songlrc","timer","setTimeout","$message","message","type","then","res","data","url","lrc","lyric","ids","$store","commit","name","songs","artist","ar","cover","al","picUrl","listenMusic"],"mappings":"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","sourcesContent":["import { playMusicUrl, getSongLyric, getSongDetails } from \"@/api/api\";\r\n\r\n//添加歌曲到播放列表\r\nexport  function playMusic(id, fee, index, list, that) {\r\n  //获取播放音乐链接\r\n  // console.log(that,'----')\r\n\r\n  let songUrlAdd = null; //音乐地址\r\n  let songlrc = \"\"; //歌词\r\n  if (that[list][index].timer) return;\r\n  that[list][index].timer = setTimeout(async () => {\r\n\tthat[list][index].timer = null;\r\n\tif (fee == 1) {\r\n\t\tthat.$message({\r\n\t\t  message: \"VIP歌曲 - 只能试听30s\",\r\n\t\t  type: \"warning\",\r\n\t\t});\r\n\t  }\r\n\t await playMusicUrl({\r\n\t\tid: id,\r\n\t  }).then((res) => {\r\n\t\t// console.log(\"播放音乐链接\", res.data.data[0].url);\r\n\t\tif (res.data.data[0].url) {\r\n\t\t  songUrlAdd = res.data.data[0].url;\r\n\t\t} else {\r\n\t\t  that.$message({\r\n\t\t\tmessage: \"这首歌暂无版权\",\r\n\t\t\ttype: \"error\",\r\n\t\t  });\r\n\t\t  return;\r\n\t\t}\r\n\t  }),\r\n\t\t// 获取歌词\r\n\t\tawait  getSongLyric({\r\n\t\t  id: id,\r\n\t\t}).then((res) => {\r\n\t\t  songlrc = res.data.lrc.lyric;\r\n\t\t}),\r\n\t\t// 获取歌曲信息\r\n\t\tawait getSongDetails({\r\n\t\t  ids: id,\r\n\t\t}).then((res) => {\r\n\t\t  that.$store.commit(\"aplayer/addSONG\", {\r\n\t\t\tname: res.data.songs[0].name, //歌曲名\r\n\t\t\tartist: res.data.songs[0].ar[0].name, //作者\r\n\t\t\turl: songUrlAdd,\r\n\t\t\tcover: res.data.songs[0].al.picUrl,\r\n\t\t\tlrc: songlrc,\r\n\t\t\tid: id,\r\n\t\t  });\r\n\t\t  \r\n\t\t});\r\n\t\r\n  }, 2000);\r\n}\r\n\r\n//播放试听音乐\r\nexport async function listenMusic(id, fee, index, list, that) {\r\n  let songUrlAdd = null;\r\n  let songlrc = \"\";\r\n  if (that[list][index].timer) return;\r\n  if (fee == 1) {\r\n    that.$message({\r\n      message: \"VIP歌曲 - 只能试听30s\",\r\n      type: \"warning\",\r\n    });\r\n  }\r\n  playMusicUrl({\r\n    id: id,\r\n  }).then((res) => {\r\n    // console.log(\"播放音乐链接\", res.data.data[0].url);\r\n    if (res.data.data[0].url) {\r\n      songUrlAdd = res.data.data[0].url;\r\n    } else {\r\n      that.$message({\r\n        message: \"这首歌暂无版权\",\r\n        type: \"error\",\r\n      });\r\n      that[list][index].timer = setTimeout(() => {\r\n        that[list][index].timer = null;\r\n      }, 2000);\r\n      return;\r\n    }\r\n  }),\r\n    // 获取歌词\r\n    getSongLyric({\r\n      id: id,\r\n    }).then((res) => {\r\n      songlrc = res.data.lrc.lyric;\r\n    }),\r\n    // 获取歌曲信息\r\n    getSongDetails({\r\n      ids: id,\r\n    }).then((res) => {\r\n      if (songUrlAdd != null) {\r\n        that.$store.commit(\"aplayer/addAUDITION\", {\r\n          name: res.data.songs[0].name, //歌曲名\r\n          artist: res.data.songs[0].ar[0].name, //作者\r\n          url: songUrlAdd,\r\n          cover: res.data.songs[0].al.picUrl,\r\n          lrc: songlrc,\r\n          id: id,\r\n          timer: null, //试听中添加，防止用户连点消耗性能，在添加播放列表方法中可使用到\r\n        });\r\n      }\r\n      that[list][index].timer = setTimeout(() => {\r\n        that[list][index].timer = null;\r\n      }, 2000);\r\n    });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}