{"ast":null,"code":"import _asyncToGenerator from \"D:/data/\\u684C\\u9762/git/cloudMusic-Source-Code/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.function.name.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getMyPlayList as _getMyPlayList } from \"@/api/needLogin/musicOperate\";\nimport { transMusicTime, transPlayCount } from \"@/utils/commonApi\";\nimport songlist from \"@/components/songlist.vue\";\nexport default {\n  components: {\n    songlist: songlist\n  },\n  data: function data() {\n    return {\n      //歌单列表\n      playListTable: [],\n      count: 0,\n      //初始页\n      currentPage: 1\n    };\n  },\n  created: function created() {\n    this.getMyPlayList();\n  },\n  methods: {\n    //分页\n    handleCurrentChange: function handleCurrentChange(currentPage) {\n      this.currentPage = currentPage;\n      this.getMyPlayList();\n    },\n    //进入歌单详情\n    goSongList: function goSongList(playListDetail) {\n      // console.log(playListDetail);\n      var params = {\n        id: playListDetail.id,\n        name: playListDetail.name,\n        coverImgUrl: playListDetail.picUrl,\n        trackCount: playListDetail.trackCount,\n        creator: {\n          avatarUrl: \"\",\n          nickname: playListDetail.creator.nickname,\n          signature: \"\"\n        },\n        tags: [],\n        description: \"\"\n      }; //传入歌单id进入歌单详情\n\n      this.$router.push({\n        name: \"playListDetails\",\n        params: {\n          playListDetail: params\n        }\n      });\n    },\n    //通过搜索关键词获取歌单\n    getMyPlayList: function getMyPlayList() {\n      var _this = this;\n\n      var params = {\n        uid: JSON.parse(localStorage.getItem(\"user\")).userId,\n        limit: 15,\n        offset: (this.currentPage - 1) * 15\n      };\n      this.playListTable = [];\n\n      _getMyPlayList(params).then( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(res) {\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  console.log(\"获取我的歌单列表----\", res);\n\n                  if (!(res.data.code === 200)) {\n                    _context.next = 7;\n                    break;\n                  }\n\n                  _context.next = 4;\n                  return res.data.playlist;\n\n                case 4:\n                  _this.playListTable = _context.sent;\n                  _this.count = _this.playListTable.length;\n                  transPlayCount(_this.playListTable, \"playCount\");\n\n                case 7:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuDA;AACA;AACA;AACA;AACAA;AACAC;AADA,GADA;AAIAC,MAJA,kBAIA;AACA;AACA;AACAC,uBAFA;AAGAC,cAHA;AAIA;AACAC;AALA;AAOA,GAZA;AAaAC,SAbA,qBAaA;AACA;AACA,GAfA;AAgBAC;AACA;AACAC;AACA;AACA;AACA,KALA;AAOA;AACAC,cARA,sBAQAC,cARA,EAQA;AACA;AACA;AACAC,6BADA;AAEAC,iCAFA;AAGAC,0CAHA;AAIAC,6CAJA;AAKAC;AACAC,uBADA;AAEAC,mDAFA;AAGAC;AAHA,SALA;AAUAC,gBAVA;AAWAC;AAXA,QAFA,CAeA;;AACA;AACAR,+BADA;AAEAS;AAAAX;AAAA;AAFA;AAIA,KA5BA;AA8BA;AACAY,iBA/BA,2BA+BA;AAAA;;AACA;AACAC,4DADA;AAEAC,iBAFA;AAGAC;AAHA;AAKA;;AACAH;AAAA;AAAA;AAAA;AAAA;AAAA;AACAI;;AADA,wBAEAC,qBAFA;AAAA;AAAA;AAAA;;AAAA;AAAA,yBAGAA,iBAHA;;AAAA;AAGA,qCAHA;AAIA;AACAC;;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAQA;AA9CA;AAhBA","names":["components","songlist","data","playListTable","count","currentPage","created","methods","handleCurrentChange","goSongList","playListDetail","id","name","coverImgUrl","trackCount","creator","avatarUrl","nickname","signature","tags","description","params","getMyPlayList","uid","limit","offset","console","res","transPlayCount"],"sourceRoot":"src/views","sources":["myPlayList.vue"],"sourcesContent":["<template>\r\n  <div class=\"list-wrap\">\r\n    <div class=\"descript\"></div>\r\n    <div>\r\n      <ul>\r\n        <!-- 歌单列表 -->\r\n        <div class=\"playListClass\">\r\n          <div class=\"loading\" v-show=\"playListTable.length === 0\">\r\n            <i class=\"el-icon-loading\"></i>\r\n          </div>\r\n          <div class=\"recPlay\">\r\n            <ul class=\"playListWrap\">\r\n              <li\r\n                class=\"playListTable\"\r\n                v-for=\"(item, index) in playListTable\"\r\n                :key=\"index\"\r\n              >\r\n                <div class=\"image\">\r\n                  <img\r\n                    :src=\"item.coverImgUrl\"\r\n                    alt=\"\"\r\n                    title=\"\"\r\n                    @click=\"goSongList(item)\"\r\n                  />\r\n                  <span class=\"playCount\"\r\n                    ><i class=\"el-icon-video-play\" style=\"margin-right: 1px\"></i\r\n                    >{{ item.playCount }}</span\r\n                  >\r\n                </div>\r\n                <p class=\"List-title\" @click=\"goSongList(item)\">\r\n                  <span>{{ item.name }} </span>\r\n                </p>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </ul>\r\n    </div>\r\n\r\n    <div class=\"pagination\">\r\n      <el-pagination\r\n        v-show=\"count != 0\"\r\n        @current-change=\"handleCurrentChange\"\r\n        :current-page.sync=\"currentPage\"\r\n        :page-size=\"15\"\r\n        layout=\"prev, pager, next, jumper\"\r\n        :total=\"count\"\r\n        :background=\"true\"\r\n      >\r\n      </el-pagination>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getMyPlayList } from \"@/api/needLogin/musicOperate\";\r\nimport { transMusicTime, transPlayCount } from \"@/utils/commonApi\";\r\nimport songlist from \"@/components/songlist.vue\";\r\nexport default {\r\n  components: {\r\n    songlist,\r\n  },\r\n  data() {\r\n    return {\r\n      //歌单列表\r\n      playListTable: [],\r\n      count: 0,\r\n      //初始页\r\n      currentPage: 1,\r\n    };\r\n  },\r\n  created() {\r\n    this.getMyPlayList();\r\n  },\r\n  methods: {\r\n    //分页\r\n    handleCurrentChange: function (currentPage) {\r\n      this.currentPage = currentPage;\r\n      this.getMyPlayList();\r\n    },\r\n\r\n    //进入歌单详情\r\n    goSongList(playListDetail) {\r\n      // console.log(playListDetail);\r\n      let params = {\r\n        id: playListDetail.id,\r\n        name: playListDetail.name,\r\n        coverImgUrl: playListDetail.picUrl,\r\n        trackCount: playListDetail.trackCount,\r\n        creator: {\r\n          avatarUrl: \"\",\r\n          nickname: playListDetail.creator.nickname,\r\n          signature: \"\",\r\n        },\r\n        tags: [],\r\n        description: \"\",\r\n      };\r\n      //传入歌单id进入歌单详情\r\n      this.$router.push({\r\n        name: \"playListDetails\",\r\n        params: { playListDetail: params },\r\n      });\r\n    },\r\n\r\n    //通过搜索关键词获取歌单\r\n    getMyPlayList() {\r\n      let params = {\r\n        uid: JSON.parse(localStorage.getItem(\"user\")).userId,\r\n        limit: 15,\r\n        offset: (this.currentPage - 1) * 15,\r\n      };\r\n      this.playListTable = [];\r\n      getMyPlayList(params).then(async (res) => {\r\n        console.log(\"获取我的歌单列表----\", res);\r\n        if (res.data.code === 200) {\r\n          this.playListTable = await res.data.playlist;\r\n          this.count = this.playListTable.length;\r\n          transPlayCount(this.playListTable, \"playCount\");\r\n        }\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n// 歌单列表样式\r\n.playListClass {\r\n  .recPlay {\r\n    margin: auto;\r\n    max-height: 630px;\r\n    overflow-x: hidden;\r\n\r\n    &::-webkit-scrollbar {\r\n      display: none;\r\n    }\r\n\r\n    .playListWrap {\r\n      display: flex;\r\n      flex-direction: column;\r\n      // justify-content: space-between;\r\n      flex-wrap: wrap; //根据宽度限制一行的盒子个数\r\n      margin: 10px 0;\r\n      width: 100%;\r\n      background: transparent;\r\n      // overflow-x: hidden;\r\n\r\n      .playListTable {\r\n        margin-bottom: 10px;\r\n        width: 205px;\r\n        height: 230px;\r\n        box-sizing: border-box;\r\n\r\n        .image {\r\n          position: relative;\r\n          margin: 10px auto;\r\n          width: 190px;\r\n          height: 190px;\r\n          border-radius: 10px;\r\n          overflow: hidden;\r\n          transition: 0.2s;\r\n\r\n          &:hover {\r\n            transform: scale(1.06);\r\n            cursor: pointer;\r\n            // height: 210px;\r\n          }\r\n          img {\r\n            position: absolute;\r\n            width: 100%;\r\n            height: 100%;\r\n          }\r\n\r\n          .playCount {\r\n            position: absolute;\r\n            z-index: 99;\r\n            right: 10px;\r\n            background: transparent;\r\n          }\r\n        }\r\n        .List-title {\r\n          margin: 0 auto;\r\n          font-size: 15px;\r\n          // padding: 0 10px;\r\n          width: 180px;\r\n          transition: 0.2s;\r\n          text-align: center;\r\n          text-overflow: ellipsis;\r\n          white-space: nowrap;\r\n          overflow: hidden; /*必须结合的属性,当内容溢出元素框时发生的事情*/\r\n          text-overflow: ellipsis; /*可以用来多行文本的情况下，用省略号“…”隐藏超出范围的文本 。*/\r\n          white-space: nowrap;\r\n          display: -webkit-box; /*必须结合的属性 ，将对象作为弹性伸缩盒子模型显示 。*/\r\n          -webkit-line-clamp: 1; /*用来限制在一个块元素显示的文本的行数。*/\r\n          -webkit-box-orient: vertical; /*必须结合的属性 ，设置或检索伸缩盒对象的子元素的排列方式 。*/\r\n          span {\r\n            display: inline-block;\r\n            width: 180px;\r\n            // text-align: center;\r\n            text-overflow: ellipsis;\r\n            overflow: hidden;\r\n            white-space: nowrap;\r\n\r\n            &:hover {\r\n              color: rgb(145, 245, 228);\r\n              cursor: pointer;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.descript {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  color: aliceblue;\r\n  font-weight: bolder;\r\n  padding: 10px 20px;\r\n  border-radius: 20px 20px 0 0;\r\n  background: rgba(95, 158, 160, 0.05);\r\n  box-sizing: border-box;\r\n}\r\n.list-wrap {\r\n  margin: 10px auto 0;\r\n  padding: 0 20px 10px;\r\n  width: 1120px;\r\n  // height: 730px;\r\n  border-radius: 20px;\r\n  background: rgba(95, 158, 160, 0.11);\r\n  box-sizing: border-box;\r\n\r\n  .tagWrap {\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-content: center;\r\n    margin: 0 auto;\r\n    width: 50%;\r\n\r\n    span {\r\n      font-size: 18px;\r\n      padding: 0 10px;\r\n      transition: 0.2s;\r\n\r\n      &:hover {\r\n        color: rgb(101, 195, 233);\r\n        cursor: pointer;\r\n      }\r\n    }\r\n  }\r\n\r\n  ul {\r\n    height: 650px;\r\n    border-radius: 0 0 10px 10px;\r\n    background: rgba(95, 158, 160, 0.05);\r\n    overflow-x: hidden;\r\n\r\n    &::-webkit-scrollbar {\r\n      display: none;\r\n    }\r\n\r\n    .music-list {\r\n      position: relative;\r\n      display: flex;\r\n      margin: 5px auto 5px;\r\n      padding: 0 10px;\r\n      width: 96%;\r\n      height: 30px;\r\n      line-height: 30px;\r\n      overflow: hidden;\r\n      color: rgba(255, 255, 255, 1);\r\n      font-weight: bolder;\r\n      border-radius: 5px;\r\n      -o-text-overflow: ellipsis;\r\n      text-overflow: ellipsis;\r\n      // background: rgba(172, 233, 236, 0.055);\r\n      transition: 0.2s;\r\n\r\n      .music-list-span {\r\n        display: inline-block;\r\n        width: 270px;\r\n        // font-size:13px;\r\n        text-align: center;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n        white-space: nowrap;\r\n      }\r\n      .option {\r\n        position: absolute;\r\n        padding-left: 120px;\r\n        width: 240px;\r\n        right: 0px;\r\n        box-sizing: border-box;\r\n\r\n        span {\r\n          display: inline-block;\r\n          width: 30px;\r\n          &:hover {\r\n            cursor: pointer;\r\n          }\r\n        }\r\n      }\r\n\r\n      &:hover {\r\n        color: rgb(88, 255, 241);\r\n        transform: scale(1.01);\r\n        // background: rgba(141, 251, 255, 0.192);\r\n      }\r\n    }\r\n  }\r\n}\r\n.pagination {\r\n  text-align: center;\r\n  background: none !important;\r\n\r\n  /deep/ .el-pager {\r\n    height: 30px !important;\r\n    background: none !important;\r\n  }\r\n  /deep/ .number,\r\n  /deep/ .btn-prev,\r\n  /deep/ .btn-quicknext,\r\n  /deep/ .btn-next,\r\n  /deep/ .el-input__inner,\r\n  /deep/ .more {\r\n    color: #f2fff7 !important;\r\n    transition: 0.2s;\r\n    background: transparent !important;\r\n  }\r\n  /deep/ .number:hover,\r\n  /deep/ .btn-prev:hover,\r\n  /deep/ .btn-quicknext:hover,\r\n  /deep/ .btn-next:hover,\r\n  /deep/ .el-input__inner:hover,\r\n  /deep/ .more:hover {\r\n    transform: scale(1.02);\r\n    color: #f7a588 !important;\r\n  }\r\n  /deep/ .active {\r\n    color: #f7a588 !important;\r\n  }\r\n  /deep/ .el-input__inner {\r\n    border: none;\r\n  }\r\n  /deep/ .el-pagination__jump {\r\n    color: #f7dd88 !important;\r\n  }\r\n  /deep/.el-pagination {\r\n    height: 100%;\r\n  }\r\n  .iconhover {\r\n    transition: 0.2s;\r\n    &:hover {\r\n      color: rgb(247, 243, 45);\r\n    }\r\n  }\r\n}\r\n</style>\r\n\r\n"]},"metadata":{},"sourceType":"module"}