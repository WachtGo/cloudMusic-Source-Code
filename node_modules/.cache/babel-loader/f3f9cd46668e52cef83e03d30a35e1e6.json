{"ast":null,"code":"import _createForOfIteratorHelper from \"C:/Users/Wacht/Desktop/git/cloudMusic-Source-Code/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _asyncToGenerator from \"C:/Users/Wacht/Desktop/git/cloudMusic-Source-Code/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.search.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getMusicInfo } from \"@/api/api\";\nimport { transMusicTime, transPlayCount } from \"@/utils/commonApi\";\nimport songlist from \"@/components/songlist.vue\";\nexport default {\n  components: {\n    songlist: songlist\n  },\n  data: function data() {\n    return {\n      //试听音乐\n      listen: [],\n      //单曲，专辑，歌手，歌单开关\n      tagSwitch: {},\n      //MV列表\n      videoList: [],\n      //歌单列表\n      playListTable: [],\n      // 歌曲列表\n      musicList: [],\n      // 专辑列表\n      albumList: [],\n      //歌手列表\n      artists: [],\n      //MV列表\n      mvList: [],\n      //音乐下载地址\n      downLoadUrl: \"\",\n      //标签切换\n      activeName: \"first\",\n      //搜索内容总数（歌曲，歌单，mv,等）\n      count: 0,\n      //初始页\n      currentPage: 1\n    };\n  },\n  created: function created() {\n    // console.log(this);\n    var that = this;\n    that.tagSwitch = that.$store.state.musicPlayList.tagSwitch;\n    that.search();\n  },\n  methods: {\n    //标签切换\n    tagSelect: function tagSelect(tag) {\n      var that = this;\n      that.$store.commit(\"musicPlayList/tagSelect\", tag);\n      that.$nextTick(function () {\n        that.search();\n      });\n    },\n    //分页\n    handleCurrentChange: function handleCurrentChange(currentPage) {\n      // console.log(`当前页: ${currentPage}`);\n      this.currentPage = currentPage;\n      var that = this;\n\n      if (that.tagSwitch.songSwitch) {\n        that.getSingleMuscic();\n      } else if (that.tagSwitch.playListSwitch) {\n        that.getMusicList();\n      } else if (that.tagSwitch.videoSwitch) {\n        that.getVideoList();\n      } else if (that.tagSwitch.mvSwitch) {\n        that.getMVList();\n      } else if (that.tagSwitch.singerSwitch) {\n        that.getSingerList();\n      } else if (that.tagSwitch.albumSwitch) {\n        that.getSingerList();\n      }\n    },\n    search: function search() {\n      var that = this;\n\n      if (that.tagSwitch.songSwitch) {\n        that.getSingleMuscic();\n      } else if (that.tagSwitch.playListSwitch) {\n        that.getMusicList();\n      } else if (that.tagSwitch.videoSwitch) {\n        that.getVideoList();\n      } else if (that.tagSwitch.mvSwitch) {\n        that.getMVList();\n      } else if (that.tagSwitch.singerSwitch) {\n        that.getSingerList();\n      } else if (that.tagSwitch.albumSwitch) {\n        that.getAlbumList();\n      }\n    },\n    //获取专辑详情\n    goAlbumDetail: function goAlbumDetail(albumDesc) {\n      var params = {\n        id: albumDesc.id,\n        name: albumDesc.name,\n        blurPicUrl: albumDesc.blurPicUrl,\n        size: albumDesc.size,\n        artist: {\n          name: albumDesc.artist.name,\n          img1v1Url: albumDesc.artist.img1v1Url\n        }\n      };\n      this.$router.push({\n        name: \"albumDetail\",\n        params: {\n          albumDesc: params\n        }\n      });\n    },\n    //进入歌手详情页面\n    goSingerDetail: function goSingerDetail(singerDetail) {\n      // console.log(item)\n      var params = {\n        id: singerDetail.id,\n        img1v1Url: singerDetail.img1v1Url,\n        name: singerDetail.name,\n        alias: singerDetail.alias,\n        musicSize: singerDetail.musicSize,\n        albumSize: singerDetail.albumSize,\n        mvSize: singerDetail.mvSize,\n        briefDesc: \"\"\n      };\n      this.$router.push({\n        name: \"singerDetail\",\n        params: {\n          artist: params\n        }\n      });\n    },\n    //进入歌单详情\n    goSongList: function goSongList(playListDetail) {\n      // console.log(playListDetail);\n      var params = {\n        id: playListDetail.id,\n        name: playListDetail.name,\n        coverImgUrl: playListDetail.coverImgUrl,\n        trackCount: playListDetail.trackCount,\n        creator: {\n          avatarUrl: '',\n          nickname: playListDetail.creator.nickname,\n          signature: \"\"\n        },\n        tags: [] // description: \"\",\n\n      }; //传入歌单id进入歌单详情\n\n      this.$router.push({\n        name: \"playListDetails\",\n        params: {\n          playListDetail: params\n        }\n      });\n    },\n    //通过搜索关键词获取单曲（歌曲）\n    getSingleMuscic: function getSingleMuscic() {\n      var that = this;\n\n      if (that.$route.query.reload) {// console.log(\"this.$route:---\", that.$route);\n      } //获取歌曲列表\n\n\n      var params = {\n        keywords: that.$route.query.keywords,\n        limit: 30,\n        offset: (that.currentPage - 1) * 30,\n        type: 1 //代表获取单曲\n\n      };\n      that.musicList = [];\n      getMusicInfo(params).then( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(res) {\n          var _iterator, _step, item;\n\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return res.data.result.songs;\n\n                case 2:\n                  that.musicList = _context.sent;\n                  _context.next = 5;\n                  return res.data.result.songCount;\n\n                case 5:\n                  that.count = _context.sent;\n                  transMusicTime(that.musicList, \"dt\"); // console.log(\"音乐列表：\", res.data.result);\n                  //给每个列表添加一个防抖\n\n                  _iterator = _createForOfIteratorHelper(that.musicList);\n\n                  try {\n                    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                      item = _step.value;\n                      that.$set(item, \"timer\", true);\n                    }\n                  } catch (err) {\n                    _iterator.e(err);\n                  } finally {\n                    _iterator.f();\n                  }\n\n                case 9:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    },\n    // 通过搜索关键词获取专辑\n    getAlbumList: function getAlbumList() {\n      var that = this; //获取歌曲列表\n\n      var params = {\n        keywords: that.$route.query.keywords,\n        limit: 30,\n        offset: (that.currentPage - 1) * 30,\n        type: 10 //代表获取专辑\n\n      };\n      that.albumList = [];\n      getMusicInfo(params).then(function (res) {\n        that.albumList = res.data.result.albums;\n        that.count = res.data.result.albumCount; // console.log(\"专辑列表：\", res.data.result);\n      });\n    },\n    //通过搜索关键词获取歌手列表\n    getSingerList: function getSingerList() {\n      var that = this;\n      var params = {\n        keywords: that.$route.query.keywords,\n        limit: 15,\n        offset: (that.currentPage - 1) * 15,\n        type: 100 //代表获取歌手\n\n      };\n      that.artists = [];\n      getMusicInfo(params).then(function (res) {\n        // console.log(\"获取歌手列表----\", res.data.result);\n        that.artists = res.data.result.artists;\n        that.count = res.data.result.artistCount;\n      });\n    },\n    //通过搜索关键词获取歌单\n    getMusicList: function getMusicList() {\n      var that = this;\n      var params = {\n        keywords: that.$route.query.keywords,\n        limit: 15,\n        offset: (that.currentPage - 1) * 15,\n        type: 1000 //代表获取歌单\n\n      };\n      that.playListTable = [];\n      getMusicInfo(params).then( /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(res) {\n          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.next = 2;\n                  return res.data.result.playlists;\n\n                case 2:\n                  that.playListTable = _context2.sent;\n                  _context2.next = 5;\n                  return res.data.result.playlistCount;\n\n                case 5:\n                  that.count = _context2.sent;\n                  transPlayCount(that.playListTable, \"playCount\");\n\n                case 7:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function (_x2) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n    },\n    //通过搜索关键词获取对应视频列表\n    getVideoList: function getVideoList() {\n      var that = this;\n      var params = {\n        keywords: that.$route.query.keywords,\n        limit: 12,\n        offset: (that.currentPage - 1) * 12,\n        type: 1014 //代表获取视频\n\n      };\n      that.videoList = [];\n      getMusicInfo(params).then( /*#__PURE__*/function () {\n        var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(res) {\n          return regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  _context3.next = 2;\n                  return res.data.result.videos;\n\n                case 2:\n                  that.videoList = _context3.sent;\n                  _context3.next = 5;\n                  return res.data.result.videoCount;\n\n                case 5:\n                  that.count = _context3.sent;\n                  //转换歌曲时长单位为分秒\n                  transMusicTime(that.videoList, \"durationms\"); //将播放量转换成亿万单位\n\n                  transPlayCount(that.videoList, \"playTime\");\n\n                case 8:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3);\n        }));\n\n        return function (_x3) {\n          return _ref3.apply(this, arguments);\n        };\n      }());\n    },\n    //通过搜索关键词获取对应MV列表\n    getMVList: function getMVList() {\n      var that = this;\n      var params = {\n        keywords: that.$route.query.keywords,\n        limit: 12,\n        offset: (that.currentPage - 1) * 12,\n        type: 1004 //代表获取MV\n\n      };\n      that.mvList = [];\n      getMusicInfo(params).then( /*#__PURE__*/function () {\n        var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(res) {\n          return regeneratorRuntime.wrap(function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  _context4.next = 2;\n                  return res.data.result.mvs;\n\n                case 2:\n                  that.mvList = _context4.sent;\n                  _context4.next = 5;\n                  return res.data.result.mvCount;\n\n                case 5:\n                  that.count = _context4.sent;\n                  //转换歌曲时间为分秒单位\n                  transMusicTime(that.mvList, \"duration\"); // 转换播放量单位为万\n\n                  transPlayCount(that.mvList, \"playCount\");\n\n                case 8:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, _callee4);\n        }));\n\n        return function (_x4) {\n          return _ref4.apply(this, arguments);\n        };\n      }());\n    },\n    goVideo: function goVideo(vid, type) {\n      if (type === 0) {\n        this.$router.push({\n          name: \"mvPlay\",\n          params: {\n            mvId: vid\n          }\n        });\n      } else {\n        this.$router.push({\n          name: \"videoPlay\",\n          params: {\n            videoId: vid\n          }\n        });\n      }\n    },\n    randomColor: function randomColor() {\n      return \"#\".concat((Math.random() * 0xffffff << 0).toString(16));\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module"}