{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getPlaylistDetail, getSongList, getPlayListComment } from \"@/api/api\";\nimport { collectPlaylist, deletePlayList } from \"@/api/needLogin/musicOperate\";\nimport { transMusicTime } from \"@/utils/commonApi\";\nimport songlist from \"@/components/songlist.vue\";\nexport default {\n  components: {\n    songlist\n  },\n\n  data() {\n    return {\n      //歌单id\n      songListId: \"\",\n      //评论分页\n      currentPage: 1,\n      // 歌曲数组\n      musicList: [],\n      //下载音乐的地址\n      DownloadSongUrl: \"\",\n      //mv地址\n      mvUrl: \"\",\n      //搜索歌曲总数\n      count: \"\",\n      // playListComment: [\n      //   {\n      //     user: {\n      //       avatarUrl: \"\",\n      //     },\n      //   },\n      // ],\n      // commentCount: \"\",\n      //MV\n      songMV: [],\n      //歌单详情\n      playListDetail: {\n        name: \"\",\n        coverImgUrl: \"\",\n        trackCount: \"\",\n        creator: {\n          avatarUrl: '',\n          nickname: \"\",\n          signature: \"\"\n        },\n        tags: [],\n        description: \"\"\n      } // userId: \"\", //用户id，用于鉴别歌单是否由用户自己创建的\n\n    };\n  },\n\n  created() {// if (this.$store.state.token) {\n    //   this.userId = this.$store.state.user.userId;\n    // }\n  },\n\n  mounted() {\n    //缓存id,解决params数据在刷新页面后丢失，导致无法获取到歌单id\n    if (this.$route.params.playListDetail) {\n      localStorage.setItem(\"playListDetail\", JSON.stringify(this.$route.params.playListDetail)); //存储对象类型需要转换成字符串\n    } // 判断是否使用缓存\n\n\n    this.$route.params.playListDetail ? this.playListDetail = this.$route.params.playListDetail : this.playListDetail = JSON.parse(localStorage.getItem(\"playListDetail\")); //将字符串转成对象\n\n    this.getSongList();\n    this.getPlaylistDetail(); // this.getPlayListComment();\n  },\n\n  methods: {\n    /* //切换歌单评论\r\n    playListHandleCurrentChange(currentPage) {\r\n      var that = this;\r\n      that.currentPage = currentPage;\r\n      that.getPlayListComment();\r\n    }, */\n\n    /* //获取歌单评论\r\n    getPlayListComment() {\r\n      var that = this;\r\n      let params = {\r\n        id: that.playListDetail.id,\r\n        limit: 7,\r\n        offset: (that.currentPage - 1) * 7,\r\n      };\r\n      getPlayListComment(params).then(async (res) => {\r\n        // console.log(\"歌单评论：\", res.data);\r\n        this.playListComment = await res.data.comments;\r\n        that.commentCount = await res.data.total;\r\n        // console.log(\"歌曲评论：\", res.data);\r\n      });\r\n    }, */\n    //分页\n    handleCurrentChange: function (currentPage) {\n      // console.log(`当前页: ${currentPage}`);\n      this.currentPage = currentPage;\n      var that = this;\n      that.getPlaylistDetail(currentPage);\n    },\n\n    getPlaylistDetail() {\n      //传入歌单id获取歌曲id和歌单详情\n      var that = this;\n      let params = {\n        id: that.playListDetail.id\n      };\n      getPlaylistDetail(params).then(async res => {\n        // console.log(\"----------------:\", res.data.privileges); //歌单歌曲\n        // console.log(\"--歌单详情-------:\", res.data.playlist); //歌单歌曲\n        that.playListDetail = await res.data.playlist; // that.musicList = that.playListDetail.tracks;\n      });\n    },\n\n    getSongList() {\n      //获取歌单所有歌曲\n      var that = this;\n      let params = {\n        id: that.playListDetail.id\n      };\n      getSongList(params).then(async res => {\n        that.musicList = await res.data.songs; //给每个列表添加一个防抖\n\n        for (let item of that.musicList) {\n          that.$set(item, \"timer\", true);\n        }\n\n        transMusicTime(that.musicList, \"dt\");\n      });\n    }\n    /*    //收藏/取消收藏歌单\r\n       collectPlaylist(t) {\r\n         const loading = this.$loading({\r\n           target: \"#list_detail\",\r\n           background: \"rgba(255,255,255,0.1)\",\r\n         });\r\n         let params = {\r\n           t: t,\r\n           id: this.playListDetail.id,\r\n         };\r\n         collectPlaylist(params)\r\n           .then((res) => {\r\n             this.$nextTick(() => {\r\n               loading.close();\r\n             });\r\n    \n             // console.log(res, \"收藏返回\");\r\n             if (res.data.code === 200) {\r\n               if (t === \"1\") {\r\n                 this.$message({\r\n                   type: \"success\",\r\n                   message: \"收藏成功-可在网易云音乐中查看\",\r\n                 });\r\n                 return;\r\n               } else if (t === \"2\") {\r\n                 this.$message({\r\n                   type: \"success\",\r\n                   message: \"已取消收藏\",\r\n                 });\r\n               }\r\n             }\r\n           })\r\n           .catch((err) => {\r\n             this.$nextTick(() => {\r\n               loading.close();\r\n             });\r\n             //如果不写catch,请求拦截器拦截后这里会报错\r\n           });\r\n       },\r\n       //删除歌单（自己的）\r\n       deletePlayList(id) {\r\n         const loading = this.$loading({\r\n           target: \"#list_detail\",\r\n           background: \"rgba(255,255,255,0.1)\",\r\n         });\r\n         deletePlayList({ id: id })\r\n           .then((res) => {\r\n             this.$nextTick(() => {\r\n               loading.close();\r\n             });\r\n             if (res.data.code === 200) {\r\n               this.$message.success(\"已从我的歌单删除\");\r\n               this.$router.go(-1);\r\n             }\r\n           })\r\n           .catch((err) => {\r\n             this.$nextTick(() => {\r\n               loading.close();\r\n             });\r\n           });\r\n       }, */\n\n\n  }\n};","map":null,"metadata":{},"sourceType":"module"}