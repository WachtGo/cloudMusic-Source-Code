{"ast":null,"code":"import _asyncToGenerator from \"D:/Desktop/git\\u5DE5\\u4F5C\\u533A/cloudMusic-Source-Code/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getSingerlist as _getSingerlist } from '@/api/api';\nexport default {\n  data: function data() {\n    return {\n      type: '-1',\n      area: '-1',\n      initial: '-1',\n      singerType: [{\n        type: '-1',\n        typeName: '全部'\n      }, {\n        type: '1',\n        typeName: '男歌手'\n      }, {\n        type: '2',\n        typeName: '女歌手'\n      }, {\n        type: '3',\n        typeName: '乐队'\n      }],\n      singerArea: [{\n        area: '-1',\n        areaName: '全部'\n      }, {\n        area: '7',\n        areaName: '华语'\n      }, {\n        area: '96',\n        areaName: '欧美'\n      }, {\n        area: '8',\n        areaName: '日本'\n      }, {\n        area: '16',\n        areaName: '韩国'\n      }, {\n        area: '0',\n        areaName: '其他'\n      }],\n      typeareaElement: [],\n      singerList: [],\n      count: 9999,\n      //初始页\n      currentPage: 1\n    };\n  },\n  watch: {\n    //排列顺序发生变化时，自动获取\n    initial: function initial() {\n      this.getSingerlist(this.type, this.area);\n    }\n  },\n  mounted: function mounted() {\n    this.typeElement = document.querySelectorAll('.singer-type');\n    this.areaElement = document.querySelectorAll('.singer-area');\n    this.getSingerlist(this.currentTag);\n  },\n  methods: {\n    //更改点击样式，方便查看选择的歌手类型和地区\n    checkedStyle: function checkedStyle(element, idx) {\n      console.log(element);\n      element.forEach(function (item, index) {\n        if (idx === index) {\n          item.classList.add('type-area-checked');\n        } else {\n          if (item.classList.contains('type-area-checked')) {\n            item.classList.remove('type-area-checked');\n          }\n        }\n      });\n    },\n    areaStyle: function areaStyle() {},\n    //获取歌手列表----\n    getSingerlist: function getSingerlist(type, area) {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var that, params;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                that = _this;\n                that.type = type;\n                that.area = area;\n                params = {\n                  type: that.type,\n                  area: that.area,\n                  initial: _this.initial,\n                  limit: 10,\n                  offset: (that.currentPage - 1) * 10\n                }; // that.categaryShow = false\n                // if (that.currentTag === cat && notChangePage) return\n\n                that.singerList = []; //清空，重新获取，防止页面图片加载慢\n                // that.currentTag = cat\n\n                _context.next = 7;\n                return _getSingerlist(params).then(function (res) {\n                  // console.log(res)\n                  that.singerList = res.data.artists; // console.log(that.singerList)\n                  // that.count = res.data.total\n                  // transPlayCount(that.singerList)\n                  // transPlayCount(that.singerList, 'playCount')\n                });\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    //传入歌单id进入歌单详情\n    goSongList: function goSongList(songListId) {\n      //传入歌单id进入歌单详情\n      var that = this;\n      that.$router.push({\n        name: 'playListDetails',\n        params: {\n          songListId: songListId\n        }\n      });\n    },\n    //分页\n    handleCurrentChange: function handleCurrentChange(currentPage) {\n      // console.log(`当前页: ${currentPage}`);\n      var that = this;\n      that.currentPage = currentPage;\n      that.getSingerlist(that.type, that.area);\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwFA;AACA;AACAA,MADA,kBACA;AACA;AACAC,gBADA;AAEAC,gBAFA;AAGAC,mBAHA;AAIAC,mBACA;AACAH,kBADA;AAEAI;AAFA,OADA,EAKA;AACAJ,iBADA;AAEAI;AAFA,OALA,EASA;AACAJ,iBADA;AAEAI;AAFA,OATA,EAaA;AACAJ,iBADA;AAEAI;AAFA,OAbA,CAJA;AAsBAC,mBACA;AACAJ,kBADA;AAEAK;AAFA,OADA,EAKA;AACAL,iBADA;AAEAK;AAFA,OALA,EASA;AACAL,kBADA;AAEAK;AAFA,OATA,EAaA;AACAL,iBADA;AAEAK;AAFA,OAbA,EAiBA;AACAL,kBADA;AAEAK;AAFA,OAjBA,EAqBA;AACAL,iBADA;AAEAK;AAFA,OArBA,CAtBA;AAgDAC,yBAhDA;AAiDAC,oBAjDA;AAkDAC,iBAlDA;AAmDA;AACAC;AApDA;AAsDA,GAxDA;AAyDAC;AACA;AACAT,WAFA,qBAEA;AACA;AACA;AAJA,GAzDA;AA+DAU,SA/DA,qBA+DA;AACA;AACA;AACA;AACA,GAnEA;AAoEAC;AACA;AACAC,gBAFA,wBAEAC,OAFA,EAEAC,GAFA,EAEA;AACAC;AACAF;AACA;AACAG;AACA,SAFA,MAEA;AACA;AACAA;AACA;AACA;AACA,OARA;AASA,KAbA;AAcAC,aAdA,uBAcA,EAdA;AAeA;AACAC,iBAhBA,yBAgBApB,IAhBA,EAgBAC,IAhBA,EAgBA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACAoB,oBADA,GACA,KADA;AAEAA;AACAA;AACAC,sBAJA,GAIA;AACAtB,iCADA;AAEAC,iCAFA;AAGAC,wCAHA;AAIAqB,2BAJA;AAKAC;AALA,iBAJA,EAWA;AACA;;AACAH,qCAbA,CAaA;AACA;;AAdA;AAAA,uBAeAD;AACA;AACAC,qDAFA,CAGA;AACA;AACA;AACA;AACA,iBAPA,CAfA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuBA,KAvCA;AAwCA;AACAI,cAzCA,sBAyCAC,UAzCA,EAyCA;AACA;AACA;AACAL;AACAM,+BADA;AAEAL;AAAAI;AAAA;AAFA;AAIA,KAhDA;AAiDA;AACAE;AACA;AACA;AACAP;AACAA;AACA;AAvDA;AApEA","names":["data","type","area","initial","singerType","typeName","singerArea","areaName","typeareaElement","singerList","count","currentPage","watch","mounted","methods","checkedStyle","element","idx","console","item","areaStyle","getSingerlist","that","params","limit","offset","goSongList","songListId","name","handleCurrentChange"],"sourceRoot":"src/views/categery","sources":["singerCategary.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"list-wrap\">\r\n      <div>\r\n        <div class=\"inline-block\"\r\n             style=\"padding:5px 0;\">\r\n          <span style=\" font-size: 16px;\">类型：</span>\r\n          <span class=\"type-area singer-type\"\r\n                v-for=\"(item,index) in singerType\"\r\n                :key=\"item.type\"\r\n                @click=\"checkedStyle(typeElement,index) ;getSingerlist(item.type,area)\">\r\n            {{item.typeName}}\r\n          </span>\r\n        </div>\r\n\r\n      </div>\r\n      <div>\r\n        <div class=\"inline-block\"\r\n             style=\"padding:5px 0;\">\r\n          <span style=\" font-size: 16px;\">地区：</span>\r\n          <span class=\"type-area singer-area\"\r\n                v-for=\"(item,index) in singerArea\"\r\n                :key=\"item.area\"\r\n                @click=\"checkedStyle(areaElement,index) ;getSingerlist(type,item.area)\">\r\n            {{item.areaName}}\r\n          </span>\r\n        </div>\r\n        <div class=\"inline-block clearfix \"\r\n             style=\"float: right;padding:5px 0;\">\r\n          <!-- <span style=\"color:#eee\">当前：</span>\r\n          <span class='categary-select'>{{currentTag}}</span> -\r\n\t\t\t\t\t<span class='categary-select'>{{currentTag}}</span> - -->\r\n          <span style=\"color:#eee\">&nbsp;排列：</span>\r\n          <span class='categary-select'\r\n                v-if=\"initial == '-1'\"\r\n                @click=\"initial = 'a'\">热门</span>\r\n          <span class=\"categary-select\"\r\n                v-if=\"initial == 'a'\"\r\n                @click=\"initial = '-1'\">歌手名</span>\r\n\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <!-- 歌手列表 -->\r\n      <div class=\"singerListClass\">\r\n        <h3 v-show=\"singerList.length === 0\"><i class=\"el-icon-loading\"></i></h3>\r\n        <li class=\"liWrap\"\r\n            v-for=\"(item, index) in singerList\"\r\n            :key=\"index\"\r\n            @click.stop=\"goSingerDetail(item.id)\">\r\n          <div class=\"liWrap-block1\">\r\n            <img :src=\"item.img1v1Url\"\r\n                 alt=\"\" />\r\n          </div>\r\n          <div class=\"liWrap-block2\">\r\n            <div class=\"div1\">\r\n              歌手：<span>{{ item.name }}</span>\r\n            </div>\r\n            <div>\r\n              <div class=\"divOther\">\r\n                专辑：<span>{{ item.albumSize }}</span>\r\n              </div>\r\n\r\n              <div class=\"divOther\">\r\n                歌曲：<span>{{ item.musicSize }}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </li>\r\n      </div>\r\n\r\n    </div>\r\n    <div class=\"pagination\">\r\n      <el-pagination v-show=\"count !== 0\"\r\n                     @current-change=\"handleCurrentChange\"\r\n                     :current-page.sync=\"currentPage\"\r\n                     :page-size=\"15\"\r\n                     layout=\"prev, pager, next, jumper\"\r\n                     :total=\"count\"\r\n                     :background=\"true\">\r\n      </el-pagination>\r\n    </div>\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport { getSingerlist } from '@/api/api'\r\nexport default {\r\n  data() {\r\n    return {\r\n      type: '-1',\r\n      area: '-1',\r\n      initial: '-1',\r\n      singerType: [\r\n        {\r\n          type: '-1',\r\n          typeName: '全部',\r\n        },\r\n        {\r\n          type: '1',\r\n          typeName: '男歌手',\r\n        },\r\n        {\r\n          type: '2',\r\n          typeName: '女歌手',\r\n        },\r\n        {\r\n          type: '3',\r\n          typeName: '乐队',\r\n        },\r\n      ],\r\n      singerArea: [\r\n        {\r\n          area: '-1',\r\n          areaName: '全部',\r\n        },\r\n        {\r\n          area: '7',\r\n          areaName: '华语',\r\n        },\r\n        {\r\n          area: '96',\r\n          areaName: '欧美',\r\n        },\r\n        {\r\n          area: '8',\r\n          areaName: '日本',\r\n        },\r\n        {\r\n          area: '16',\r\n          areaName: '韩国',\r\n        },\r\n        {\r\n          area: '0',\r\n          areaName: '其他',\r\n        },\r\n      ],\r\n      typeareaElement: [],\r\n      singerList: [],\r\n      count: 9999,\r\n      //初始页\r\n      currentPage: 1,\r\n    }\r\n  },\r\n  watch: {\r\n    //排列顺序发生变化时，自动获取\r\n    initial() {\r\n      this.getSingerlist(this.type, this.area)\r\n    },\r\n  },\r\n  mounted() {\r\n    this.typeElement = document.querySelectorAll('.singer-type')\r\n    this.areaElement = document.querySelectorAll('.singer-area')\r\n    this.getSingerlist(this.currentTag)\r\n  },\r\n  methods: {\r\n    //更改点击样式，方便查看选择的歌手类型和地区\r\n    checkedStyle(element, idx) {\r\n      console.log(element)\r\n      element.forEach((item, index) => {\r\n        if (idx === index) {\r\n          item.classList.add('type-area-checked')\r\n        } else {\r\n          if (item.classList.contains('type-area-checked')) {\r\n            item.classList.remove('type-area-checked')\r\n          }\r\n        }\r\n      })\r\n    },\r\n    areaStyle() {},\r\n    //获取歌手列表----\r\n    async getSingerlist(type, area) {\r\n      let that = this\r\n      that.type = type\r\n      that.area = area\r\n      let params = {\r\n        type: that.type,\r\n        area: that.area,\r\n        initial: this.initial,\r\n        limit: 10,\r\n        offset: (that.currentPage - 1) * 10,\r\n      }\r\n      // that.categaryShow = false\r\n      // if (that.currentTag === cat && notChangePage) return\r\n      that.singerList = [] //清空，重新获取，防止页面图片加载慢\r\n      // that.currentTag = cat\r\n      await getSingerlist(params).then((res) => {\r\n        // console.log(res)\r\n        that.singerList = res.data.artists\r\n        // console.log(that.singerList)\r\n        // that.count = res.data.total\r\n        // transPlayCount(that.singerList)\r\n        // transPlayCount(that.singerList, 'playCount')\r\n      })\r\n    },\r\n    //传入歌单id进入歌单详情\r\n    goSongList(songListId) {\r\n      //传入歌单id进入歌单详情\r\n      var that = this\r\n      that.$router.push({\r\n        name: 'playListDetails',\r\n        params: { songListId: songListId },\r\n      })\r\n    },\r\n    //分页\r\n    handleCurrentChange: function (currentPage) {\r\n      // console.log(`当前页: ${currentPage}`);\r\n      var that = this\r\n      that.currentPage = currentPage\r\n      that.getSingerlist(that.type, that.area)\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.descript {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  color: aliceblue;\r\n  font-weight: bolder;\r\n  padding: 0 20px;\r\n  border-radius: 20px 20px 0 0;\r\n  // background: rgba(95, 158, 160, 0.05);\r\n  box-sizing: border-box;\r\n}\r\n.list-wrap {\r\n  margin: 10px auto 0;\r\n  padding: 0 20px;\r\n  width: 1120px;\r\n  height: 675px;\r\n  border-radius: 20px;\r\n  // background: rgba(95, 158, 160, 0.11);\r\n  box-sizing: border-box;\r\n\r\n  .type-area {\r\n    padding: 0 5px;\r\n    font-size: 15px;\r\n    color: rgb(201, 185, 165);\r\n    // border: 1px dotted rgb(192, 190, 190);\r\n    // border-radius: 10px;\r\n    transition: 0.3s;\r\n\r\n    &:hover {\r\n      cursor: pointer;\r\n      color: rgb(238, 195, 143);\r\n    }\r\n  }\r\n  .type-area-checked {\r\n    color: rgba(255, 192, 115, 0.966) !important;\r\n    // border: 1px solid rgba(255, 198, 129, 0.89);\r\n    // border-radius: 10px;\r\n  }\r\n  .categary-select {\r\n    padding: 0 10px;\r\n    // border: 1px solid #eee;\r\n    border-radius: 10px;\r\n\r\n    color: rgb(202, 162, 108);\r\n    transition: 0.3s;\r\n    &:hover {\r\n      color: rgb(202, 162, 108);\r\n      cursor: pointer;\r\n    }\r\n  }\r\n  .categary-allTag {\r\n    color: rgb(201, 185, 165);\r\n    transition: 0.2s;\r\n    &:hover {\r\n      color: rgb(202, 162, 108);\r\n      cursor: pointer;\r\n    }\r\n  }\r\n  .categary-allTag-wrap {\r\n    z-index: 100;\r\n    position: absolute;\r\n    right: 40px;\r\n    width: 600px;\r\n    height: 300px;\r\n    padding: 10px;\r\n    background: rgba(77, 114, 131, 0.884);\r\n    border-radius: 20px;\r\n    overflow-x: hidden;\r\n    box-sizing: border-box;\r\n    &::-webkit-scrollbar {\r\n      display: none;\r\n    }\r\n\r\n    .categary-allTag-wrap-list-item {\r\n      padding: 5px 20px;\r\n\r\n      box-sizing: border-box;\r\n      // background: rgb(153, 140, 140);\r\n\r\n      span {\r\n        display: inline-block;\r\n        margin: 5px 10px;\r\n        color: rgb(207, 206, 204);\r\n        transition: 0.2s;\r\n\r\n        &:hover {\r\n          color: rgb(202, 162, 108);\r\n          cursor: pointer;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n//歌手列表样式\r\n.singerListClass {\r\n  padding: 5px 0;\r\n  height: 610px;\r\n  box-sizing: border-box;\r\n  overflow-x: hidden;\r\n\r\n  &::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n  .liWrap {\r\n    display: flex;\r\n    justify-content: space-around;\r\n    margin: 0 auto 10px;\r\n    padding: 5px 10px;\r\n    width: 100%;\r\n    height: 60px;\r\n    border-radius: 12px;\r\n    background-color: rgba(129, 235, 199, 0.068);\r\n    // box-sizing: border-box;\r\n    transition: 0.2s;\r\n    &:hover {\r\n      transform: scale(1.01);\r\n    }\r\n    .liWrap-block1 {\r\n      width: 60px;\r\n      height: 60px;\r\n      border-radius: 10px;\r\n      background-color: rgba(152, 158, 149, 0);\r\n      transition: 0.2s;\r\n      img {\r\n        width: 100%;\r\n        height: 100%;\r\n        border-radius: 10px;\r\n      }\r\n      &:hover {\r\n        transform: scale(1.05);\r\n        cursor: pointer;\r\n      }\r\n    }\r\n    .liWrap-block2 {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      padding: 10px;\r\n      width: 90%;\r\n      height: 60px;\r\n      font-size: 15px;\r\n      text-overflow: ellipsis;\r\n      overflow: hidden;\r\n      white-space: nowrap;\r\n      border-radius: 10px;\r\n      line-height: 40px;\r\n      box-sizing: border-box;\r\n      // background-color: rgba(226, 214, 156, 0.075);\r\n      transition: 0.2s;\r\n\r\n      span {\r\n        &:hover {\r\n          color: rgba(136, 240, 240, 0.719);\r\n        }\r\n      }\r\n      .div1 {\r\n        display: inline-block;\r\n        // width: 200px;\r\n\r\n        span {\r\n          color: bisque;\r\n          transition: 0.2s;\r\n          &:hover {\r\n            color: rgba(252, 214, 167, 0.979);\r\n          }\r\n        }\r\n      }\r\n      .divOther {\r\n        display: inline-block;\r\n        width: 100px;\r\n        margin-right: 5px;\r\n\r\n        span {\r\n          color: bisque;\r\n          transition: 0.2s;\r\n          &:hover {\r\n            color: rgba(255, 198, 129, 0.979);\r\n          }\r\n        }\r\n      }\r\n      &:hover {\r\n        transform: scale(1.01);\r\n        cursor: pointer;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.pagination {\r\n  text-align: center;\r\n  background: none !important;\r\n\r\n  /deep/ .el-pager {\r\n    height: 30px !important;\r\n    background: none !important;\r\n  }\r\n  /deep/ .number,\r\n  /deep/ .btn-prev,\r\n  /deep/ .btn-quicknext,\r\n  /deep/ .btn-next,\r\n  /deep/ .el-input__inner,\r\n  /deep/ .more {\r\n    color: #f2fff7 !important;\r\n    background: transparent !important;\r\n  }\r\n  /deep/ .number:hover,\r\n  /deep/ .btn-prev:hover,\r\n  /deep/ .btn-quicknext:hover,\r\n  /deep/ .btn-next:hover,\r\n  /deep/ .el-input__inner:hover,\r\n  /deep/ .more:hover {\r\n    color: #f7a588 !important;\r\n  }\r\n  /deep/ .active {\r\n    color: #f7a588 !important;\r\n  }\r\n  /deep/ .el-input__inner {\r\n    border: none;\r\n  }\r\n  /deep/ .el-pagination__jump {\r\n    color: #f7dd88 !important;\r\n  }\r\n  /deep/ .el-pagination {\r\n    height: 100% !important;\r\n  }\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}