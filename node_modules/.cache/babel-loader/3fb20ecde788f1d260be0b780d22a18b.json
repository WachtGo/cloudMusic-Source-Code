{"ast":null,"code":"import Vue from \"vue\";\nimport Vuex from \"vuex\";\nimport aplayer from \"./aplayer\";\nimport homePage from \"./homePage\";\nimport musicPlayList from \"./musicPlayList\";\nimport login from \"./login\";\nimport createPersistedState from \"vuex-persistedstate\"; // import {getToken,setToken,removeToken} from \"@/utils/auth\"\n// import {getStorage, setStorage,removeStorage} from \"@/utils/storage\"\n\nVue.use(Vuex);\nexport default new Vuex.Store({\n  // 歌曲生成周期\n  plugins: [createPersistedState({\n    storage: window.sessionStorage\n  })],\n  modules: {\n    aplayer: aplayer,\n    homePage: homePage,\n    musicPlayList: musicPlayList,\n    login: login\n  }\n}); // export default new Vuex.Store({\n// state: {\n//   // 获取token\n//   // token:getToken(),\n//   //获取本地token\n//   // token_storage:getStorage(),\n// },\n// //mutations用于修改state\n// //Async 异步\n// mutations: {//将方法名改成大写，防止在其他组件中出现同名冲突（无法生效）\n//   //将token保存在本地存储\n//   // setSTORAGE(state,tokenName,tokenContent){\n//   //   setStorage(tokenName,tokenContent)\n//   // }\n//   // ,\n//   // //保存token\n//   // setTOKEN(state,token){\n//   //   setToken(token)\n//   //   this._vm.$message({\n//   //     type: 'success',\n//   //     message: 'cookie设置成功',\n//   //   });\n//   // },\n//   // removeTOKEN(state){\n//   //   state.token = null\n//   //   removeToken()\n//   //   this._vm.$message({\n//   //     type: 'success',\n//   //     message: '成功退出登录',\n//   //   });\n//   // },\n//   //播放器添加歌曲\n//   // //刷新音频播放器\n//   // alplayReload(state,change){\n//   //   if(change){\n//   //      state.alplayShow = false\n//   //   setTimeout(()=>{\n//   //     state.alplayShow = true\n//   //   },1000)\n//   //   }\n//   // }\n// },\n// //actions专门用来做异步处理\n// actions: {\n// }\n// })","map":{"version":3,"sources":["D:/data/桌面/git/cloudMusic-Source-Code/src/store/index.js"],"names":["Vue","Vuex","aplayer","homePage","musicPlayList","login","createPersistedState","use","Store","plugins","storage","window","sessionStorage","modules"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,oBAAP,MAAiC,qBAAjC,C,CACA;AACA;;AACAN,GAAG,CAACO,GAAJ,CAAQN,IAAR;AACA,eAAe,IAAIA,IAAI,CAACO,KAAT,CAAe;AAC5B;AACAC,EAAAA,OAAO,EAAE,CACPH,oBAAoB,CAAC;AACnBI,IAAAA,OAAO,EAAEC,MAAM,CAACC;AADG,GAAD,CADb,CAFmB;AAO5BC,EAAAA,OAAO,EAAE;AACPX,IAAAA,OAAO,EAAPA,OADO;AAEPC,IAAAA,QAAQ,EAARA,QAFO;AAGPC,IAAAA,aAAa,EAAbA,aAHO;AAIPC,IAAAA,KAAK,EAALA;AAJO;AAPmB,CAAf,CAAf,C,CAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA","sourcesContent":["import Vue from \"vue\";\r\nimport Vuex from \"vuex\";\r\nimport aplayer from \"./aplayer\";\r\nimport homePage from \"./homePage\";\r\nimport musicPlayList from \"./musicPlayList\";\r\nimport login from \"./login\"\r\nimport createPersistedState from \"vuex-persistedstate\";\r\n// import {getToken,setToken,removeToken} from \"@/utils/auth\"\r\n// import {getStorage, setStorage,removeStorage} from \"@/utils/storage\"\r\nVue.use(Vuex);\r\nexport default new Vuex.Store({\r\n  // 歌曲生成周期\r\n  plugins: [\r\n    createPersistedState({\r\n      storage: window.sessionStorage,\r\n    }),\r\n  ],\r\n  modules: {\r\n    aplayer,\r\n    homePage,\r\n    musicPlayList,\r\n    login\r\n  },\r\n\r\n});\r\n\r\n// export default new Vuex.Store({\r\n// state: {\r\n//   // 获取token\r\n//   // token:getToken(),\r\n//   //获取本地token\r\n//   // token_storage:getStorage(),\r\n// },\r\n// //mutations用于修改state\r\n// //Async 异步\r\n// mutations: {//将方法名改成大写，防止在其他组件中出现同名冲突（无法生效）\r\n\r\n//   //将token保存在本地存储\r\n//   // setSTORAGE(state,tokenName,tokenContent){\r\n//   //   setStorage(tokenName,tokenContent)\r\n//   // }\r\n//   // ,\r\n//   // //保存token\r\n//   // setTOKEN(state,token){\r\n//   //   setToken(token)\r\n//   //   this._vm.$message({\r\n//   //     type: 'success',\r\n//   //     message: 'cookie设置成功',\r\n//   //   });\r\n//   // },\r\n//   // removeTOKEN(state){\r\n//   //   state.token = null\r\n//   //   removeToken()\r\n//   //   this._vm.$message({\r\n//   //     type: 'success',\r\n//   //     message: '成功退出登录',\r\n//   //   });\r\n//   // },\r\n//   //播放器添加歌曲\r\n\r\n//   // //刷新音频播放器\r\n//   // alplayReload(state,change){\r\n//   //   if(change){\r\n//   //      state.alplayShow = false\r\n//   //   setTimeout(()=>{\r\n//   //     state.alplayShow = true\r\n//   //   },1000)\r\n//   //   }\r\n//   // }\r\n\r\n// },\r\n// //actions专门用来做异步处理\r\n// actions: {\r\n\r\n// }\r\n// })\r\n"]},"metadata":{},"sourceType":"module"}