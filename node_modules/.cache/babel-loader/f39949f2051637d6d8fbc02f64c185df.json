{"ast":null,"code":"import _createForOfIteratorHelper from \"D:/Desktop/git\\u5DE5\\u4F5C\\u533A/cloudMusic-Source-Code/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getDownloadUrl as _getDownloadUrl, getSingerDesc as _getSingerDesc, getSingerSongList as _getSingerSongList, getSingerMvList as _getSingerMvList, playMusicUrl, getSongLyric, getSongDetails, getSingerAlbum as _getSingerAlbum } from \"@/api/api\";\nimport { download } from \"@/api/download\";\nimport { transMusicTime } from '@api/commonApi';\nexport default {\n  // props: ['singerId'],\n  data: function data() {\n    return {\n      //试听音乐\n      listen: [],\n      //歌手信息\n      singerId: '',\n      singerDesc: {},\n      songList: [],\n      albumList: [],\n      mvList: [],\n      tagSwitch: {\n        detailSwitch: true,\n        songSwitch: false,\n        albumSwitch: false,\n        mvSwitch: false\n      }\n    };\n  },\n  mounted: function mounted() {\n    ////缓存id,解决params数据在刷新页面后丢失，导致无法获取到歌手id\n    if (this.$route.params.singerId) {\n      localStorage.setItem('singerId', this.$route.params.singerId);\n    } //判断是否使用缓存\n\n\n    this.$route.params.singerId ? this.singerId = this.$route.params.singerId : this.singerId = localStorage.getItem('singerId');\n    this.getSingerDesc();\n  },\n  methods: {\n    //显示歌手单曲、专辑、mv列表开关\n    switchChange: function switchChange(tag) {\n      var that = this;\n\n      for (var key in that.tagSwitch) {\n        if (key != tag) {\n          that.tagSwitch[key] = false;\n        }\n      }\n\n      that.tagSwitch[tag] = true;\n    },\n    //获取歌手单曲列表(只有热门50首)\n    getSingerSongList: function getSingerSongList(tag) {\n      var that = this;\n      that.detailShow = false;\n      var params = {\n        id: that.singerId\n      };\n\n      _getSingerSongList(params).then(function (res) {\n        // console.log(\"歌手单曲列表：\", res.data.hotSongs);\n        that.songList = res.data.hotSongs; //给每首曲子添加防抖\n\n        var _iterator = _createForOfIteratorHelper(that.songList),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var item = _step.value;\n            that.$set(item, \"timer\", true);\n          } //转换时间\n\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n\n        var dt = \"dt\";\n        transMusicTime(that.songList, dt);\n      });\n\n      that.switchChange(tag);\n    },\n    //获取歌手专辑列表\n    getSingerAlbum: function getSingerAlbum(tag) {\n      var that = this;\n      that.detailShow = false;\n      var params = {\n        id: that.singerId,\n        limit: 999\n      };\n\n      _getSingerAlbum(params).then(function (res) {\n        // console.log(\"歌手专辑列表\", res.data.hotAlbums);\n        that.albumList = res.data.hotAlbums;\n      });\n\n      that.switchChange(tag);\n    },\n    //获取歌手mv\n    getSingerMvList: function getSingerMvList(tag) {\n      var that = this;\n      var params = {\n        id: that.singerId\n      };\n\n      _getSingerMvList(params).then(function (res) {\n        // console.log(\"获取到的歌手MV：\", res.data.mvs);\n        that.mvList = res.data.mvs;\n        var dt = \"duration\"; //将时长字段赋值，方便传参\n\n        transMusicTime(that.mvList, dt);\n\n        for (var i = 0; i < that.mvList.length; i++) {\n          if (String(that.mvList[i].playCount).length > 5 && String(that.mvList[i].playCount).length < 9) {\n            that.mvList[i].playCount = String(that.mvList[i].playCount).substr(0, String(that.mvList[i].playCount).length - 4) + \"万\";\n          } else if (String(that.mvList[i].playCount).length == 5) {\n            that.mvList[i].playCount = String(that.mvList[i].playCount).substr(0, 1) + \".\" + String(that.mvList[i].playCount).substr(1, 2) + \"万\";\n          } else if (String(that.mvList[i].playCount).length == 9) {\n            that.mvList[i].playCount = String(that.mvList[i].playCount).substr(0, 1) + \".\" + String(that.mvList[i].playCount).substr(1, 2) + \"亿\";\n          } else if (String(that.mvList[i].playCount).length > 9) {\n            that.mvList[i].playCount = String(that.mvList[i].playCount).substr(0, String(that.mvList[i].playCount).length - 8) + \"亿\";\n          }\n        }\n      });\n\n      that.switchChange(tag);\n    },\n    //获取歌手描述\n    getSingerDesc: function getSingerDesc() {\n      var that = this;\n      var params = {\n        id: that.singerId\n      };\n\n      _getSingerDesc(params).then(function (res) {\n        // console.log(\"歌手描述\", res.data);\n        that.singerDesc = res.data.artist;\n      });\n    },\n    listenMusic: function listenMusic(id, fee, index) {\n      //获取播放音乐链接\n      var that = this;\n\n      if (that.songList[index].timer) {\n        if (fee == 1) {\n          that.$message({\n            message: \"VIP歌曲 - 只能试听30s\",\n            type: \"warning\"\n          });\n        }\n\n        playMusicUrl({\n          id: id\n        }).then(function (res) {\n          // console.log(\"播放音乐链接\", res.data.data[0].url);\n          if (res.data.data[0].url) {\n            that.songUrlAdd = res.data.data[0].url;\n          } else {\n            that.$message({\n              message: \"不好意思这首歌暂无版权\",\n              type: \"error\"\n            });\n            that.songList[index].timer = false;\n            setTimeout(function () {\n              that.songList[index].timer = true;\n            }, 3000);\n            return;\n          }\n        }), // 获取歌词\n        getSongLyric({\n          id: id\n        }).then(function (res) {\n          that.songlrc = res.data.lrc.lyric;\n        }), // 获取歌曲信息\n        getSongDetails({\n          ids: id\n        }).then(function (res) {\n          if (that.songUrlAdd != null) {\n            that.listen = [];\n            that.listen.push({\n              name: res.data.songs[0].name,\n              //歌曲名\n              artist: res.data.songs[0].ar[0].name,\n              //作者\n              url: that.songUrlAdd,\n              cover: res.data.songs[0].al.picUrl,\n              lrc: that.songlrc\n            }); // console.log(that.listen);\n\n            that.songUrlAdd = null;\n            that.songlrc = \"\";\n          }\n        });\n      }\n    },\n    //将歌曲添加到播放列表或者播放\n    playMusic: function playMusic(id, fee, index) {\n      //获取播放音乐链接\n      var that = this;\n\n      if (that.songList[index].timer) {\n        if (fee == 1) {\n          that.$message({\n            message: \"VIP歌曲 - 只能试听30s\",\n            type: \"warning\"\n          });\n        }\n\n        playMusicUrl({\n          id: id\n        }).then(function (res) {\n          // console.log(\"播放音乐链接\", res.data.data[0].url);\n          if (res.data.data[0].url) {\n            that.songUrlAdd = res.data.data[0].url;\n          } else {\n            that.$message({\n              message: \"不好意思这首歌暂无版权\",\n              type: \"error\"\n            });\n            that.songList[index].timer = false;\n            setTimeout(function () {\n              that.songList[index].timer = true;\n            }, 3000);\n            return;\n          }\n        }), // 获取歌词\n        getSongLyric({\n          id: id\n        }).then(function (res) {\n          that.songlrc = res.data.lrc.lyric;\n        }), // 获取歌曲信息\n        getSongDetails({\n          ids: id\n        }).then(function (res) {\n          // console.log(\"获取歌曲信息，添加到播放器：\", res.data.songs);\n          if (that.songUrlAdd != null) {\n            that.$store.commit(\"addSONG\", {\n              name: res.data.songs[0].name,\n              //歌曲名\n              artist: res.data.songs[0].ar[0].name,\n              //作者\n              url: that.songUrlAdd,\n              cover: res.data.songs[0].al.picUrl,\n              lrc: that.songlrc // theme: that.randomColor(),\n\n            }); // console.log(\n            //   that.$store.state.audio,\n            //   \"添加歌曲后的歌曲播放列表-----\"\n            // );\n\n            that.songUrlAdd = null;\n            that.songlrc = \"\";\n            that.songList[index].timer = false;\n            setTimeout(function () {\n              that.songList[index].timer = true;\n            }, 3000);\n          }\n        });\n      }\n    },\n    //跳转到歌曲详情\n    goSongDetails: function goSongDetails(ids) {\n      this.$router.push({\n        name: \"songDetails\",\n        params: {\n          songId: ids\n        }\n      });\n    },\n    //跳转到专辑详情\n    goAlbumDetail: function goAlbumDetail(albumId) {\n      this.$router.push({\n        name: \"albumDetail\",\n        params: {\n          id: albumId\n        }\n      });\n    },\n    //跳转到播放MV页面\n    playMV: function playMV(mvId) {\n      //获取mv播放链接\n      this.$router.push({\n        name: \"mvPlay\",\n        params: {\n          mvId: mvId\n        }\n      });\n    },\n    goMv: function goMv(mvId) {\n      this.$router.push({\n        name: \"mvPlay\",\n        params: {\n          mvId: mvId\n        }\n      });\n    },\n    //获取歌曲下载地址\n    getDownloadUrl: function getDownloadUrl(songId, songName) {\n      var that = this;\n      var params = {\n        id: songId\n      };\n\n      _getDownloadUrl(params).then(function (res) {\n        // console.log(\"歌曲下载地址：\", res.data.data.url);\n        download(res.data.data.url, songName);\n        that.$message({\n          type: \"success\",\n          message: \"开始下载了\"\n        });\n      });\n    },\n    //根据主题更换播放器颜色\n    randomColor: function randomColor() {\n      return \"#\".concat((Math.random() * 0xffffff << 0).toString(16));\n    }\n  }\n};","map":{"version":3,"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","names":["getDownloadUrl","getSingerDesc","getSingerSongList","getSingerMvList","playMusicUrl","getSongLyric","getSongDetails","getSingerAlbum","data","listen","singerId","singerDesc","songList","albumList","mvList","tagSwitch","detailSwitch","songSwitch","albumSwitch","mvSwitch","mounted","localStorage","methods","switchChange","tag","that","id","transMusicTime","limit","String","listenMusic","fee","index","message","type","then","setTimeout","ids","name","artist","url","cover","lrc","playMusic","goSongDetails","params","songId","goAlbumDetail","albumId","playMV","mvId","goMv","songName","download","randomColor"],"sourceRoot":"src/views/singerDetail","sources":["singerDetail.vue"],"sourcesContent":["<style lang=\"less\" scoped>\r\nh3 {\r\n  height: 30px;\r\n  line-height: 30px;\r\n  text-align: center;\r\n}\r\n.descript {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  color: aliceblue;\r\n  font-weight: bolder;\r\n  padding: 10px 20px;\r\n  border-radius: 20px 20px 0 0;\r\n  background: rgba(95, 158, 160, 0.322);\r\n  box-sizing: border-box;\r\n}\r\n.list-wrap {\r\n  margin: 10px auto;\r\n  padding: 0 20px 10px;\r\n  width: 1120px;\r\n  border-radius: 20px;\r\n  background: rgba(95, 158, 160, 0.322);\r\n  box-sizing: border-box;\r\n\r\n  .ul {\r\n    height: 630px;\r\n    border-radius: 0 0 10px 10px;\r\n    background: rgba(95, 158, 160, 0.322);\r\n    overflow-x: hidden;\r\n\r\n    &::-webkit-scrollbar {\r\n      display: none;\r\n    }\r\n    .playListDetailes {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      margin: 0 auto 10px;\r\n      padding: 10px;\r\n      width: 96%;\r\n      height: 170px;\r\n      // border: 1px solid rgb(97, 226, 183);\r\n      border-radius: 10px;\r\n      background: rgba(221, 239, 243, 0.11);\r\n      box-sizing: border-box;\r\n\r\n      .playListImg {\r\n        display: inline-block;\r\n        // width: 180px;\r\n        // height: 180px;\r\n        border-radius: 10px;\r\n\r\n        img {\r\n          width: 150px;\r\n          height: 150px;\r\n          border-radius: 10px;\r\n          transition: 0.2s;\r\n\r\n          &:hover {\r\n            transform: scale(1.03);\r\n          }\r\n        }\r\n      }\r\n\r\n      .detailsRight {\r\n        position: relative;\r\n        width: 820px;\r\n        height: 150px;\r\n        // background: rgb(181, 209, 152);\r\n\r\n        .option {\r\n          position: absolute;\r\n          bottom: 0;\r\n\r\n          .flexBetween {\r\n            .inline-block {\r\n              display: inline-block;\r\n              margin-right: 40px;\r\n              transition: 0.2s;\r\n              .musicSize {\r\n                color: rgb(193, 243, 226);\r\n                transition: 0.2s;\r\n                &:hover {\r\n                  color: rgb(109, 247, 201);\r\n                }\r\n              }\r\n\r\n              &:hover {\r\n                cursor: pointer;\r\n                // color: rgb(246, 255, 119);\r\n              }\r\n            }\r\n          }\r\n        }\r\n        .songTns {\r\n          width: 100%;\r\n          font-size: 14px;\r\n          overflow-x: hidden;\r\n\r\n          &::-webkit-scrollbar {\r\n            display: none;\r\n          }\r\n        }\r\n        .aliasClass {\r\n          position: absolute;\r\n          top: 69px;\r\n        }\r\n        .playListNickName,\r\n        .playListNickName2 {\r\n        }\r\n        .playListNickName {\r\n          display: inline-block;\r\n          margin-right: 20px;\r\n        }\r\n\r\n        .musicSize {\r\n          color: rgb(170, 240, 240);\r\n        }\r\n      }\r\n    }\r\n\r\n    .music-list {\r\n      display: flex;\r\n      padding: 10px 10px;\r\n      width: 1080px;\r\n      overflow: hidden;\r\n      color: rgba(255, 255, 255, 1);\r\n      font-weight: bolder;\r\n      -o-text-overflow: ellipsis;\r\n      text-overflow: ellipsis;\r\n      // background: rgba(95, 158, 160, 0.322);\r\n      transition: 0.2s;\r\n\r\n      .music-list-span {\r\n        display: inline-block;\r\n        width: 270px;\r\n        text-align: center;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n        white-space: nowrap;\r\n      }\r\n      .option {\r\n        display: inline-block;\r\n        width: 250px;\r\n        text-align: center;\r\n\r\n        span {\r\n          display: inline-block;\r\n          width: 30px;\r\n          &:hover {\r\n            cursor: pointer;\r\n          }\r\n        }\r\n      }\r\n\r\n      &:hover {\r\n        background: rgba(76, 152, 155, 0.527);\r\n      }\r\n    }\r\n  }\r\n  #albumList {\r\n    .liWrap {\r\n      display: flex;\r\n      justify-content: space-around;\r\n      margin: 0 auto 10px;\r\n      padding: 0 10px;\r\n      width: 95%;\r\n      height: 60px;\r\n      border-radius: 12px;\r\n      background-color: rgba(129, 235, 199, 0.068);\r\n      box-sizing: border-box;\r\n      transition: 0.2s;\r\n      &:hover {\r\n        transform: scale(1.01);\r\n      }\r\n      .liWrap-block1 {\r\n        width: 60px;\r\n        height: 60px;\r\n        border-radius: 10px;\r\n        background-color: rgba(178, 244, 151, 1);\r\n        transition: 0.2s;\r\n        img {\r\n          width: 100%;\r\n          height: 100%;\r\n          border-radius: 10px;\r\n        }\r\n        &:hover {\r\n          transform: scale(1.05);\r\n          cursor: pointer;\r\n        }\r\n      }\r\n      .liWrap-block2 {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        padding: 10px;\r\n        width: 920px;\r\n        height: 60px;\r\n        font-size: 15px;\r\n        border-radius: 10px;\r\n        line-height: 40px;\r\n        box-sizing: border-box;\r\n        // background-color: rgba(226, 214, 156, 0.075);\r\n        transition: 0.2s;\r\n\r\n        span {\r\n          &:hover {\r\n            color: rgba(109, 255, 255, 0.753);\r\n          }\r\n        }\r\n        .div1 {\r\n          display: inline-block;\r\n          width: 520px;\r\n          text-overflow: ellipsis;\r\n          overflow: hidden;\r\n          white-space: nowrap;\r\n          .albumName {\r\n            display: inline-block;\r\n            max-width: 500px;\r\n            text-overflow: ellipsis;\r\n            overflow: hidden;\r\n            white-space: nowrap;\r\n            color: rgb(196, 255, 250);\r\n            transition: 0.2s;\r\n            span {\r\n              &:hover {\r\n                color: rgba(97, 252, 252, 0.979);\r\n              }\r\n            }\r\n            &:hover {\r\n              color: rgba(97, 252, 252, 0.979);\r\n            }\r\n          }\r\n          &:hover {\r\n            color: rgba(97, 252, 252, 0.979);\r\n          }\r\n        }\r\n        .divOther {\r\n          display: inline-block;\r\n          width: 200px;\r\n          overflow: hidden;\r\n          text-overflow: ellipsis;\r\n          white-space: nowrap;\r\n          // text-align: left;\r\n          margin-right: 5px;\r\n\r\n          span {\r\n            color: rgb(196, 255, 250);\r\n            transition: 0.2s;\r\n            &:hover {\r\n              color: rgba(97, 252, 252, 0.979);\r\n            }\r\n          }\r\n        }\r\n        &:hover {\r\n          // color: rgba(97, 252, 252, 0.979);\r\n          transform: scale(1.01);\r\n          cursor: pointer;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  #singerMvs {\r\n    margin: 0 auto;\r\n    padding: 0px 10px 20px;\r\n    width: 96%;\r\n    height: 420px;\r\n    border-radius: 10px;\r\n    background: rgba(219, 255, 242, 0.151);\r\n    box-sizing: border-box;\r\n    overflow-x: hidden;\r\n    &::-webkit-scrollbar {\r\n      display: none;\r\n    }\r\n    .videoPlaywrap {\r\n      display: flex;\r\n      margin: 0 auto;\r\n\r\n      justify-content: space-evenly;\r\n      flex-wrap: wrap; //根据宽度限制一行的盒子个数\r\n      margin: 10px 0;\r\n      width: 98%;\r\n      background: transparent;\r\n      // overflow-x: hidden;\r\n\r\n      .videoPlayList {\r\n        margin-bottom: 10px;\r\n        width: 220px;\r\n        height: 180px;\r\n        border-radius: 10px;\r\n        box-sizing: border-box;\r\n\r\n        .videoImage {\r\n          position: relative;\r\n          margin-bottom: 10px;\r\n          width: 220px;\r\n          height: 132px;\r\n          border-radius: 10px;\r\n          overflow: hidden;\r\n          transition: 0.2s;\r\n\r\n          &:hover {\r\n            transform: scale(1.05);\r\n            cursor: pointer;\r\n          }\r\n          .videoImg {\r\n            position: absolute;\r\n            width: 100%;\r\n            height: 100%;\r\n          }\r\n\r\n          .videoPlayTime {\r\n            position: absolute;\r\n            z-index: 99;\r\n            right: 10px;\r\n            background: transparent;\r\n          }\r\n        }\r\n\r\n        p {\r\n          font-size: 15px;\r\n          padding: 0 10px;\r\n          // width: 100%;\r\n          transition: 0.2s;\r\n          overflow: hidden; /*必须结合的属性,当内容溢出元素框时发生的事情*/\r\n          text-overflow: ellipsis; /*可以用来多行文本的情况下，用省略号“…”隐藏超出范围的文本 。*/\r\n          display: -webkit-box; /*必须结合的属性 ，将对象作为弹性伸缩盒子模型显示 。*/\r\n          -webkit-line-clamp: 2; /*用来限制在一个块元素显示的文本的行数。*/\r\n          -webkit-box-orient: vertical; /*必须结合的属性 ，设置或检索伸缩盒对象的子元素的排列方式 。*/\r\n          span {\r\n            &:hover {\r\n              color: rgb(145, 245, 228);\r\n              cursor: pointer;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n.pagination {\r\n  text-align: center;\r\n  background: none !important;\r\n}\r\n/deep/ .el-pager {\r\n  background: none !important;\r\n}\r\n/deep/ .number,\r\n/deep/ .btn-prev,\r\n/deep/ .btn-quicknext,\r\n/deep/ .btn-next,\r\n/deep/ .el-input__inner,\r\n/deep/ .more {\r\n  color: #f2fff7 !important;\r\n  background: transparent !important;\r\n}\r\n/deep/ .number:hover,\r\n/deep/ .btn-prev:hover,\r\n/deep/ .btn-quicknext:hover,\r\n/deep/ .btn-next:hover,\r\n/deep/ .el-input__inner:hover,\r\n/deep/ .more:hover {\r\n  color: #f7a588 !important;\r\n}\r\n/deep/ .active {\r\n  color: #f7a588 !important;\r\n}\r\n/deep/ .el-input__inner {\r\n  border: none;\r\n}\r\n/deep/ .el-pagination__jump {\r\n  color: #f7dd88 !important;\r\n}\r\n.iconhover {\r\n  transition: 0.2s;\r\n  &:hover {\r\n    color: rgb(247, 243, 45);\r\n  }\r\n}\r\n</style>\r\n\r\n<template>\r\n  <div class=\"list-wrap\">\r\n    <h3>歌手详情</h3>\r\n    <div class=\"descript\"></div>\r\n    <div>\r\n      <div class=\"ul\">\r\n        <div class=\"playListDetailes\">\r\n          <div class=\"playListImg\">\r\n            <img :src=\"singerDesc.img1v1Url\"\r\n                 alt=\"\" />\r\n          </div>\r\n          <div class=\"detailsRight\">\r\n            <h3 style=\"margin-left: 0px; text-align: left; font-size: 20px\">\r\n              {{ singerDesc.name }}\r\n            </h3>\r\n            <div style=\"font-size: 14px\">\r\n              <div class=\"aliasClass\">\r\n                <span class=\"playListNickName\"\r\n                      v-if=\"singerDesc.alias[0]\">{{\r\n                  singerDesc.alias[0]\r\n                }}</span>\r\n                <span class=\"playListNickName\"\r\n                      v-if=\"singerDesc.alias[1]\">-</span><span class=\"playListNickName2\">{{ singerDesc.alias[1] }}</span><span><br />\r\n                  <span style=\"color: antiquewhite\"></span></span>\r\n              </div>\r\n\r\n              <div class=\"option\">\r\n                <div class=\"flexBetween\">\r\n                  <span class=\"inline-block\"\r\n                        @click=\"getSingerSongList('songSwitch')\">歌曲：<span class=\"musicSize\">{{\r\n                      singerDesc.musicSize\r\n                    }}</span></span>\r\n                  <span class=\"inline-block\"\r\n                        @click=\"getSingerAlbum('albumSwitch')\">专辑：<span class=\"musicSize\">{{\r\n                      singerDesc.albumSize\r\n                    }}</span>\r\n                  </span>\r\n                  <span class=\"inline-block\"\r\n                        @click=\"getSingerMvList('mvSwitch')\">MV：<span class=\"musicSize\">{{ singerDesc.mvSize }}</span>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"singerDetail\"\r\n             v-if=\"tagSwitch.detailSwitch\">\r\n          <h3 style=\"font-size: 15px\">简介：</h3>\r\n          <p>\r\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{{ singerDesc.briefDesc }}\r\n          </p>\r\n        </div>\r\n        <div id=\"singleSongs\"\r\n             v-if=\"tagSwitch.songSwitch\">\r\n          <h3>\r\n            歌曲：{{ songList.length }}&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-size：10px;\">(受接口限制-这里最多获取50首歌手热门歌曲-建议直接搜)</span>\r\n          </h3>\r\n          <div class=\"SingsList\"\r\n               v-for=\"(item, index) in songList\"\r\n               :key=\"index\">\r\n            <span class=\"song-list\"\r\n                  style=\"width: 20px\">{{ index + 1 }}.</span>\r\n            <div @dblclick=\"goSongDetails(item.id)\">\r\n              <span class=\"song-list\"\r\n                    style=\"width: 350px\">\r\n                {{ item.name }}\r\n              </span>\r\n              <span class=\"song-list\"\r\n                    style=\"width: 250px; text-align: center\">\r\n                {{ item.ar[0].name }}\r\n              </span>\r\n              <span class=\"song-list\"\r\n                    style=\"width: 230px\">\r\n                {{ item.dt }}\r\n              </span>\r\n              <span class=\"song-list\"\r\n                    style=\"width: 150px\"> </span>\r\n            </div>\r\n            <span class=\"song-list song-list-option\">\r\n              <span @click.stop=\"listenMusic(item.id, item.fee, index)\"><i class=\"el-icon-headset iconhover\"></i></span>\r\n              <!-- 添加到播放列表 -->\r\n              <span v-if=\"item.fee == 0 || item.fee == 8\"\r\n                    @click.stop=\"playMusic(item.id, item.fee, index)\"><i class=\"el-icon-folder-add iconhover\"></i>\r\n              </span>\r\n              <span v-if=\"Boolean(item.mv)\"\r\n                    @click.stop=\"playMV(item.mv)\"><i class=\"el-icon-video-camera iconhover\"></i></span>\r\n              <span v-if=\"item.fee == 0\"\r\n                    @click.stop=\"getDownloadUrl(item.id, item.name)\"><i class=\"el-icon-download iconhover\"></i></span>\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div id=\"albumList\"\r\n             v-if=\"tagSwitch.albumSwitch\">\r\n          <li class=\"liWrap\"\r\n              v-for=\"(item, index) in albumList\"\r\n              :key=\"index\"\r\n              @click.stop=\"goAlbumDetail(item.id)\">\r\n            <div class=\"liWrap-block1\">\r\n              <img :src=\"item.blurPicUrl\"\r\n                   alt=\"\" />\r\n            </div>\r\n            <div class=\"liWrap-block2\">\r\n              <div class=\"div1\">\r\n                <span class=\"albumName\">{{ item.name }}\r\n                  <span v-if=\"item.alias[0]\"\r\n                        class=\"albumName2\">{{\r\n                    item.alias[0]\r\n                  }}</span></span>\r\n              </div>\r\n              <div>\r\n                <div class=\"divOther\">\r\n                  <!-- 作者：<span>{{ item.artist.name }}</span> -->\r\n                </div>\r\n                <span class=\"inline-block\"\r\n                      style=\"display: inline-block; width: 50px\"></span>\r\n                <div class=\"divOther\"\r\n                     style=\"width: 100px\">\r\n                  歌曲：<span>{{ item.size }}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        </div>\r\n        <div id=\"singerMvs\"\r\n             v-if=\"tagSwitch.mvSwitch\">\r\n          <h3 style=\"margin: 0 auto\">\r\n            MV：{{ mvList.length }}&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-size：10px;\">(受接口限制-这里最多获取10个-建议直接搜)</span>\r\n          </h3>\r\n\r\n          <ul class=\"videoPlaywrap\">\r\n            <li class=\"videoPlayList\"\r\n                v-for=\"(item, index) in mvList\"\r\n                :key=\"index\">\r\n              <div class=\"videoImage\">\r\n                <img class=\"videoImg\"\r\n                     style=\"\r\n                    position: absolute;\r\n                    width: 240px;\r\n                    height: 155px;\r\n                    border-radius: 10px;\r\n                  \"\r\n                     :src=\"item.imgurl16v9\"\r\n                     alt=\"\"\r\n                     title=\"\"\r\n                     @click=\"goMv(item.id)\" />\r\n                <span class=\"videoPlayTime\"><i class=\"el-icon-video-play\"\r\n                     style=\"margin-right: 1px\"></i>{{ item.playCount }}</span>\r\n                <span class=\"videoPlayTime\"\r\n                      style=\"bottom: 0\">{{\r\n                  item.duration\r\n                }}</span>\r\n              </div>\r\n\r\n              <p class=\"List-title\"\r\n                 style=\"font-size: 10px\">\r\n                <span style=\"\r\n                    display: inline-block;\r\n                    width: 100%;\r\n                    overflow: hidden;\r\n                    white-space: nowrap;\r\n                    text-overflow: ellipsis;\r\n                  \"><span v-if=\"!item.type\"\r\n                        style=\"color: red\">MV&nbsp;</span>{{ item.name }}</span><br />\r\n                <span style=\"color: rgb(199, 199, 199)\"><span>by&nbsp;</span>\r\n                  <span>{{ item.artistName }}</span></span>\r\n              </p>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div v-show=\"false\">\r\n      <aplayer :autoplay=\"true\"\r\n               :fixed=\"true\"\r\n               :audio=\"listen\"\r\n               :liric-type=\"1\"></aplayer>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  getDownloadUrl,\r\n  getSingerDesc,\r\n  getSingerSongList,\r\n  getSingerMvList,\r\n  playMusicUrl,\r\n  getSongLyric,\r\n  getSongDetails,\r\n  getSingerAlbum,\r\n} from \"@/api/api\";\r\nimport { download } from \"@/api/download\";\r\nimport { transMusicTime } from '@api/commonApi'\r\nexport default {\r\n  // props: ['singerId'],\r\n  data () {\r\n    return {\r\n      //试听音乐\r\n      listen: [],\r\n      //歌手信息\r\n      singerId: '',\r\n      singerDesc: {},\r\n      songList: [],\r\n      albumList: [],\r\n      mvList: [],\r\n      tagSwitch: {\r\n        detailSwitch: true,\r\n        songSwitch: false,\r\n        albumSwitch: false,\r\n        mvSwitch: false,\r\n      },\r\n    };\r\n  },\r\n  mounted () {\r\n    ////缓存id,解决params数据在刷新页面后丢失，导致无法获取到歌手id\r\n    if (this.$route.params.singerId) { localStorage.setItem('singerId', this.$route.params.singerId) }\r\n    //判断是否使用缓存\r\n    this.$route.params.singerId ? this.singerId = this.$route.params.singerId : this.singerId = localStorage.getItem('singerId')\r\n    this.getSingerDesc();\r\n  },\r\n  methods: {\r\n    //显示歌手单曲、专辑、mv列表开关\r\n    switchChange (tag) {\r\n      var that = this;\r\n      for (let key in that.tagSwitch) {\r\n        if (key != tag) {\r\n          that.tagSwitch[key] = false;\r\n        }\r\n      }\r\n      that.tagSwitch[tag] = true;\r\n    },\r\n\r\n    //获取歌手单曲列表(只有热门50首)\r\n    getSingerSongList (tag) {\r\n      var that = this;\r\n      that.detailShow = false;\r\n      let params = {\r\n        id: that.singerId,\r\n      };\r\n      getSingerSongList(params).then((res) => {\r\n        // console.log(\"歌手单曲列表：\", res.data.hotSongs);\r\n        that.songList = res.data.hotSongs;\r\n        //给每首曲子添加防抖\r\n        for (let item of that.songList) {\r\n          that.$set(item, \"timer\", true);\r\n        }\r\n        //转换时间\r\n        let dt = \"dt\";\r\n        transMusicTime(that.songList, dt);\r\n      });\r\n      that.switchChange(tag);\r\n    },\r\n    //获取歌手专辑列表\r\n    getSingerAlbum (tag) {\r\n      var that = this;\r\n      that.detailShow = false;\r\n      let params = {\r\n        id: that.singerId,\r\n        limit: 999,\r\n      };\r\n      getSingerAlbum(params).then((res) => {\r\n        // console.log(\"歌手专辑列表\", res.data.hotAlbums);\r\n        that.albumList = res.data.hotAlbums;\r\n      });\r\n\r\n      that.switchChange(tag);\r\n    },\r\n    //获取歌手mv\r\n    getSingerMvList (tag) {\r\n      var that = this;\r\n      let params = {\r\n        id: that.singerId,\r\n      };\r\n      getSingerMvList(params).then((res) => {\r\n        // console.log(\"获取到的歌手MV：\", res.data.mvs);\r\n        that.mvList = res.data.mvs;\r\n        let dt = \"duration\"; //将时长字段赋值，方便传参\r\n        transMusicTime(that.mvList, dt);\r\n        for (let i = 0; i < that.mvList.length; i++) {\r\n          if (\r\n            String(that.mvList[i].playCount).length > 5 &&\r\n            String(that.mvList[i].playCount).length < 9\r\n          ) {\r\n            that.mvList[i].playCount =\r\n              String(that.mvList[i].playCount).substr(\r\n                0,\r\n                String(that.mvList[i].playCount).length - 4\r\n              ) + \"万\";\r\n          } else if (String(that.mvList[i].playCount).length == 5) {\r\n            that.mvList[i].playCount =\r\n              String(that.mvList[i].playCount).substr(0, 1) +\r\n              \".\" +\r\n              String(that.mvList[i].playCount).substr(1, 2) +\r\n              \"万\";\r\n          } else if (String(that.mvList[i].playCount).length == 9) {\r\n            that.mvList[i].playCount =\r\n              String(that.mvList[i].playCount).substr(0, 1) +\r\n              \".\" +\r\n              String(that.mvList[i].playCount).substr(1, 2) +\r\n              \"亿\";\r\n          } else if (String(that.mvList[i].playCount).length > 9) {\r\n            that.mvList[i].playCount =\r\n              String(that.mvList[i].playCount).substr(\r\n                0,\r\n                String(that.mvList[i].playCount).length - 8\r\n              ) + \"亿\";\r\n          }\r\n        }\r\n      });\r\n      that.switchChange(tag);\r\n    },\r\n    //获取歌手描述\r\n    getSingerDesc () {\r\n      var that = this;\r\n      let params = {\r\n        id: that.singerId,\r\n      };\r\n      getSingerDesc(params).then((res) => {\r\n        // console.log(\"歌手描述\", res.data);\r\n        that.singerDesc = res.data.artist;\r\n      });\r\n    },\r\n\r\n    listenMusic (id, fee, index) {\r\n      //获取播放音乐链接\r\n      var that = this;\r\n      if (that.songList[index].timer) {\r\n        if (fee == 1) {\r\n          that.$message({\r\n            message: \"VIP歌曲 - 只能试听30s\",\r\n            type: \"warning\",\r\n          });\r\n        }\r\n        playMusicUrl({\r\n          id: id,\r\n        }).then((res) => {\r\n          // console.log(\"播放音乐链接\", res.data.data[0].url);\r\n          if (res.data.data[0].url) {\r\n            that.songUrlAdd = res.data.data[0].url;\r\n          } else {\r\n            that.$message({\r\n              message: \"不好意思这首歌暂无版权\",\r\n              type: \"error\",\r\n            });\r\n            that.songList[index].timer = false;\r\n            setTimeout(() => {\r\n              that.songList[index].timer = true;\r\n            }, 3000);\r\n            return;\r\n          }\r\n        }),\r\n          // 获取歌词\r\n          getSongLyric({\r\n            id: id,\r\n          }).then((res) => {\r\n            that.songlrc = res.data.lrc.lyric;\r\n          }),\r\n          // 获取歌曲信息\r\n          getSongDetails({\r\n            ids: id,\r\n          }).then((res) => {\r\n            if (that.songUrlAdd != null) {\r\n              that.listen = [];\r\n              that.listen.push({\r\n                name: res.data.songs[0].name, //歌曲名\r\n                artist: res.data.songs[0].ar[0].name, //作者\r\n                url: that.songUrlAdd,\r\n                cover: res.data.songs[0].al.picUrl,\r\n                lrc: that.songlrc,\r\n              });\r\n              // console.log(that.listen);\r\n              that.songUrlAdd = null;\r\n              that.songlrc = \"\";\r\n            }\r\n          });\r\n      }\r\n    },\r\n    //将歌曲添加到播放列表或者播放\r\n    playMusic (id, fee, index) {\r\n      //获取播放音乐链接\r\n      var that = this;\r\n      if (that.songList[index].timer) {\r\n        if (fee == 1) {\r\n          that.$message({\r\n            message: \"VIP歌曲 - 只能试听30s\",\r\n            type: \"warning\",\r\n          });\r\n        }\r\n        playMusicUrl({\r\n          id: id,\r\n        }).then((res) => {\r\n          // console.log(\"播放音乐链接\", res.data.data[0].url);\r\n          if (res.data.data[0].url) {\r\n            that.songUrlAdd = res.data.data[0].url;\r\n          } else {\r\n            that.$message({\r\n              message: \"不好意思这首歌暂无版权\",\r\n              type: \"error\",\r\n            });\r\n            that.songList[index].timer = false;\r\n            setTimeout(() => {\r\n              that.songList[index].timer = true;\r\n            }, 3000);\r\n            return;\r\n          }\r\n        }),\r\n          // 获取歌词\r\n          getSongLyric({\r\n            id: id,\r\n          }).then((res) => {\r\n            that.songlrc = res.data.lrc.lyric;\r\n          }),\r\n          // 获取歌曲信息\r\n          getSongDetails({\r\n            ids: id,\r\n          }).then((res) => {\r\n            // console.log(\"获取歌曲信息，添加到播放器：\", res.data.songs);\r\n            if (that.songUrlAdd != null) {\r\n              that.$store.commit(\"addSONG\", {\r\n                name: res.data.songs[0].name, //歌曲名\r\n                artist: res.data.songs[0].ar[0].name, //作者\r\n                url: that.songUrlAdd,\r\n                cover: res.data.songs[0].al.picUrl,\r\n                lrc: that.songlrc,\r\n                // theme: that.randomColor(),\r\n              });\r\n              // console.log(\r\n              //   that.$store.state.audio,\r\n              //   \"添加歌曲后的歌曲播放列表-----\"\r\n              // );\r\n              that.songUrlAdd = null;\r\n              that.songlrc = \"\";\r\n              that.songList[index].timer = false;\r\n              setTimeout(() => {\r\n                that.songList[index].timer = true;\r\n              }, 3000);\r\n            }\r\n          });\r\n      }\r\n    },\r\n    //跳转到歌曲详情\r\n    goSongDetails (ids) {\r\n      this.$router.push({\r\n        name: \"songDetails\",\r\n        params: {\r\n          songId: ids,\r\n        },\r\n      });\r\n    },\r\n    //跳转到专辑详情\r\n    goAlbumDetail (albumId) {\r\n      this.$router.push({\r\n        name: \"albumDetail\",\r\n        params: {\r\n          id: albumId,\r\n        },\r\n      });\r\n    },\r\n    //跳转到播放MV页面\r\n    playMV (mvId) {\r\n      //获取mv播放链接\r\n      this.$router.push({\r\n        name: \"mvPlay\",\r\n        params: { mvId: mvId },\r\n      });\r\n    },\r\n    goMv (mvId) {\r\n      this.$router.push({\r\n        name: \"mvPlay\",\r\n        params: {\r\n          mvId: mvId,\r\n        },\r\n      });\r\n    },\r\n    //获取歌曲下载地址\r\n    getDownloadUrl (songId, songName) {\r\n      var that = this;\r\n      let params = {\r\n        id: songId,\r\n      };\r\n      getDownloadUrl(params).then((res) => {\r\n        // console.log(\"歌曲下载地址：\", res.data.data.url);\r\n        download(res.data.data.url, songName);\r\n        that.$message({\r\n          type: \"success\",\r\n          message: \"开始下载了\",\r\n        });\r\n      });\r\n    },\r\n    //根据主题更换播放器颜色\r\n    randomColor () {\r\n      return `#${((Math.random() * 0xffffff) << 0).toString(16)}`;\r\n    },\r\n  },\r\n};\r\n</script>"]},"metadata":{},"sourceType":"module"}