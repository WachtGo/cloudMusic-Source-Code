{"ast":null,"code":"import _createForOfIteratorHelper from \"C:/Users/Wacht/Desktop/git/cloudMusic-Source-Code/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport createPersistedState from \"vuex-persistedstate\";\nexport default {\n  namespaced: true,\n  state: {\n    // 歌曲生成周期\n    plugins: [createPersistedState({\n      key: 'aplayer',\n      storage: window.localStorage,\n      whiteList: ['audio', 'audition', 'musicAudioStatu', 'alplayShow']\n    })],\n    audio: [],\n    //播放列表音乐\n    audition: [{\n      name: '卡农（经典钢琴版）',\n      //歌曲名\n      artist: 'dylanf',\n      //作者\n      // url: songUrlAdd,\n      url: \"https://music.163.com/song/media/outer/url?id=478507889.mp3\",\n      cover: 'http://p2.music.126.net/fL7FAeRby1s7JreBqoOKjg==/109951165175371079.jpg',\n      // lrc: songlrc,\n      id: 478507889,\n      timer: true //试听中添加，防止用户连点消耗性能，在添加播放列表方法中可使用到\n\n    }],\n    //试听歌曲\n    musicAudioStatu: 1,\n    //控制audio,audition两个播放器显示\n    currentPlayMusic: {},\n    //当前正在播放的音乐\n    alplayShow: true\n  },\n  actions: {},\n  mutations: {\n    //播放器添加歌曲\n    addSONG: function addSONG(state, song) {\n      var _iterator = _createForOfIteratorHelper(state.audio),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var item = _step.value;\n\n          if (item.id === song.id) {\n            this._vm.$message(\"播放列表已存在这首歌\");\n\n            return;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      state.audio.push(song); //将歌曲添加\n\n      this._vm.$message({\n        type: \"success\",\n        message: \"歌曲已添加到播放列表\"\n      });\n    },\n    //删除歌曲\n    deleteMUSIC: function deleteMUSIC(state, index) {\n      state.audio.splice(index, 1);\n\n      this._vm.$message({\n        type: \"success\",\n        message: \"歌曲已移出播放列表\"\n      });\n    },\n    //添加试听\n    addAUDITION: function addAUDITION(state, song) {\n      var _iterator2 = _createForOfIteratorHelper(state.audition),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var item = _step2.value;\n\n          if (item.id === song.id) {\n            this._vm.$message(\"正在试听这首歌\");\n\n            return;\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      state.musicAudioStatu = 1;\n      state.audition.splice(0, 1);\n      state.audition[0] = song; //将歌曲添加\n\n      this._vm.$message({\n        type: \"success\",\n        message: \"歌曲已添加到试听\"\n      });\n    },\n    // 删除试听\n    deleteAUDITION: function deleteAUDITION(state, index) {\n      state.audition.splice(index, 1);\n\n      this._vm.$message({\n        type: \"success\",\n        message: \"歌曲已移出试听列表\"\n      });\n    },\n    //更换播放器\n    changeAPLAYER: function changeAPLAYER(state, statu) {\n      statu === 1 ? state.musicAudioStatu = 1 : state.musicAudioStatu = 0;\n    },\n    //更换当前正在播放的歌曲\n    changeCurrentPlayMusic: function changeCurrentPlayMusic(state, currentMusic) {\n      state.currentPlayMusic = currentMusic; // console.log('store/alayer.js:',state.currentPlayMusic)\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module"}