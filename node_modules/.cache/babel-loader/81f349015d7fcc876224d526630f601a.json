{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getMusicInfo } from \"@/api/api\";\nimport { transMusicTime, transPlayCount } from \"@/utils/commonApi\";\nimport songlist from \"@/components/songlist.vue\";\nexport default {\n  components: {\n    songlist\n  },\n\n  data() {\n    return {\n      //试听音乐\n      listen: [],\n      //单曲，专辑，歌手，歌单开关\n      tagSwitch: {},\n      //MV列表\n      videoList: [],\n      //歌单列表\n      playListTable: [],\n      // 歌曲列表\n      musicList: [],\n      // 专辑列表\n      albumList: [],\n      //歌手列表\n      artists: [],\n      //MV列表\n      mvList: [],\n      //音乐下载地址\n      downLoadUrl: \"\",\n      //标签切换\n      activeName: \"first\",\n      //搜索内容总数（歌曲，歌单，mv,等）\n      count: 0,\n      //初始页\n      currentPage: 1\n    };\n  },\n\n  created() {\n    // console.log(this);\n    var that = this;\n    that.tagSwitch = that.$store.state.musicPlayList.tagSwitch;\n    that.search();\n  },\n\n  methods: {\n    //标签切换\n    tagSelect(tag) {\n      var that = this;\n      that.$store.commit(\"musicPlayList/tagSelect\", tag);\n      that.$nextTick(() => {\n        that.search();\n      });\n    },\n\n    //分页\n    handleCurrentChange: function (currentPage) {\n      // console.log(`当前页: ${currentPage}`);\n      this.currentPage = currentPage;\n      var that = this;\n\n      if (that.tagSwitch.songSwitch) {\n        that.getSingleMuscic();\n      } else if (that.tagSwitch.playListSwitch) {\n        that.getMusicList();\n      } else if (that.tagSwitch.videoSwitch) {\n        that.getVideoList();\n      } else if (that.tagSwitch.mvSwitch) {\n        that.getMVList();\n      } else if (that.tagSwitch.singerSwitch) {\n        that.getSingerList();\n      } else if (that.tagSwitch.albumSwitch) {\n        that.getSingerList();\n      }\n    },\n\n    search() {\n      var that = this;\n\n      if (that.tagSwitch.songSwitch) {\n        that.getSingleMuscic();\n      } else if (that.tagSwitch.playListSwitch) {\n        that.getMusicList();\n      } else if (that.tagSwitch.videoSwitch) {\n        that.getVideoList();\n      } else if (that.tagSwitch.mvSwitch) {\n        that.getMVList();\n      } else if (that.tagSwitch.singerSwitch) {\n        that.getSingerList();\n      } else if (that.tagSwitch.albumSwitch) {\n        that.getAlbumList();\n      }\n    },\n\n    //获取专辑详情\n    goAlbumDetail(id) {\n      this.$router.push({\n        name: \"albumDetail\",\n        params: {\n          albumId: id\n        }\n      });\n    },\n\n    //进入歌手详情页面\n    goSingerDetail(singerDetail) {\n      // console.log(item)\n      let params = {\n        id: singerDetail.id,\n        img1v1Url: singerDetail.img1v1Url,\n        name: singerDetail.name,\n        alias: singerDetail.alias,\n        musicSize: singerDetail.musicSize,\n        albumSize: singerDetail.albumSize,\n        mvSize: singerDetail.mvSize,\n        briefDesc: \"\"\n      };\n      this.$router.push({\n        name: \"singerDetail\",\n        params: {\n          artist: params\n        }\n      });\n    },\n\n    //进入歌单详情\n    goSongList(playListDetail) {\n      // console.log(playListDetail);\n      let params = {\n        id: playListDetail.id,\n        name: playListDetail.name,\n        coverImgUrl: playListDetail.picUrl,\n        trackCount: playListDetail.trackCount,\n        creator: {\n          avatarUrl: \"\",\n          nickname: playListDetail.creator.nickname,\n          signature: \"\"\n        },\n        tags: [],\n        description: \"\"\n      }; //传入歌单id进入歌单详情\n\n      this.$router.push({\n        name: \"playListDetails\",\n        params: {\n          playListDetail: params\n        }\n      });\n    },\n\n    //通过搜索关键词获取单曲（歌曲）\n    getSingleMuscic() {\n      var that = this;\n\n      if (that.$route.query.reload) {// console.log(\"this.$route:---\", that.$route);\n      } //获取歌曲列表\n\n\n      let params = {\n        keywords: that.$route.query.keywords,\n        limit: 30,\n        offset: (that.currentPage - 1) * 30,\n        type: 1 //代表获取单曲\n\n      };\n      that.musicList = [];\n      getMusicInfo(params).then(async res => {\n        that.musicList = await res.data.result.songs; // console.log(that.musicList)\n\n        that.count = await res.data.result.songCount;\n        transMusicTime(that.musicList, \"dt\"); // console.log(\"音乐列表：\", res.data.result);\n        //给每个列表添加一个防抖\n\n        for (let item of that.musicList) {\n          that.$set(item, \"timer\", true);\n        }\n      });\n    },\n\n    // 通过搜索关键词获取专辑\n    getAlbumList() {\n      var that = this; //获取歌曲列表\n\n      let params = {\n        keywords: that.$route.query.keywords,\n        limit: 30,\n        offset: (that.currentPage - 1) * 30,\n        type: 10 //代表获取专辑\n\n      };\n      that.albumList = [];\n      getMusicInfo(params).then(res => {\n        that.albumList = res.data.result.albums;\n        that.count = res.data.result.albumCount; // console.log(\"专辑列表：\", res.data.result);\n      });\n    },\n\n    //通过搜索关键词获取歌手列表\n    getSingerList() {\n      var that = this;\n      let params = {\n        keywords: that.$route.query.keywords,\n        limit: 15,\n        offset: (that.currentPage - 1) * 15,\n        type: 100 //代表获取歌手\n\n      };\n      that.artists = [];\n      getMusicInfo(params).then(res => {\n        // console.log(\"获取歌手列表----\", res.data.result);\n        that.artists = res.data.result.artists;\n        that.count = res.data.result.artistCount;\n      });\n    },\n\n    //通过搜索关键词获取歌单\n    getMusicList() {\n      var that = this;\n      let params = {\n        keywords: that.$route.query.keywords,\n        limit: 15,\n        offset: (that.currentPage - 1) * 15,\n        type: 1000 //代表获取歌单\n\n      };\n      that.playListTable = [];\n      getMusicInfo(params).then(async res => {\n        // console.log('获取歌单列表----', res.data.result)\n        that.playListTable = await res.data.result.playlists;\n        that.count = await res.data.result.playlistCount;\n        transPlayCount(that.playListTable, \"playCount\");\n      });\n    },\n\n    //通过搜索关键词获取对应视频列表\n    getVideoList() {\n      var that = this;\n      let params = {\n        keywords: that.$route.query.keywords,\n        limit: 12,\n        offset: (that.currentPage - 1) * 12,\n        type: 1014 //代表获取视频\n\n      };\n      that.videoList = [];\n      getMusicInfo(params).then(async res => {\n        // console.log(\"获取视频列表----\", res.data.result);\n        that.videoList = await res.data.result.videos; // console.log(\"视频列表：\", that.videoList);\n\n        that.count = await res.data.result.videoCount; //转换歌曲时长单位为分秒\n\n        transMusicTime(that.videoList, \"durationms\"); //将播放量转换成亿万单位\n\n        transPlayCount(that.videoList, \"playTime\");\n      });\n    },\n\n    //通过搜索关键词获取对应MV列表\n    getMVList() {\n      var that = this;\n      let params = {\n        keywords: that.$route.query.keywords,\n        limit: 12,\n        offset: (that.currentPage - 1) * 12,\n        type: 1004 //代表获取MV\n\n      };\n      that.mvList = [];\n      getMusicInfo(params).then(async res => {\n        // console.log(\"获取MV列表----\", res.data.result);\n        that.mvList = await res.data.result.mvs; // console.log(\"MV列表：\", that.mvList);\n\n        that.count = await res.data.result.mvCount; //转换歌曲时间为分秒单位\n\n        transMusicTime(that.mvList, \"duration\"); // 转换播放量单位为万\n\n        transPlayCount(that.mvList, \"playCount\");\n      });\n    },\n\n    goVideo(vid, type) {\n      if (type === 0) {\n        this.$router.push({\n          name: \"mvPlay\",\n          params: {\n            mvId: vid\n          }\n        });\n      } else {\n        this.$router.push({\n          name: \"videoPlay\",\n          params: {\n            videoId: vid\n          }\n        });\n      }\n    },\n\n    randomColor() {\n      return `#${(Math.random() * 0xffffff << 0).toString(16)}`;\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["components","songlist","data","listen","tagSwitch","videoList","playListTable","musicList","albumList","artists","mvList","downLoadUrl","activeName","count","currentPage","created","that","methods","tagSelect","handleCurrentChange","search","goAlbumDetail","name","params","albumId","goSingerDetail","id","img1v1Url","alias","musicSize","albumSize","mvSize","briefDesc","artist","goSongList","coverImgUrl","trackCount","creator","avatarUrl","nickname","signature","tags","description","playListDetail","getSingleMuscic","keywords","limit","offset","type","getMusicInfo","transMusicTime","getAlbumList","getSingerList","getMusicList","transPlayCount","getVideoList","getMVList","goVideo","mvId","videoId","randomColor"],"sourceRoot":"src/views","sources":["MusicPlayList.vue"],"sourcesContent":["<template>\n  <div class=\"list-wrap\">\n    <div class=\"tagWrap\">\n      <span @click=\"tagSelect('songSwitch')\" v-if=\"!tagSwitch.songSwitch\"\n        >单曲</span\n      ><span style=\"color: rgb(80, 180, 220)\" v-if=\"tagSwitch.songSwitch\"\n        >单曲</span\n      >\n      <span @click=\"tagSelect('albumSwitch')\" v-if=\"!tagSwitch.albumSwitch\"\n        >专辑</span\n      ><span style=\"color: rgb(80, 180, 220)\" v-if=\"tagSwitch.albumSwitch\"\n        >专辑</span\n      >\n      <span @click=\"tagSelect('singerSwitch')\" v-if=\"!tagSwitch.singerSwitch\"\n        >歌手</span\n      ><span style=\"color: rgb(80, 180, 220)\" v-if=\"tagSwitch.singerSwitch\"\n        >歌手</span\n      >\n      <span\n        @click=\"tagSelect('playListSwitch')\"\n        v-if=\"!tagSwitch.playListSwitch\"\n        >歌单</span\n      ><span style=\"color: rgb(80, 180, 220)\" v-if=\"tagSwitch.playListSwitch\"\n        >歌单</span\n      ><span @click=\"tagSelect('videoSwitch')\" v-if=\"!tagSwitch.videoSwitch\"\n        >视频</span\n      ><span style=\"color: rgb(80, 180, 220)\" v-if=\"tagSwitch.videoSwitch\"\n        >视频</span\n      ><span @click=\"tagSelect('mvSwitch')\" v-if=\"!tagSwitch.mvSwitch\">MV</span\n      ><span style=\"color: rgb(80, 180, 220)\" v-if=\"tagSwitch.mvSwitch\"\n        >MV</span\n      >\n    </div>\n    <div class=\"descript\"></div>\n    <div>\n      <ul>\n        <!-- 单曲列表 -->\n        <div v-show=\"tagSwitch.songSwitch\">\n          <div class=\"loading\" v-show=\"musicList.length === 0\">\n            <i class=\"el-icon-loading\"></i>\n          </div>\n          <songlist :songlist=\"musicList\"></songlist>\n        </div>\n        <!-- 专辑列表 -->\n        <div class=\"albumListClass\" v-show=\"tagSwitch.albumSwitch\">\n          <div class=\"loading\" v-show=\"albumList.length === 0\">\n            <i class=\"el-icon-loading\"></i>\n          </div>\n          <li\n            class=\"liWrap\"\n            v-for=\"(item, index) in albumList\"\n            :key=\"index\"\n            @click.stop=\"goAlbumDetail(item.id)\"\n          >\n            <div class=\"liWrap-block1\">\n              <img :src=\"item.blurPicUrl\" alt=\"\" />\n            </div>\n            <div class=\"liWrap-block2\">\n              <div class=\"div1\">\n                <span class=\"albumName\"\n                  >{{ item.name }}\n                  <span v-if=\"item.alias[0]\" class=\"albumName2\">{{\n                    item.alias[0]\n                  }}</span></span\n                >\n              </div>\n              <div>\n                <div class=\"divOther\">\n                  作者：<span>{{ item.artist.name }}</span>\n                </div>\n                <span\n                  class=\"inline-block\"\n                  style=\"display: inline-block; width: 50px\"\n                ></span>\n                <div class=\"divOther\" style=\"width: 100px\">\n                  歌曲：<span>{{ item.size }}</span>\n                </div>\n              </div>\n            </div>\n          </li>\n        </div>\n        <!-- 歌手列表 -->\n        <div class=\"singerListClass\" v-show=\"tagSwitch.singerSwitch\">\n          <div class=\"loading\" v-show=\"artists.length === 0\">\n            <i class=\"el-icon-loading\"></i>\n          </div>\n          <li\n            class=\"liWrap\"\n            v-for=\"(item, index) in artists\"\n            :key=\"index\"\n            @click.stop=\"goSingerDetail(item)\"\n          >\n            <div class=\"liWrap-block1\">\n              <img :src=\"item.img1v1Url\" alt=\"\" />\n            </div>\n            <div class=\"liWrap-block2\">\n              <div class=\"div1\">\n                歌手：<span>{{ item.name }}</span>\n              </div>\n              <div>\n                <div class=\"divOther\">\n                  专辑：<span>{{ item.albumSize }}</span>\n                </div>\n\n                <div class=\"divOther\">\n                  MV：<span>{{ item.mvSize }}</span>\n                </div>\n              </div>\n            </div>\n          </li>\n        </div>\n        <div v-show=\"tagSwitch.albumSwitch\"></div>\n        <!-- 歌单列表 -->\n        <div class=\"playListClass\" v-show=\"tagSwitch.playListSwitch\">\n          <div class=\"loading\" v-show=\"playListTable.length === 0\">\n            <i class=\"el-icon-loading\"></i>\n          </div>\n          <div class=\"recPlay\">\n            <ul class=\"playListWrap\">\n              <li\n                class=\"playListTable\"\n                v-for=\"(item, index) in playListTable\"\n                :key=\"index\"\n              >\n                <div class=\"image\">\n                  <img\n                    :src=\"item.coverImgUrl\"\n                    alt=\"\"\n                    title=\"\"\n                    @click=\"goSongList(item)\"\n                  />\n                  <span class=\"playCount\"\n                    ><i class=\"el-icon-video-play\" style=\"margin-right: 1px\"></i\n                    >{{ item.playCount }}</span\n                  >\n                </div>\n                <p class=\"List-title\" @click=\"goSongList(item)\">\n                  <span>{{ item.name }} </span>\n                </p>\n              </li>\n            </ul>\n          </div>\n        </div>\n        <!-- 视频列表 -->\n        <div class=\"videoListClass\" v-show=\"tagSwitch.videoSwitch\">\n          <div class=\"loading\" v-show=\"videoList.length === 0\">\n            <i class=\"el-icon-loading\"></i>\n          </div>\n          <div class=\"videoPlay\">\n            <ul class=\"videoPlaywrap\">\n              <li\n                class=\"videoPlayList\"\n                v-for=\"(item, index) in videoList\"\n                :key=\"index\"\n              >\n                <div class=\"videoImage\">\n                  <img\n                    class=\"videoImg\"\n                    style=\"\n                      position: absolute;\n                      width: 240px;\n                      height: 155px;\n                      border-radius: 10px;\n                    \"\n                    :src=\"item.coverUrl\"\n                    alt=\"\"\n                    title=\"\"\n                    @click=\"goVideo(item.vid, item.type)\"\n                  />\n                  <span class=\"videoPlayTime\"\n                    ><i class=\"el-icon-video-play\" style=\"margin-right: 1px\"></i\n                    >{{ item.playTime }}</span\n                  >\n                  <span class=\"videoPlayTime\" style=\"bottom: 0\">{{\n                    item.durationms\n                  }}</span>\n                </div>\n\n                <p\n                  class=\"List-title\"\n                  style=\"font-size: 10px\"\n                  @click=\"goVideo(item.vid, item.type)\"\n                >\n                  <span\n                    style=\"\n                      display: inline-block;\n                      width: 100%;\n                      overflow: hidden;\n                      white-space: nowrap;\n                      text-overflow: ellipsis;\n                    \"\n                    ><span v-if=\"!item.type\" style=\"color: red\">MV&nbsp;</span\n                    >{{ item.title }}</span\n                  ><br />\n                  <span style=\"color: rgb(199, 199, 199)\"\n                    ><span v-if=\"item.markTypes\">by&nbsp;</span>\n                    <span>{{ item.creator[0].userName }}</span></span\n                  >\n                </p>\n              </li>\n            </ul>\n          </div>\n        </div>\n        <!-- MV列表 -->\n        <div class=\"videoListClass\" v-show=\"tagSwitch.mvSwitch\">\n          <div class=\"loading\" v-show=\"mvList.length === 0\">\n            <i class=\"el-icon-loading\"></i>\n          </div>\n          <div class=\"videoPlay\">\n            <ul class=\"videoPlaywrap\">\n              <li\n                class=\"videoPlayList\"\n                v-for=\"(item, index) in mvList\"\n                :key=\"index\"\n              >\n                <div class=\"videoImage\">\n                  <img\n                    class=\"videoImg\"\n                    style=\"\n                      position: absolute;\n                      width: 240px;\n                      height: 155px;\n                      border-radius: 10px;\n                    \"\n                    :src=\"item.cover\"\n                    alt=\"\"\n                    title=\"\"\n                    @click=\"goVideo(item.id, item.mark)\"\n                  />\n                  <span class=\"videoPlayTime\"\n                    ><i class=\"el-icon-video-play\" style=\"margin-right: 1px\"></i\n                    >{{ item.playCount }}</span\n                  >\n                  <span class=\"videoPlayTime\" style=\"bottom: 0\">{{\n                    item.duration\n                  }}</span>\n                </div>\n\n                <p\n                  class=\"List-title\"\n                  style=\"font-size: 10px\"\n                  @click=\"goVideo(item.id, item.mark)\"\n                >\n                  <span\n                    style=\"\n                      display: inline-block;\n                      width: 100%;\n                      overflow: hidden;\n                      white-space: nowrap;\n                      text-overflow: ellipsis;\n                    \"\n                    ><span v-if=\"!item.type\" style=\"color: red\">MV&nbsp;</span\n                    >{{ item.name }}</span\n                  ><br />\n                  <span style=\"color: rgb(199, 199, 199)\"\n                    ><span>by&nbsp;</span>\n                    <span>{{ item.artistName }}</span></span\n                  >\n                </p>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </ul>\n    </div>\n\n    <div class=\"pagination\">\n      <el-pagination\n        v-show=\"count != 0\"\n        @current-change=\"handleCurrentChange\"\n        :current-page.sync=\"currentPage\"\n        :page-size=\"15\"\n        layout=\"prev, pager, next, jumper\"\n        :total=\"count\"\n        :background=\"true\"\n      >\n      </el-pagination>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { getMusicInfo } from \"@/api/api\";\nimport { transMusicTime, transPlayCount } from \"@/utils/commonApi\";\nimport songlist from \"@/components/songlist.vue\";\nexport default {\n  components: {\n    songlist,\n  },\n  data() {\n    return {\n      //试听音乐\n      listen: [],\n      //单曲，专辑，歌手，歌单开关\n      tagSwitch: {},\n      //MV列表\n      videoList: [],\n      //歌单列表\n      playListTable: [],\n      // 歌曲列表\n      musicList: [],\n      // 专辑列表\n      albumList: [],\n      //歌手列表\n      artists: [],\n      //MV列表\n      mvList: [],\n      //音乐下载地址\n      downLoadUrl: \"\",\n      //标签切换\n      activeName: \"first\",\n      //搜索内容总数（歌曲，歌单，mv,等）\n      count: 0,\n      //初始页\n      currentPage: 1,\n    };\n  },\n  created() {\n    // console.log(this);\n    var that = this;\n    that.tagSwitch = that.$store.state.musicPlayList.tagSwitch;\n    that.search();\n  },\n  methods: {\n    //标签切换\n    tagSelect(tag) {\n      var that = this;\n      that.$store.commit(\"musicPlayList/tagSelect\", tag);\n      that.$nextTick(() => {\n        that.search();\n      });\n    },\n    //分页\n    handleCurrentChange: function (currentPage) {\n      // console.log(`当前页: ${currentPage}`);\n      this.currentPage = currentPage;\n      var that = this;\n      if (that.tagSwitch.songSwitch) {\n        that.getSingleMuscic();\n      } else if (that.tagSwitch.playListSwitch) {\n        that.getMusicList();\n      } else if (that.tagSwitch.videoSwitch) {\n        that.getVideoList();\n      } else if (that.tagSwitch.mvSwitch) {\n        that.getMVList();\n      } else if (that.tagSwitch.singerSwitch) {\n        that.getSingerList();\n      } else if (that.tagSwitch.albumSwitch) {\n        that.getSingerList();\n      }\n    },\n    search() {\n      var that = this;\n      if (that.tagSwitch.songSwitch) {\n        that.getSingleMuscic();\n      } else if (that.tagSwitch.playListSwitch) {\n        that.getMusicList();\n      } else if (that.tagSwitch.videoSwitch) {\n        that.getVideoList();\n      } else if (that.tagSwitch.mvSwitch) {\n        that.getMVList();\n      } else if (that.tagSwitch.singerSwitch) {\n        that.getSingerList();\n      } else if (that.tagSwitch.albumSwitch) {\n        that.getAlbumList();\n      }\n    },\n\n    //获取专辑详情\n    goAlbumDetail(id) {\n      this.$router.push({\n        name: \"albumDetail\",\n        params: {\n          albumId: id,\n        },\n      });\n    },\n    //进入歌手详情页面\n    goSingerDetail(singerDetail) {\n      // console.log(item)\n      let params = {\n        id: singerDetail.id,\n        img1v1Url: singerDetail.img1v1Url,\n        name: singerDetail.name,\n        alias: singerDetail.alias,\n        musicSize: singerDetail.musicSize,\n        albumSize: singerDetail.albumSize,\n        mvSize: singerDetail.mvSize,\n        briefDesc: \"\",\n      };\n      this.$router.push({\n        name: \"singerDetail\",\n        params: {\n          artist: params,\n        },\n      });\n    },\n    //进入歌单详情\n    goSongList(playListDetail) {\n      // console.log(playListDetail);\n      let params = {\n        id: playListDetail.id,\n        name: playListDetail.name,\n        coverImgUrl: playListDetail.picUrl,\n        trackCount: playListDetail.trackCount,\n        creator: {\n          avatarUrl: \"\",\n          nickname: playListDetail.creator.nickname,\n          signature: \"\",\n        },\n        tags: [],\n        description: \"\",\n      };\n      //传入歌单id进入歌单详情\n      this.$router.push({\n        name: \"playListDetails\",\n        params: { playListDetail: params },\n      });\n    },\n\n    //通过搜索关键词获取单曲（歌曲）\n    getSingleMuscic() {\n      var that = this;\n      if (that.$route.query.reload) {\n        // console.log(\"this.$route:---\", that.$route);\n      }\n      //获取歌曲列表\n      let params = {\n        keywords: that.$route.query.keywords,\n        limit: 30,\n        offset: (that.currentPage - 1) * 30,\n        type: 1, //代表获取单曲\n      };\n      that.musicList = [];\n      getMusicInfo(params).then(async (res) => {\n        that.musicList = await res.data.result.songs;\n        // console.log(that.musicList)\n        that.count = await res.data.result.songCount;\n        transMusicTime(that.musicList, \"dt\");\n        // console.log(\"音乐列表：\", res.data.result);\n        //给每个列表添加一个防抖\n        for (let item of that.musicList) {\n          that.$set(item, \"timer\", true);\n        }\n      });\n    },\n    // 通过搜索关键词获取专辑\n    getAlbumList() {\n      var that = this;\n      //获取歌曲列表\n      let params = {\n        keywords: that.$route.query.keywords,\n        limit: 30,\n        offset: (that.currentPage - 1) * 30,\n        type: 10, //代表获取专辑\n      };\n      that.albumList = [];\n      getMusicInfo(params).then((res) => {\n        that.albumList = res.data.result.albums;\n        that.count = res.data.result.albumCount;\n        // console.log(\"专辑列表：\", res.data.result);\n      });\n    },\n    //通过搜索关键词获取歌手列表\n    getSingerList() {\n      var that = this;\n      let params = {\n        keywords: that.$route.query.keywords,\n        limit: 15,\n        offset: (that.currentPage - 1) * 15,\n        type: 100, //代表获取歌手\n      };\n      that.artists = [];\n      getMusicInfo(params).then((res) => {\n        // console.log(\"获取歌手列表----\", res.data.result);\n        that.artists = res.data.result.artists;\n        that.count = res.data.result.artistCount;\n      });\n    },\n    //通过搜索关键词获取歌单\n    getMusicList() {\n      var that = this;\n      let params = {\n        keywords: that.$route.query.keywords,\n        limit: 15,\n        offset: (that.currentPage - 1) * 15,\n        type: 1000, //代表获取歌单\n      };\n      that.playListTable = [];\n      getMusicInfo(params).then(async (res) => {\n        // console.log('获取歌单列表----', res.data.result)\n        that.playListTable = await res.data.result.playlists;\n        that.count = await res.data.result.playlistCount;\n        transPlayCount(that.playListTable, \"playCount\");\n      });\n    },\n    //通过搜索关键词获取对应视频列表\n    getVideoList() {\n      var that = this;\n      let params = {\n        keywords: that.$route.query.keywords,\n        limit: 12,\n        offset: (that.currentPage - 1) * 12,\n        type: 1014, //代表获取视频\n      };\n      that.videoList = [];\n      getMusicInfo(params).then(async (res) => {\n        // console.log(\"获取视频列表----\", res.data.result);\n        that.videoList = await res.data.result.videos;\n        // console.log(\"视频列表：\", that.videoList);\n        that.count = await res.data.result.videoCount;\n        //转换歌曲时长单位为分秒\n        transMusicTime(that.videoList, \"durationms\");\n        //将播放量转换成亿万单位\n        transPlayCount(that.videoList, \"playTime\");\n      });\n    },\n    //通过搜索关键词获取对应MV列表\n    getMVList() {\n      var that = this;\n      let params = {\n        keywords: that.$route.query.keywords,\n        limit: 12,\n        offset: (that.currentPage - 1) * 12,\n        type: 1004, //代表获取MV\n      };\n      that.mvList = [];\n      getMusicInfo(params).then(async (res) => {\n        // console.log(\"获取MV列表----\", res.data.result);\n        that.mvList = await res.data.result.mvs;\n        // console.log(\"MV列表：\", that.mvList);\n        that.count = await res.data.result.mvCount;\n        //转换歌曲时间为分秒单位\n        transMusicTime(that.mvList, \"duration\");\n        // 转换播放量单位为万\n        transPlayCount(that.mvList, \"playCount\");\n      });\n    },\n\n    goVideo(vid, type) {\n      if (type === 0) {\n        this.$router.push({\n          name: \"mvPlay\",\n          params: {\n            mvId: vid,\n          },\n        });\n      } else {\n        this.$router.push({\n          name: \"videoPlay\",\n          params: {\n            videoId: vid,\n          },\n        });\n      }\n    },\n    randomColor() {\n      return `#${((Math.random() * 0xffffff) << 0).toString(16)}`;\n    },\n  },\n};\n</script>\n\n<style lang=\"less\" scoped>\n//视频列表页面样式\n.videoListClass {\n  .videoPlay {\n    overflow-x: hidden;\n    &::-webkit-scrollbar {\n      display: none;\n    }\n\n    .videoPlaywrap {\n      display: flex;\n      margin: 0 auto;\n      padding: 10px;\n      justify-content: space-evenly;\n      flex-wrap: wrap; //根据宽度限制一行的盒子个数\n      margin: 10px 0;\n      width: 98%;\n      background: transparent;\n      // overflow-x: hidden;\n\n      .videoPlayList {\n        margin-bottom: 10px;\n        width: 240px;\n        height: 155px;\n        border-radius: 10px;\n        box-sizing: border-box;\n\n        .videoImage {\n          position: relative;\n          margin-bottom: 10px;\n          width: 240px;\n          height: 155px;\n          border-radius: 10px;\n          overflow: hidden;\n          transition: 0.2s;\n\n          &:hover {\n            transform: scale(1.05);\n            cursor: pointer;\n          }\n          .videoImg {\n            position: absolute;\n            width: 100%;\n            height: 100%;\n          }\n\n          .videoPlayTime {\n            position: absolute;\n            z-index: 99;\n            right: 10px;\n            background: transparent;\n          }\n        }\n\n        p {\n          font-size: 15px;\n          padding: 0 10px;\n          // width: 100%;\n          transition: 0.2s;\n          overflow: hidden; /*必须结合的属性,当内容溢出元素框时发生的事情*/\n          text-overflow: ellipsis; /*可以用来多行文本的情况下，用省略号“…”隐藏超出范围的文本 。*/\n          display: -webkit-box; /*必须结合的属性 ，将对象作为弹性伸缩盒子模型显示 。*/\n          -webkit-line-clamp: 2; /*用来限制在一个块元素显示的文本的行数。*/\n          -webkit-box-orient: vertical; /*必须结合的属性 ，设置或检索伸缩盒对象的子元素的排列方式 。*/\n          span {\n            &:hover {\n              color: rgb(145, 245, 228);\n              cursor: pointer;\n            }\n          }\n        }\n      }\n    }\n  }\n}\n// 歌单列表样式\n.playListClass {\n  .recPlay {\n    margin: auto;\n    max-height: 630px;\n    overflow-x: hidden;\n\n    &::-webkit-scrollbar {\n      display: none;\n    }\n\n    .playListWrap {\n      display: flex;\n      justify-content: space-between;\n      flex-wrap: wrap; //根据宽度限制一行的盒子个数\n      margin: 10px 0;\n      width: 100%;\n      background: transparent;\n      // overflow-x: hidden;\n\n      .playListTable {\n        margin-bottom: 10px;\n        width: 205px;\n        height: 230px;\n        box-sizing: border-box;\n\n        .image {\n          position: relative;\n          margin: 10px auto;\n          width: 190px;\n          height: 190px;\n          border-radius: 10px;\n          overflow: hidden;\n          transition: 0.2s;\n\n          &:hover {\n            transform: scale(1.06);\n            cursor: pointer;\n            // height: 210px;\n          }\n          img {\n            position: absolute;\n            width: 100%;\n            height: 100%;\n          }\n\n          .playCount {\n            position: absolute;\n            z-index: 99;\n            right: 10px;\n            background: transparent;\n          }\n        }\n        .List-title {\n          margin: 0 auto;\n          font-size: 15px;\n          // padding: 0 10px;\n          width: 180px;\n          transition: 0.2s;\n          text-align: center;\n          text-overflow: ellipsis;\n          white-space: nowrap;\n          overflow: hidden; /*必须结合的属性,当内容溢出元素框时发生的事情*/\n          text-overflow: ellipsis; /*可以用来多行文本的情况下，用省略号“…”隐藏超出范围的文本 。*/\n          white-space: nowrap;\n          display: -webkit-box; /*必须结合的属性 ，将对象作为弹性伸缩盒子模型显示 。*/\n          -webkit-line-clamp: 1; /*用来限制在一个块元素显示的文本的行数。*/\n          -webkit-box-orient: vertical; /*必须结合的属性 ，设置或检索伸缩盒对象的子元素的排列方式 。*/\n          span {\n            display: inline-block;\n            width: 180px;\n            // text-align: center;\n            text-overflow: ellipsis;\n            overflow: hidden;\n            white-space: nowrap;\n\n            &:hover {\n              color: rgb(145, 245, 228);\n              cursor: pointer;\n            }\n          }\n        }\n      }\n    }\n  }\n}\n//歌手列表样式\n.singerListClass {\n  .liWrap {\n    display: flex;\n    justify-content: space-around;\n    margin: 0 auto 10px;\n    padding: 0 10px;\n    width: 95%;\n    height: 60px;\n    border-radius: 12px;\n    background-color: rgba(129, 235, 199, 0.068);\n    box-sizing: border-box;\n    transition: 0.2s;\n    &:hover {\n      transform: scale(1.01);\n    }\n    .liWrap-block1 {\n      width: 60px;\n      height: 60px;\n      border-radius: 10px;\n      background-color: rgba(152, 158, 149, 0);\n      transition: 0.2s;\n      img {\n        width: 100%;\n        height: 100%;\n        border-radius: 10px;\n      }\n      &:hover {\n        transform: scale(1.05);\n        cursor: pointer;\n      }\n    }\n    .liWrap-block2 {\n      display: flex;\n      justify-content: space-between;\n      padding: 10px;\n      width: 920px;\n      height: 60px;\n      font-size: 15px;\n      text-overflow: ellipsis;\n      overflow: hidden;\n      white-space: no;\n      border-radius: 10px;\n      line-height: 40px;\n      box-sizing: border-box;\n      // background-color: rgba(226, 214, 156, 0.075);\n      transition: 0.2s;\n\n      span {\n        &:hover {\n          color: rgba(136, 240, 240, 0.719);\n        }\n      }\n      .div1 {\n        display: inline-block;\n        // width: 200px;\n\n        span {\n          color: bisque;\n          transition: 0.2s;\n          &:hover {\n            color: rgba(252, 214, 167, 0.979);\n          }\n        }\n      }\n      .divOther {\n        display: inline-block;\n        width: 100px;\n        margin-right: 5px;\n\n        span {\n          color: bisque;\n          transition: 0.2s;\n          &:hover {\n            color: rgba(255, 198, 129, 0.979);\n          }\n        }\n      }\n      &:hover {\n        transform: scale(1.01);\n        cursor: pointer;\n      }\n    }\n  }\n}\n//专辑列表页面样式\n.albumListClass {\n  .liWrap {\n    display: flex;\n    justify-content: space-around;\n    margin: 0 auto 10px;\n    padding: 0 10px;\n    width: 95%;\n    height: 60px;\n    border-radius: 12px;\n    background-color: rgba(129, 235, 199, 0.068);\n    box-sizing: border-box;\n    transition: 0.2s;\n    &:hover {\n      // color: aqua;\n      transform: scale(1.01);\n    }\n    .liWrap-block1 {\n      width: 60px;\n      height: 60px;\n      border-radius: 10px;\n      background-color: rgba(177, 244, 151, 0);\n      transition: 0.2s;\n      img {\n        width: 100%;\n        height: 100%;\n        border-radius: 10px;\n      }\n      &:hover {\n        // color: aqua;\n        transform: scale(1.05);\n        cursor: pointer;\n      }\n    }\n    .liWrap-block2 {\n      display: flex;\n      justify-content: space-between;\n      padding: 10px;\n      width: 920px;\n      height: 60px;\n      font-size: 15px;\n      border-radius: 10px;\n      line-height: 40px;\n      box-sizing: border-box;\n      // background-color: rgba(226, 214, 156, 0.075);\n      transition: 0.2s;\n\n      span {\n        &:hover {\n          color: rgba(109, 255, 255, 0.753);\n        }\n      }\n      .div1 {\n        display: inline-block;\n        width: 520px;\n        text-overflow: ellipsis;\n        overflow: hidden;\n        white-space: nowrap;\n        .albumName {\n          display: inline-block;\n          max-width: 500px;\n          text-overflow: ellipsis;\n          overflow: hidden;\n          white-space: nowrap;\n          color: rgb(196, 255, 250);\n          transition: 0.2s;\n          span {\n            &:hover {\n              color: rgba(97, 252, 252, 0.979);\n            }\n          }\n          &:hover {\n            color: rgba(97, 252, 252, 0.979);\n          }\n        }\n        &:hover {\n          color: rgba(97, 252, 252, 0.979);\n        }\n      }\n      .divOther {\n        display: inline-block;\n        width: 200px;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n        // text-align: left;\n        margin-right: 5px;\n\n        span {\n          color: rgb(196, 255, 250);\n          transition: 0.2s;\n          &:hover {\n            color: rgba(97, 252, 252, 0.979);\n          }\n        }\n      }\n      &:hover {\n        // color: rgba(97, 252, 252, 0.979);\n        transform: scale(1.01);\n        cursor: pointer;\n      }\n    }\n  }\n}\n\n.descript {\n  display: flex;\n  justify-content: space-between;\n  color: aliceblue;\n  font-weight: bolder;\n  padding: 10px 20px;\n  border-radius: 20px 20px 0 0;\n  background: rgba(95, 158, 160, 0.05);\n  box-sizing: border-box;\n}\n.list-wrap {\n  margin: 10px auto 0;\n  padding: 0 20px 10px;\n  width: 1120px;\n  // height: 730px;\n  border-radius: 20px;\n  background: rgba(95, 158, 160, 0.11);\n  box-sizing: border-box;\n\n  .tagWrap {\n    display: flex;\n    justify-content: space-around;\n    align-content: center;\n    margin: 0 auto;\n    width: 50%;\n\n    span {\n      font-size: 18px;\n      padding: 0 10px;\n      transition: 0.2s;\n\n      &:hover {\n        color: rgb(101, 195, 233);\n        cursor: pointer;\n      }\n    }\n  }\n\n  ul {\n    height: 650px;\n    border-radius: 0 0 10px 10px;\n    background: rgba(95, 158, 160, 0.05);\n    overflow-x: hidden;\n\n    &::-webkit-scrollbar {\n      display: none;\n    }\n\n    .music-list {\n      position: relative;\n      display: flex;\n      margin: 5px auto 5px;\n      padding: 0 10px;\n      width: 96%;\n      height: 30px;\n      line-height: 30px;\n      overflow: hidden;\n      color: rgba(255, 255, 255, 1);\n      font-weight: bolder;\n      border-radius: 5px;\n      -o-text-overflow: ellipsis;\n      text-overflow: ellipsis;\n      // background: rgba(172, 233, 236, 0.055);\n      transition: 0.2s;\n\n      .music-list-span {\n        display: inline-block;\n        width: 270px;\n        // font-size:13px;\n        text-align: center;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n      }\n      .option {\n        position: absolute;\n        padding-left: 120px;\n        width: 240px;\n        right: 0px;\n        box-sizing: border-box;\n\n        span {\n          display: inline-block;\n          width: 30px;\n          &:hover {\n            cursor: pointer;\n          }\n        }\n      }\n\n      &:hover {\n        color: rgb(88, 255, 241);\n        transform: scale(1.01);\n        // background: rgba(141, 251, 255, 0.192);\n      }\n    }\n  }\n}\n.pagination {\n  text-align: center;\n  background: none !important;\n\n  /deep/ .el-pager {\n    height: 30px !important;\n    background: none !important;\n  }\n  /deep/ .number,\n  /deep/ .btn-prev,\n  /deep/ .btn-quicknext,\n  /deep/ .btn-next,\n  /deep/ .el-input__inner,\n  /deep/ .more {\n    color: #f2fff7 !important;\n    transition: 0.2s;\n    background: transparent !important;\n  }\n  /deep/ .number:hover,\n  /deep/ .btn-prev:hover,\n  /deep/ .btn-quicknext:hover,\n  /deep/ .btn-next:hover,\n  /deep/ .el-input__inner:hover,\n  /deep/ .more:hover {\n    transform: scale(1.02);\n    color: #f7a588 !important;\n  }\n  /deep/ .active {\n    color: #f7a588 !important;\n  }\n  /deep/ .el-input__inner {\n    border: none;\n  }\n  /deep/ .el-pagination__jump {\n    color: #f7dd88 !important;\n  }\n  /deep/.el-pagination {\n    height: 100%;\n  }\n  .iconhover {\n    transition: 0.2s;\n    &:hover {\n      color: rgb(247, 243, 45);\n    }\n  }\n}\n</style>\n\n"]},"metadata":{},"sourceType":"module"}