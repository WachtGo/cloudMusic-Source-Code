{"ast":null,"code":"import _asyncToGenerator from \"D:/Desktop/git/cloudMusic-Source-Code/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport { playMusicUrl, getSongLyric, getSongDetails } from \"@/api/api\"; //添加歌曲到播放列表\n\nexport function playMusic(id, fee, index, list, that) {\n  //获取播放音乐链接\n  // console.log(that,'----')\n  var songUrlAdd = null; //音乐地址\n\n  var songlrc = \"\"; //歌词\n\n  if (that[list][index].timer) return;\n\n  if (fee == 1) {\n    that.$message({\n      message: \"VIP歌曲 - 只能试听30s\",\n      type: \"warning\"\n    });\n  } else {}\n\n  that[list][index].timer = setTimeout( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return playMusicUrl({\n              id: id\n            }).then(function (res) {\n              // console.log(\"播放音乐链接\", res.data.data[0].url);\n              if (res.data.data[0].url) {\n                songUrlAdd = res.data.data[0].url;\n              } else {\n                that.$message({\n                  message: \"这首歌暂无版权\",\n                  type: \"error\"\n                });\n                return;\n              }\n            });\n\n          case 2:\n            _context.next = 4;\n            return getSongLyric({\n              id: id\n            }).then(function (res) {\n              songlrc = res.data.lrc.lyric;\n            });\n\n          case 4:\n            _context.next = 6;\n            return getSongDetails({\n              ids: id\n            }).then(function (res) {\n              that.$store.commit(\"aplayer/addSONG\", {\n                name: res.data.songs[0].name,\n                //歌曲名\n                artist: res.data.songs[0].ar[0].name,\n                //作者\n                url: songUrlAdd,\n                cover: res.data.songs[0].al.picUrl,\n                lrc: songlrc,\n                id: id\n              });\n            });\n\n          case 6:\n            that[list][index].timer = null;\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })), 2000);\n} //播放试听音乐\n\nexport function listenMusic(id, fee, index, list, that) {\n  var songUrlAdd = null;\n  var songlrc = \"\";\n  if (that[list][index].timer) return;\n\n  if (fee == 1) {\n    that.$message({\n      message: \"VIP歌曲 - 只能试听30s\",\n      type: \"warning\"\n    });\n  }\n\n  that[list][index].timer = setTimeout( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            that[list][index].timer = null;\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  })), 2000);\n  playMusicUrl({\n    id: id\n  }).then(function (res) {\n    // console.log(\"播放音乐链接\", res.data.data[0].url);\n    if (res.data.data[0].url) {\n      songUrlAdd = res.data.data[0].url;\n    } else {\n      that.$message({\n        message: \"这首歌暂无版权\",\n        type: \"error\"\n      });\n      return;\n    }\n  }), // 获取歌词\n  getSongLyric({\n    id: id\n  }).then(function (res) {\n    songlrc = res.data.lrc.lyric;\n  }), // 获取歌曲信息\n  getSongDetails({\n    ids: id\n  }).then(function (res) {\n    if (songUrlAdd != null) {\n      that.$store.commit(\"aplayer/addAUDITION\", {\n        name: res.data.songs[0].name,\n        //歌曲名\n        artist: res.data.songs[0].ar[0].name,\n        //作者\n        url: songUrlAdd,\n        cover: res.data.songs[0].al.picUrl,\n        lrc: songlrc,\n        id: id,\n        timer: null //试听中添加，防止用户连点消耗性能，在添加播放列表方法中可使用到\n\n      });\n    }\n  });\n}","map":{"version":3,"sources":["D:/Desktop/git/cloudMusic-Source-Code/src/utils/musicPlay.js"],"names":["playMusicUrl","getSongLyric","getSongDetails","playMusic","id","fee","index","list","that","songUrlAdd","songlrc","timer","$message","message","type","setTimeout","then","res","data","url","lrc","lyric","ids","$store","commit","name","songs","artist","ar","cover","al","picUrl","listenMusic"],"mappings":"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","sourcesContent":["import { playMusicUrl, getSongLyric, getSongDetails } from \"@/api/api\";\r\n\r\n//添加歌曲到播放列表\r\nexport  function playMusic(id, fee, index, list, that) {\r\n  //获取播放音乐链接\r\n  // console.log(that,'----')\r\n\r\n  let songUrlAdd = null; //音乐地址\r\n  let songlrc = \"\"; //歌词\r\n  if (that[list][index].timer) return;\r\n  if (fee == 1) {\r\n    that.$message({\r\n      message: \"VIP歌曲 - 只能试听30s\",\r\n      type: \"warning\",\r\n    });\r\n  }else{\r\n\r\n  }\r\n  that[list][index].timer = setTimeout(async () => {\r\n\tawait playMusicUrl({\r\n\t\tid: id,\r\n\t  }).then((res) => {\r\n\t\t// console.log(\"播放音乐链接\", res.data.data[0].url);\r\n\t\tif (res.data.data[0].url) {\r\n\t\t  songUrlAdd = res.data.data[0].url;\r\n\t\t} else {\r\n\t\t  that.$message({\r\n\t\t\tmessage: \"这首歌暂无版权\",\r\n\t\t\ttype: \"error\",\r\n\t\t  });\r\n\t\t  return;\r\n\t\t}\r\n\t  }),\r\n\t\t// 获取歌词\r\n\t\tawait  getSongLyric({\r\n\t\t  id: id,\r\n\t\t}).then((res) => {\r\n\t\t  songlrc = res.data.lrc.lyric;\r\n\t\t}),\r\n\t\t// 获取歌曲信息\r\n\t\tawait getSongDetails({\r\n\t\t  ids: id,\r\n\t\t}).then((res) => {\r\n\t\t  that.$store.commit(\"aplayer/addSONG\", {\r\n\t\t\tname: res.data.songs[0].name, //歌曲名\r\n\t\t\tartist: res.data.songs[0].ar[0].name, //作者\r\n\t\t\turl: songUrlAdd,\r\n\t\t\tcover: res.data.songs[0].al.picUrl,\r\n\t\t\tlrc: songlrc,\r\n\t\t\tid: id,\r\n\t\t  });\r\n\t\t  \r\n\t\t});\r\n\tthat[list][index].timer = null;\r\n  }, 2000);\r\n \r\n\t\r\n}\r\n\r\n//播放试听音乐\r\nexport  function listenMusic(id, fee, index, list, that) {\r\n  let songUrlAdd = null;\r\n  let songlrc = \"\";\r\n  if (that[list][index].timer) return;\r\n  if (fee == 1) {\r\n    that.$message({\r\n      message: \"VIP歌曲 - 只能试听30s\",\r\n      type: \"warning\",\r\n    });\r\n  }\r\n  that[list][index].timer = setTimeout(async() => {\r\n\tthat[list][index].timer = null;\r\n  }, 2000);\r\n  playMusicUrl({\r\n    id: id,\r\n  }).then((res) => {\r\n    // console.log(\"播放音乐链接\", res.data.data[0].url);\r\n    if (res.data.data[0].url) {\r\n      songUrlAdd = res.data.data[0].url;\r\n    } else {\r\n      that.$message({\r\n        message: \"这首歌暂无版权\",\r\n        type: \"error\",\r\n      });\r\n      return;\r\n    }\r\n  }),\r\n    // 获取歌词\r\n    getSongLyric({\r\n      id: id,\r\n    }).then((res) => {\r\n      songlrc = res.data.lrc.lyric;\r\n    }),\r\n    // 获取歌曲信息\r\n    getSongDetails({\r\n      ids: id,\r\n    }).then((res) => {\r\n      if (songUrlAdd != null) {\r\n        that.$store.commit(\"aplayer/addAUDITION\", {\r\n          name: res.data.songs[0].name, //歌曲名\r\n          artist: res.data.songs[0].ar[0].name, //作者\r\n          url: songUrlAdd,\r\n          cover: res.data.songs[0].al.picUrl,\r\n          lrc: songlrc,\r\n          id: id,\r\n          timer: null, //试听中添加，防止用户连点消耗性能，在添加播放列表方法中可使用到\r\n        });\r\n      }\r\n      \r\n    });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}