{"ast":null,"code":"var _this = this;\n\nimport axios from 'axios';\nimport { Message, MessageBox } from 'element-ui';\nimport store from '@/store';\nimport { getToken } from '@/utils/auth'; // import { MessageBox, Message } from 'element-ui'\n//创建axois实例\n\nvar service = axios.create({\n  baseURL: 'https://cloud-music-isntafzhs-wachtgo.vercel.app/',\n  changeOrigin: true,\n  //解决跨域\n  xhrFields: {\n    withCredentials: true\n  }\n});\nservice.interceptors.response.use(function (res) {\n  // console.log(res)\n  if (res.data.code === 301) {\n    _this._vm.$message({\n      type: 'error',\n      message: res.data.msg\n    });\n  }\n\n  return res;\n});\nexport default service;","map":{"version":3,"sources":["D:/Desktop/git工作区/cloudMusic-Source-Code/src/utils/request.js"],"names":["axios","Message","MessageBox","store","getToken","service","create","baseURL","changeOrigin","xhrFields","withCredentials","interceptors","response","use","res","data","code","_vm","$message","type","message","msg"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,YAApC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,QAAT,QAAyB,cAAzB,C,CACA;AACA;;AACA,IAAMC,OAAO,GAAGL,KAAK,CAACM,MAAN,CAAa;AACzBC,EAAAA,OAAO,EAAE,mDADgB;AAEzBC,EAAAA,YAAY,EAAE,IAFW;AAEJ;AACrBC,EAAAA,SAAS,EAAE;AAAEC,IAAAA,eAAe,EAAE;AAAnB;AAHc,CAAb,CAAhB;AAKAL,OAAO,CAACM,YAAR,CAAqBC,QAArB,CAA8BC,GAA9B,CAAkC,UAACC,GAAD,EAAO;AACvC;AACA,MAAGA,GAAG,CAACC,IAAJ,CAASC,IAAT,KAAkB,GAArB,EAAyB;AACvB,IAAA,KAAI,CAACC,GAAL,CAASC,QAAT,CAAkB;AAChBC,MAAAA,IAAI,EAAE,OADU;AAEhBC,MAAAA,OAAO,EAAEN,GAAG,CAACC,IAAJ,CAASM;AAFF,KAAlB;AAID;;AACD,SAAOP,GAAP;AACD,CATD;AAkBA,eAAeT,OAAf","sourcesContent":["import axios from 'axios'\r\nimport { Message, MessageBox } from 'element-ui'\r\nimport store from '@/store'\r\nimport { getToken } from '@/utils/auth'\r\n// import { MessageBox, Message } from 'element-ui'\r\n//创建axois实例\r\nconst service = axios.create({\r\n    baseURL: 'https://cloud-music-isntafzhs-wachtgo.vercel.app/',\r\n    changeOrigin: true,  //解决跨域\r\n    xhrFields: { withCredentials: true }\r\n});\r\nservice.interceptors.response.use((res)=>{\r\n  // console.log(res)\r\n  if(res.data.code === 301){\r\n    this._vm.$message({\r\n      type: 'error',\r\n      message: res.data.msg,\r\n    });\r\n  }\r\n  return res\r\n})\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default service;"]},"metadata":{},"sourceType":"module"}