{"ast":null,"code":"import _defineProperty from \"D:/Desktop/git\\u5DE5\\u4F5C\\u533A/cloudMusic-Source-Code/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n\nvar _axios$create;\n\nimport \"core-js/modules/es.object.to-string.js\";\nimport axios from 'axios';\nimport { Message, MessageBox } from 'element-ui';\nimport store from '@/store';\nimport { getToken } from '@/utils/auth'; // import { MessageBox, Message } from 'element-ui'\n//创建axois实例\n\nvar service = axios.create((_axios$create = {\n  baseURL: 'https://cloud-music-isntafzhs-wachtgo.vercel.app/'\n}, _defineProperty(_axios$create, \"baseURL\", 'http://localhost:3000/'), _defineProperty(_axios$create, \"changeOrigin\", true), _defineProperty(_axios$create, \"withCredentials\", true), _axios$create)); // 在封装axios的文件中添加拦截器\n// 添加请求拦截器，在请求头中加token\n\nservice.interceptors.request.use(function (config) {\n  // 判断本地的cookie中是否有token\n  if (getToken('token')) {\n    config.headers.cookie = getToken('token');\n  } // else {\n  // // 跳转到登录页面(这里使用router，是因为路由文件引入到了此文件里)\n  // router.push('/login')\n  // }\n\n\n  return config;\n}, function (error) {\n  return Promise.reject(error);\n});\nexport default service;","map":{"version":3,"sources":["D:/Desktop/git工作区/cloudMusic-Source-Code/src/utils/request.js"],"names":["axios","Message","MessageBox","store","getToken","service","create","baseURL","interceptors","request","use","config","headers","cookie","error","Promise","reject"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,YAApC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,QAAT,QAAyB,cAAzB,C,CACA;AACA;;AACA,IAAMC,OAAO,GAAGL,KAAK,CAACM,MAAN;AACZC,EAAAA,OAAO,EAAE;AADG,6CAEH,wBAFG,kDAIE,IAJF,qDAKK,IALL,kBAAhB,C,CAOA;AACA;;AACAF,OAAO,CAACG,YAAR,CAAqBC,OAArB,CAA6BC,GAA7B,CACE,UAAAC,MAAM,EAAI;AACV;AACA,MAAIP,QAAQ,CAAC,OAAD,CAAZ,EAAuB;AACvBO,IAAAA,MAAM,CAACC,OAAP,CAAeC,MAAf,GAAwBT,QAAQ,CAAC,OAAD,CAAhC;AACC,GAJS,CAKV;AACA;AACA;AACA;;;AACA,SAAOO,MAAP;AACC,CAXH,EAYE,UAAAG,KAAK,EAAI;AACT,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACC,CAdH;AAgBA,eAAeT,OAAf","sourcesContent":["import axios from 'axios'\r\nimport { Message, MessageBox } from 'element-ui'\r\nimport store from '@/store'\r\nimport { getToken } from '@/utils/auth'\r\n// import { MessageBox, Message } from 'element-ui'\r\n//创建axois实例\r\nconst service = axios.create({\r\n    baseURL: 'https://cloud-music-isntafzhs-wachtgo.vercel.app/',\r\n    baseURL: 'http://localhost:3000/',\r\n    \r\n    changeOrigin: true,  //解决跨域\r\n    withCredentials: true //\r\n});\r\n// 在封装axios的文件中添加拦截器\r\n// 添加请求拦截器，在请求头中加token\r\nservice.interceptors.request.use(\r\n  config => {\r\n  // 判断本地的cookie中是否有token\r\n  if (getToken('token')) {\r\n  config.headers.cookie = getToken('token')\r\n  } \r\n  // else {\r\n  // // 跳转到登录页面(这里使用router，是因为路由文件引入到了此文件里)\r\n  // router.push('/login')\r\n  // }\r\n  return config\r\n  },\r\n  error => {\r\n  return Promise.reject(error)\r\n  })\r\n \r\nexport default service;"]},"metadata":{},"sourceType":"module"}