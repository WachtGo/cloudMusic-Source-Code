{"ast":null,"code":"import _createForOfIteratorHelper from \"D:/data/\\u684C\\u9762/git/cloudMusic-Source-Code/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _asyncToGenerator from \"D:/data/\\u684C\\u9762/git/cloudMusic-Source-Code/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.json.stringify.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getDownloadUrl, getSingerDetail as _getSingerDetail, getSingerDesc as _getSingerDesc, getSingerSongList as _getSingerSongList, getSingerMvList as _getSingerMvList, getSingerAlbum as _getSingerAlbum } from \"@/api/api\";\nimport { transMusicTime, transPlayCount, download } from \"@/utils/commonApi\";\nimport songlist from \"@/components/songlist.vue\";\nexport default {\n  components: {\n    songlist: songlist\n  },\n  // props: ['artist.id'],\n  data: function data() {\n    return {\n      //歌手信息\n      artist: {\n        alias: [],\n        musicSize: \"\"\n      },\n      songList: [],\n      albumList: [],\n      mvList: [],\n      tagSwitch: {\n        detailSwitch: true,\n        songSwitch: false,\n        albumSwitch: false,\n        mvSwitch: false\n      },\n      songcurrentPage: 1,\n      albumcurrentPage: 1,\n      mvcurrentPage: 1\n    };\n  },\n  mounted: function mounted() {\n    this.getSingerDetail(); // 判断路由传入了歌手信息还是歌手id\n\n    if (this.$route.params.artist) {\n      //路由直接传入了歌手详情\n      this.artist = this.$route.params.artist;\n      localStorage.setItem(\"artist\", JSON.stringify(this.$route.params.artist));\n    } else {\n      //当路由传入的是id时\n      if (this.$route.params.id) {\n        this.getSingerDetail();\n      } //刷新页面会走向这，可以直接从缓存获取\n\n\n      this.artist = JSON.parse(localStorage.getItem(\"artist\"));\n    } //判断是否使用缓存\n\n\n    this.$route.params.artist ? this.artist = this.$route.params.artist : this.artist = JSON.parse(localStorage.getItem(\"artist\"));\n    this.getSingerDesc();\n  },\n  methods: {\n    //显示歌手单曲、专辑、mv列表开关\n    switchChange: function switchChange(tag) {\n      var that = this;\n\n      for (var key in that.tagSwitch) {\n        if (key != tag) {\n          that.tagSwitch[key] = false;\n        }\n      }\n\n      that.tagSwitch[tag] = true;\n    },\n    //获取歌手详情\n    getSingerDetail: function getSingerDetail() {\n      var _this = this;\n\n      // id:4292 李荣浩\n      _getSingerDetail({\n        id: this.$route.params.id\n      }).then( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(res) {\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  if (!(res.data.code === 200)) {\n                    _context.next = 5;\n                    break;\n                  }\n\n                  _context.next = 3;\n                  return res.data.artist;\n\n                case 3:\n                  _this.artist = _context.sent;\n                  // console.log(\"歌手详情--\", res.data.artist);\n                  localStorage.setItem(\"artist\", JSON.stringify(res.data.artist));\n\n                case 5:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }()).catch(function (res) {});\n    },\n    //获取歌手单曲列表\n    getSingerSongList: function getSingerSongList(tag) {\n      var that = this;\n      var params = {\n        id: that.artist.id,\n        limit: 30,\n        offset: (that.songcurrentPage - 1) * 30\n      };\n      that.detailShow = false;\n      that.songList = [];\n\n      _getSingerSongList(params).then( /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(res) {\n          var _iterator, _step, item, dt;\n\n          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.next = 2;\n                  return res.data.songs;\n\n                case 2:\n                  that.songList = _context2.sent;\n                  // that.songCount = res.data.total\n                  //给每首曲子添加防抖\n                  _iterator = _createForOfIteratorHelper(that.songList);\n\n                  try {\n                    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                      item = _step.value;\n                      that.$set(item, \"timer\", true);\n                    } //转换时间\n\n                  } catch (err) {\n                    _iterator.e(err);\n                  } finally {\n                    _iterator.f();\n                  }\n\n                  dt = \"dt\";\n                  transMusicTime(that.songList, dt);\n\n                case 7:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function (_x2) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n\n      that.switchChange(tag);\n    },\n    //获取歌手专辑列表\n    getSingerAlbum: function getSingerAlbum(tag) {\n      var that = this;\n      var params = {\n        id: that.artist.id,\n        limit: 6,\n        offset: (that.albumcurrentPage - 1) * 6\n      };\n      that.detailShow = false;\n      that.albumList = [];\n\n      _getSingerAlbum(params).then(function (res) {\n        // console.log(\"歌手专辑列表\", res.data.hotAlbums);\n        that.albumList = res.data.hotAlbums;\n      });\n\n      that.switchChange(tag);\n    },\n    //获取歌手mv\n    getSingerMvList: function getSingerMvList(tag) {\n      var that = this;\n      var params = {\n        id: that.artist.id,\n        limit: 8,\n        offset: (that.mvcurrentPage - 1) * 8\n      };\n      that.mvList = [];\n\n      _getSingerMvList(params).then( /*#__PURE__*/function () {\n        var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(res) {\n          return regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  _context3.next = 2;\n                  return res.data.mvs;\n\n                case 2:\n                  that.mvList = _context3.sent;\n                  // 转换时间单位\n                  transMusicTime(that.mvList, \"duration\"); //转换播放量单位\n\n                  transPlayCount(that.mvList, \"playCount\");\n\n                case 5:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3);\n        }));\n\n        return function (_x3) {\n          return _ref3.apply(this, arguments);\n        };\n      }());\n\n      that.switchChange(tag);\n    },\n    //获取歌手描述\n    getSingerDesc: function getSingerDesc() {\n      // console.log(Boolean(this.artist))\n      var that = this;\n      var params = {\n        id: that.artist.id\n      };\n\n      _getSingerDesc(params).then(function (res) {\n        console.log(\"歌手描述\", res.data);\n        that.artist = res.data.artist;\n      });\n    },\n    //跳转到专辑详情\n    goAlbumDetail: function goAlbumDetail(albumId) {\n      this.$router.push({\n        name: \"albumDetail\",\n        params: {\n          albumId: albumId\n        }\n      });\n    },\n    //跳转到播放MV页面\n    playMV: function playMV(mvId) {\n      //获取mv播放链接\n      this.$router.push({\n        name: \"mvPlay\",\n        params: {\n          mvId: mvId\n        }\n      });\n    },\n    //歌手歌曲分页\n    songHandleCurrentChange: function songHandleCurrentChange(currentPage) {\n      // console.log(`当前页: ${currentPage}`);\n      var that = this;\n      that.songcurrentPage = currentPage;\n      that.getSingerSongList(\"songSwitch\");\n    },\n    //歌手专辑分页\n    albumHandleCurrentChange: function albumHandleCurrentChange(currentPage) {\n      // console.log(`当前页: ${currentPage}`);\n      var that = this;\n      that.albumcurrentPage = currentPage;\n      that.getSingerAlbum(\"albumSwitch\");\n    },\n    // 歌手mv分页\n    mvHandleCurrentChange: function mvHandleCurrentChange(currentPage) {\n      // console.log(`当前页: ${currentPage}`);\n      var that = this;\n      that.mvcurrentPage = currentPage;\n      that.getSingerMvList(\"mvSwitch\");\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["getDownloadUrl","getSingerDetail","getSingerDesc","getSingerSongList","getSingerMvList","getSingerAlbum","components","songlist","data","artist","alias","musicSize","songList","albumList","mvList","tagSwitch","detailSwitch","songSwitch","albumSwitch","mvSwitch","songcurrentPage","albumcurrentPage","mvcurrentPage","mounted","localStorage","methods","switchChange","tag","that","id","then","res","catch","limit","offset","item","dt","transMusicTime","transPlayCount","console","goAlbumDetail","albumId","name","params","playMV","mvId","songHandleCurrentChange","albumHandleCurrentChange","mvHandleCurrentChange"],"sourceRoot":"src/views/singerDetail","sources":["singerDetail.vue"],"sourcesContent":["\r\n<template>\r\n  <div class=\"list-wrap\">\r\n    <div class=\"pageName\">歌手详情</div>\r\n    <div class=\"descript\"></div>\r\n    <div>\r\n      <div class=\"ul\">\r\n        <div class=\"details\">\r\n          <div class=\"details-img\">\r\n            <img :src=\"artist.img1v1Url\" alt=\"\" />\r\n          </div>\r\n          <div class=\"detailsRight\">\r\n            <div style=\"margin-left: 0px; text-align: left; font-size: 20px\">\r\n              {{ artist.name }}\r\n            </div>\r\n            <div style=\"font-size: 14px\">\r\n              <div class=\"aliasClass\">\r\n                <span class=\"playListNickName\" v-if=\"artist.alias[0]\">{{\r\n                  artist.alias[0]\r\n                }}</span>\r\n                <span class=\"playListNickName\" v-if=\"artist.alias[1]\">-</span\r\n                ><span class=\"playListNickName2\">{{ artist.alias[1] }}</span\r\n                ><span\r\n                  ><br />\r\n                  <span style=\"color: antiquewhite\"></span\r\n                ></span>\r\n              </div>\r\n\r\n              <div class=\"option\">\r\n                <div class=\"flexBetween\">\r\n                  <span\r\n                    class=\"inline-block\"\r\n                    @click=\"getSingerSongList('songSwitch')\"\r\n                    >歌曲：<span class=\"musicSize\">{{\r\n                      artist.musicSize\r\n                    }}</span></span\r\n                  >\r\n                  <span\r\n                    class=\"inline-block\"\r\n                    @click=\"getSingerAlbum('albumSwitch')\"\r\n                    >专辑：<span class=\"musicSize\">{{ artist.albumSize }}</span>\r\n                  </span>\r\n                  <span\r\n                    class=\"inline-block\"\r\n                    @click=\"getSingerMvList('mvSwitch')\"\r\n                    >MV：<span class=\"musicSize\">{{ artist.mvSize }}</span>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"singerDetail\" v-if=\"tagSwitch.detailSwitch\">\r\n          <div style=\"font-size: 15px\">简介：</div>\r\n          <div v-if=\"artist.briefDesc === ''\" class=\"loading\">\r\n            <i class=\"el-icon-loading\"></i>\r\n          </div>\r\n          <p class=\"briefDesc\">\r\n            {{ artist.briefDesc }}\r\n          </p>\r\n        </div>\r\n        <div id=\"singleSongs\" v-if=\"tagSwitch.songSwitch\">\r\n          <!-- <h3>\r\n            歌曲：{{ songCount }}\r\n            &nbsp;&nbsp;&nbsp;&nbsp;\r\n            <span style=\"font-size：10px;\"></span>\r\n          </h3> -->\r\n          <div class=\"loading\" v-show=\"songList.length === 0\">\r\n            <i class=\"el-icon-loading\"></i>\r\n          </div>\r\n          <div v-if=\"songList.length !== 0\">\r\n            <ul class=\"song-album-wrap\">\r\n              <songlist :songlist=\"songList\"></songlist>\r\n            </ul>\r\n            <div class=\"pagination\">\r\n              <el-pagination\r\n                v-show=\"artist.musicSize > 30\"\r\n                @current-change=\"songHandleCurrentChange\"\r\n                :current-page.sync=\"songcurrentPage\"\r\n                :page-size=\"30\"\r\n                layout=\"prev, pager, next, jumper\"\r\n                :total=\"artist.musicSize\"\r\n                :background=\"true\"\r\n              >\r\n              </el-pagination>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div id=\"albumList\" v-if=\"tagSwitch.albumSwitch\">\r\n          <div class=\"loading\" v-show=\"albumList.length === 0\">\r\n            <i class=\"el-icon-loading\"></i>\r\n          </div>\r\n          <div v-if=\"albumList.length !== 0\">\r\n            <ul class=\"song-album-wrap\">\r\n              <li\r\n                class=\"liWrap\"\r\n                v-for=\"(item, index) in albumList\"\r\n                :key=\"index\"\r\n                @click=\"goAlbumDetail(item.id)\"\r\n              >\r\n                <div class=\"liWrap-block1\">\r\n                  <img :src=\"item.blurPicUrl\" alt=\"\" />\r\n                </div>\r\n                <div class=\"liWrap-block2\">\r\n                  <div class=\"div1\">\r\n                    <span class=\"albumName\"\r\n                      >{{ item.name }}\r\n                      <span v-if=\"item.alias[0]\" class=\"albumName2\">{{\r\n                        item.alias[0]\r\n                      }}</span></span\r\n                    >\r\n                  </div>\r\n                  <div>\r\n                    <div class=\"divOther\">\r\n                      <!-- 作者：<span>{{ item.artist.name }}</span> -->\r\n                    </div>\r\n                    <span\r\n                      class=\"inline-block\"\r\n                      style=\"display: inline-block; width: 50px\"\r\n                    ></span>\r\n                    <div class=\"divOther\" style=\"width: 100px\">\r\n                      歌曲：<span>{{ item.size }}</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            </ul>\r\n            <div class=\"pagination\">\r\n              <el-pagination\r\n                v-show=\"artist.albumSize > 6\"\r\n                @current-change=\"albumHandleCurrentChange\"\r\n                :current-page.sync=\"albumcurrentPage\"\r\n                :page-size=\"6\"\r\n                layout=\"prev, pager, next, jumper\"\r\n                :total=\"artist.albumSize\"\r\n                :background=\"true\"\r\n              >\r\n              </el-pagination>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div id=\"singerMvs\" v-if=\"tagSwitch.mvSwitch\">\r\n          <!-- <h3 style=\"margin: 0 auto\">\r\n            MV：{{ mvList.length }}&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-size：10px;\"></span>\r\n          </h3> -->\r\n          <div class=\"loading\" v-show=\"mvList.length === 0\">\r\n            <i class=\"el-icon-loading\"></i>\r\n          </div>\r\n          <div v-if=\"mvList.length !== 0\">\r\n            <ul class=\"videoPlaywrap\">\r\n              <li\r\n                class=\"videoPlayList\"\r\n                v-for=\"(item, index) in mvList\"\r\n                :key=\"index\"\r\n              >\r\n                <div class=\"videoImage\">\r\n                  <img\r\n                    class=\"videoImg\"\r\n                    style=\"\r\n                      position: absolute;\r\n                      width: 240px;\r\n                      height: 155px;\r\n                      border-radius: 10px;\r\n                    \"\r\n                    :src=\"item.imgurl16v9\"\r\n                    alt=\"\"\r\n                    title=\"\"\r\n                    @click=\"playMV(item.id)\"\r\n                  />\r\n                  <span class=\"videoPlayTime\"\r\n                    ><i class=\"el-icon-video-play\" style=\"margin-right: 1px\"></i\r\n                    >{{ item.playCount }}</span\r\n                  >\r\n                  <span class=\"videoPlayTime\" style=\"bottom: 0\">{{\r\n                    item.duration\r\n                  }}</span>\r\n                </div>\r\n\r\n                <p class=\"List-title\" style=\"font-size: 10px\">\r\n                  <span\r\n                    style=\"\r\n                      display: inline-block;\r\n                      width: 100%;\r\n                      overflow: hidden;\r\n                      white-space: nowrap;\r\n                      text-overflow: ellipsis;\r\n                    \"\r\n                    ><span v-if=\"!item.type\" style=\"color: red\">MV&nbsp;</span\r\n                    >{{ item.name }}</span\r\n                  ><br />\r\n                  <span style=\"color: rgb(199, 199, 199)\"\r\n                    ><span>by&nbsp;</span>\r\n                    <span>{{ item.artistName }}</span></span\r\n                  >\r\n                </p>\r\n              </li>\r\n            </ul>\r\n            <div class=\"pagination\">\r\n              <el-pagination\r\n                v-show=\"artist.mvSize > 8\"\r\n                @current-change=\"mvHandleCurrentChange\"\r\n                :current-page.sync=\"mvcurrentPage\"\r\n                :page-size=\"8\"\r\n                layout=\"prev, pager, next, jumper\"\r\n                :total=\"artist.mvSize\"\r\n                :background=\"true\"\r\n              >\r\n              </el-pagination>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  getDownloadUrl,\r\n  getSingerDetail,\r\n  getSingerDesc,\r\n  getSingerSongList,\r\n  getSingerMvList,\r\n  getSingerAlbum,\r\n} from \"@/api/api\";\r\nimport { transMusicTime, transPlayCount, download } from \"@/utils/commonApi\";\r\nimport songlist from \"@/components/songlist.vue\";\r\nexport default {\r\n  components: {\r\n    songlist,\r\n  },\r\n  // props: ['artist.id'],\r\n  data() {\r\n    return {\r\n      //歌手信息\r\n      artist: {\r\n        alias: [],\r\n        musicSize: \"\",\r\n      },\r\n      songList: [],\r\n      albumList: [],\r\n      mvList: [],\r\n      tagSwitch: {\r\n        detailSwitch: true,\r\n        songSwitch: false,\r\n        albumSwitch: false,\r\n        mvSwitch: false,\r\n      },\r\n\r\n      songcurrentPage: 1,\r\n      albumcurrentPage: 1,\r\n      mvcurrentPage: 1,\r\n    };\r\n  },\r\n  mounted() {\r\n    this.getSingerDetail();\r\n    // 判断路由传入了歌手信息还是歌手id\r\n    if (this.$route.params.artist) {\r\n      //路由直接传入了歌手详情\r\n      this.artist = this.$route.params.artist;\r\n      localStorage.setItem(\"artist\", JSON.stringify(this.$route.params.artist));\r\n    } else {\r\n      //当路由传入的是id时\r\n      if (this.$route.params.id) {\r\n        this.getSingerDetail();\r\n      }\r\n      //刷新页面会走向这，可以直接从缓存获取\r\n      this.artist = JSON.parse(localStorage.getItem(\"artist\"));\r\n    }\r\n    //判断是否使用缓存\r\n    this.$route.params.artist\r\n      ? (this.artist = this.$route.params.artist)\r\n      : (this.artist = JSON.parse(localStorage.getItem(\"artist\")));\r\n    this.getSingerDesc();\r\n  },\r\n  methods: {\r\n    //显示歌手单曲、专辑、mv列表开关\r\n    switchChange(tag) {\r\n      var that = this;\r\n      for (let key in that.tagSwitch) {\r\n        if (key != tag) {\r\n          that.tagSwitch[key] = false;\r\n        }\r\n      }\r\n      that.tagSwitch[tag] = true;\r\n    },\r\n    //获取歌手详情\r\n    getSingerDetail() {\r\n      // id:4292 李荣浩\r\n      getSingerDetail({ id: this.$route.params.id })\r\n        .then(async (res) => {\r\n          if (res.data.code === 200) {\r\n            this.artist = await res.data.artist;\r\n            // console.log(\"歌手详情--\", res.data.artist);\r\n            localStorage.setItem(\"artist\", JSON.stringify(res.data.artist));\r\n          }\r\n        })\r\n        .catch((res) => {});\r\n    },\r\n    //获取歌手单曲列表\r\n    getSingerSongList(tag) {\r\n      var that = this;\r\n      let params = {\r\n        id: that.artist.id,\r\n        limit: 30,\r\n        offset: (that.songcurrentPage - 1) * 30,\r\n      };\r\n      that.detailShow = false;\r\n      that.songList = [];\r\n      getSingerSongList(params).then(async (res) => {\r\n        // console.log('歌手单曲列表：', res.data)\r\n        that.songList = await res.data.songs;\r\n        // that.songCount = res.data.total\r\n        //给每首曲子添加防抖\r\n        for (let item of that.songList) {\r\n          that.$set(item, \"timer\", true);\r\n        }\r\n        //转换时间\r\n        let dt = \"dt\";\r\n        transMusicTime(that.songList, dt);\r\n      });\r\n      that.switchChange(tag);\r\n    },\r\n    //获取歌手专辑列表\r\n    getSingerAlbum(tag) {\r\n      var that = this;\r\n\r\n      let params = {\r\n        id: that.artist.id,\r\n        limit: 6,\r\n        offset: (that.albumcurrentPage - 1) * 6,\r\n      };\r\n      that.detailShow = false;\r\n      that.albumList = [];\r\n      getSingerAlbum(params).then((res) => {\r\n        // console.log(\"歌手专辑列表\", res.data.hotAlbums);\r\n        that.albumList = res.data.hotAlbums;\r\n      });\r\n\r\n      that.switchChange(tag);\r\n    },\r\n    //获取歌手mv\r\n    getSingerMvList(tag) {\r\n      var that = this;\r\n      let params = {\r\n        id: that.artist.id,\r\n        limit: 8,\r\n        offset: (that.mvcurrentPage - 1) * 8,\r\n      };\r\n      that.mvList = [];\r\n      getSingerMvList(params).then(async (res) => {\r\n        // console.log(\"获取到的歌手MV：\", res.data.mvs);\r\n        that.mvList = await res.data.mvs;\r\n        // 转换时间单位\r\n        transMusicTime(that.mvList, \"duration\");\r\n        //转换播放量单位\r\n        transPlayCount(that.mvList, \"playCount\");\r\n      });\r\n      that.switchChange(tag);\r\n    },\r\n    //获取歌手描述\r\n    getSingerDesc() {\r\n      // console.log(Boolean(this.artist))\r\n      var that = this;\r\n      let params = {\r\n        id: that.artist.id,\r\n      };\r\n      getSingerDesc(params).then((res) => {\r\n        console.log(\"歌手描述\", res.data);\r\n        that.artist = res.data.artist;\r\n      });\r\n    },\r\n\r\n    //跳转到专辑详情\r\n    goAlbumDetail(albumId) {\r\n      this.$router.push({\r\n        name: \"albumDetail\",\r\n        params: {\r\n          albumId: albumId,\r\n        },\r\n      });\r\n    },\r\n    //跳转到播放MV页面\r\n    playMV(mvId) {\r\n      //获取mv播放链接\r\n      this.$router.push({\r\n        name: \"mvPlay\",\r\n        params: { mvId: mvId },\r\n      });\r\n    },\r\n\r\n    //歌手歌曲分页\r\n    songHandleCurrentChange: function (currentPage) {\r\n      // console.log(`当前页: ${currentPage}`);\r\n      var that = this;\r\n      that.songcurrentPage = currentPage;\r\n      that.getSingerSongList(\"songSwitch\");\r\n    },\r\n    //歌手专辑分页\r\n    albumHandleCurrentChange: function (currentPage) {\r\n      // console.log(`当前页: ${currentPage}`);\r\n      var that = this;\r\n      that.albumcurrentPage = currentPage;\r\n      that.getSingerAlbum(\"albumSwitch\");\r\n    },\r\n    // 歌手mv分页\r\n    mvHandleCurrentChange: function (currentPage) {\r\n      // console.log(`当前页: ${currentPage}`);\r\n      var that = this;\r\n      that.mvcurrentPage = currentPage;\r\n      that.getSingerMvList(\"mvSwitch\");\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.descript {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  color: aliceblue;\r\n  font-weight: bolder;\r\n  padding: 10px 20px;\r\n  border-radius: 20px 20px 0 0;\r\n  background: rgba(95, 158, 160, 0.11);\r\n  box-sizing: border-box;\r\n}\r\n\r\n.list-wrap {\r\n  margin: 10px auto 0;\r\n  padding: 0 20px 10px;\r\n  width: 1120px;\r\n  height: 720px;\r\n  border-radius: 20px;\r\n  background: rgba(95, 158, 160, 0.11);\r\n  box-sizing: border-box;\r\n\r\n  .ul {\r\n    height: 650px;\r\n    border-radius: 0 0 10px 10px;\r\n    background: rgba(95, 158, 160, 0.11);\r\n    // overflow-x: hidden;\r\n\r\n    // &::-webkit-scrollbar {\r\n    //   display: none;\r\n    // }\r\n    .details {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      margin: 0 auto 10px;\r\n      padding: 10px;\r\n      width: 96%;\r\n      height: 170px;\r\n      // border: 1px solid rgb(97, 226, 183);\r\n      border-radius: 10px;\r\n      background: rgba(95, 158, 160, 0.11);\r\n      box-sizing: border-box;\r\n\r\n      .details-img {\r\n        display: inline-block;\r\n        // width: 180px;\r\n        // height: 180px;\r\n        border-radius: 10px;\r\n\r\n        img {\r\n          width: 150px;\r\n          height: 150px;\r\n          border-radius: 10px;\r\n          transition: 0.2s;\r\n\r\n          &:hover {\r\n            transform: scale(1.03);\r\n          }\r\n        }\r\n      }\r\n\r\n      .detailsRight {\r\n        position: relative;\r\n        width: 820px;\r\n        height: 150px;\r\n        // background: rgb(181, 209, 152);\r\n\r\n        .option {\r\n          position: absolute;\r\n          bottom: 0;\r\n\r\n          .flexBetween {\r\n            .inline-block {\r\n              display: inline-block;\r\n              margin-right: 40px;\r\n              transition: 0.2s;\r\n\r\n              .musicSize {\r\n                color: rgb(193, 243, 226);\r\n                transition: 0.2s;\r\n\r\n                &:hover {\r\n                  color: rgb(109, 247, 201);\r\n                }\r\n              }\r\n\r\n              &:hover {\r\n                cursor: pointer;\r\n                // color: rgb(246, 255, 119);\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        .songTns {\r\n          width: 100%;\r\n          font-size: 14px;\r\n          overflow-x: hidden;\r\n\r\n          &::-webkit-scrollbar {\r\n            display: none;\r\n          }\r\n        }\r\n\r\n        .aliasClass {\r\n          position: absolute;\r\n          top: 69px;\r\n        }\r\n\r\n        .playListNickName,\r\n        .playListNickName2 {\r\n        }\r\n\r\n        .playListNickName {\r\n          display: inline-block;\r\n          margin-right: 20px;\r\n        }\r\n\r\n        .musicSize {\r\n          color: rgb(170, 240, 240);\r\n        }\r\n      }\r\n    }\r\n\r\n    .music-list {\r\n      display: flex;\r\n      padding: 10px 10px;\r\n      width: 1080px;\r\n      overflow: hidden;\r\n      color: rgba(255, 255, 255, 1);\r\n      font-weight: bolder;\r\n      -o-text-overflow: ellipsis;\r\n      text-overflow: ellipsis;\r\n      // background: rgba(95, 158, 160, 0.322);\r\n      transition: 0.2s;\r\n\r\n      .music-list-span {\r\n        display: inline-block;\r\n        width: 270px;\r\n        text-align: center;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n        white-space: nowrap;\r\n      }\r\n\r\n      .option {\r\n        display: inline-block;\r\n        width: 250px;\r\n        text-align: center;\r\n\r\n        span {\r\n          display: inline-block;\r\n          width: 30px;\r\n\r\n          &:hover {\r\n            cursor: pointer;\r\n          }\r\n        }\r\n      }\r\n\r\n      &:hover {\r\n        background: rgba(76, 152, 155, 0.527);\r\n      }\r\n    }\r\n  }\r\n\r\n  #albumList {\r\n    // width: 96%;\r\n    margin: 10 auto;\r\n    padding: 10px 20px;\r\n    width: 98%;\r\n    height: 460px;\r\n    border-radius: 10px;\r\n    background: rgba(95, 158, 160, 0.11);\r\n    box-sizing: border-box;\r\n    overflow: hidden;\r\n\r\n    // overflow-x: hidden;\r\n    // &::-webkit-scrollbar {\r\n    //   display: none;\r\n    // }\r\n    .liWrap {\r\n      display: flex;\r\n      justify-content: space-around;\r\n      margin: 0 auto 10px;\r\n      padding: 0 10px;\r\n      // width: 95%;\r\n      height: 60px;\r\n      border-radius: 12px;\r\n      background: rgba(95, 158, 160, 0.11);\r\n      box-sizing: border-box;\r\n      transition: 0.2s;\r\n\r\n      &:hover {\r\n        transform: scale(1.01);\r\n      }\r\n\r\n      .liWrap-block1 {\r\n        width: 60px;\r\n        height: 60px;\r\n        border-radius: 10px;\r\n        // background-color: rgba(178, 244, 151, 1);\r\n        transition: 0.2s;\r\n\r\n        img {\r\n          width: 100%;\r\n          height: 100%;\r\n          border-radius: 10px;\r\n        }\r\n\r\n        &:hover {\r\n          transform: scale(1.05);\r\n          cursor: pointer;\r\n        }\r\n      }\r\n\r\n      .liWrap-block2 {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        padding: 10px;\r\n        width: 920px;\r\n        height: 60px;\r\n        font-size: 15px;\r\n        border-radius: 10px;\r\n        line-height: 40px;\r\n        box-sizing: border-box;\r\n        // background-color: rgba(226, 214, 156, 0.075);\r\n        transition: 0.2s;\r\n\r\n        span {\r\n          &:hover {\r\n            color: rgba(109, 255, 255, 0.753);\r\n          }\r\n        }\r\n\r\n        .div1 {\r\n          display: inline-block;\r\n          width: 520px;\r\n          text-overflow: ellipsis;\r\n          overflow: hidden;\r\n          white-space: nowrap;\r\n\r\n          .albumName {\r\n            display: inline-block;\r\n            max-width: 500px;\r\n            text-overflow: ellipsis;\r\n            overflow: hidden;\r\n            white-space: nowrap;\r\n            color: rgb(196, 255, 250);\r\n            transition: 0.2s;\r\n\r\n            span {\r\n              &:hover {\r\n                color: rgba(97, 252, 252, 0.979);\r\n              }\r\n            }\r\n\r\n            &:hover {\r\n              color: rgba(97, 252, 252, 0.979);\r\n            }\r\n          }\r\n\r\n          &:hover {\r\n            color: rgba(97, 252, 252, 0.979);\r\n          }\r\n        }\r\n\r\n        .divOther {\r\n          display: inline-block;\r\n          width: 200px;\r\n          overflow: hidden;\r\n          text-overflow: ellipsis;\r\n          white-space: nowrap;\r\n          // text-align: left;\r\n          margin-right: 5px;\r\n\r\n          span {\r\n            color: rgb(196, 255, 250);\r\n            transition: 0.2s;\r\n\r\n            &:hover {\r\n              color: rgba(97, 252, 252, 0.979);\r\n            }\r\n          }\r\n        }\r\n\r\n        &:hover {\r\n          // color: rgba(97, 252, 252, 0.979);\r\n          transform: scale(1.01);\r\n          cursor: pointer;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .singerDetail {\r\n    margin: 0 auto;\r\n    padding: 10px;\r\n    width: 96%;\r\n    height: 420px;\r\n    border-radius: 10px;\r\n    background: rgba(95, 158, 160, 0.11);\r\n    box-sizing: border-box;\r\n\r\n    .briefDesc {\r\n      text-indent: 2em;\r\n    }\r\n  }\r\n\r\n  #singleSongs {\r\n    margin: 0 auto;\r\n    padding: 0px 10px 20px;\r\n    width: 96%;\r\n    height: 460px;\r\n    border-radius: 10px;\r\n    background: rgba(95, 158, 160, 0.05);\r\n    box-sizing: border-box;\r\n    overflow: hidden;\r\n    // overflow-x: hidden;\r\n\r\n    // &::-webkit-scrollbar {\r\n    //   display: none;\r\n    // }\r\n\r\n    .SingsList {\r\n      position: relative;\r\n      display: flex;\r\n      justify-content: space-between;\r\n      margin: 5px auto;\r\n      width: 100%;\r\n      height: 30px;\r\n      line-height: 30px;\r\n      padding: 0 10px;\r\n      background-color: rgba(99, 187, 162, 0.144);\r\n      border-radius: 15px;\r\n      box-sizing: border-box;\r\n      line-height: 30px;\r\n      transition: 0.2s;\r\n\r\n      .song-list {\r\n        display: inline-block;\r\n        text-align: center;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n        white-space: nowrap;\r\n      }\r\n\r\n      .song-list-option {\r\n        position: absolute;\r\n        width: 130px;\r\n        right: 10px;\r\n\r\n        span {\r\n          display: inline-block;\r\n          margin: 0 5px;\r\n          transition: 0.2s;\r\n\r\n          &:hover {\r\n            color: bisque;\r\n            cursor: pointer;\r\n          }\r\n        }\r\n      }\r\n\r\n      &:hover {\r\n        color: aqua;\r\n        transform: scale(1.01);\r\n      }\r\n    }\r\n  }\r\n\r\n  #singerMvs {\r\n    margin: 0 auto;\r\n    padding: 0px 10px 20px;\r\n    width: 96%;\r\n    height: 435px;\r\n    border-radius: 10px;\r\n    background: rgba(95, 158, 160, 0.11);\r\n    box-sizing: border-box;\r\n\r\n    // overflow-x: hidden;\r\n    // &::-webkit-scrollbar {\r\n    //   display: none;\r\n    // }\r\n    .videoPlaywrap {\r\n      display: flex;\r\n      margin: 0 auto;\r\n      justify-content: space-evenly;\r\n      flex-wrap: wrap; //根据宽度限制一行的盒子个数\r\n      margin: 10px 0;\r\n      width: 98%;\r\n      background: transparent;\r\n      // overflow-x: hidden;\r\n\r\n      .videoPlayList {\r\n        margin-bottom: 10px;\r\n        width: 220px;\r\n        height: 180px;\r\n        border-radius: 10px;\r\n        box-sizing: border-box;\r\n\r\n        .videoImage {\r\n          position: relative;\r\n          margin-bottom: 10px;\r\n          width: 220px;\r\n          height: 132px;\r\n          border-radius: 10px;\r\n          overflow: hidden;\r\n          transition: 0.2s;\r\n\r\n          &:hover {\r\n            transform: scale(1.05);\r\n            cursor: pointer;\r\n          }\r\n\r\n          .videoImg {\r\n            position: absolute;\r\n            width: 100%;\r\n            height: 100%;\r\n          }\r\n\r\n          .videoPlayTime {\r\n            position: absolute;\r\n            z-index: 99;\r\n            background: transparent;\r\n          }\r\n        }\r\n\r\n        .briefDesc {\r\n          font-size: 15px;\r\n          padding: 0 10px;\r\n          // width: 100%;\r\n          transition: 0.2s;\r\n          overflow: hidden;\r\n          /*必须结合的属性,当内容溢出元素框时发生的事情*/\r\n          text-overflow: ellipsis;\r\n          /*可以用来多行文本的情况下，用省略号“…”隐藏超出范围的文本 。*/\r\n          display: -webkit-box;\r\n          /*必须结合的属性 ，将对象作为弹性伸缩盒子模型显示 。*/\r\n          -webkit-line-clamp: 2;\r\n          /*用来限制在一个块元素显示的文本的行数。*/\r\n          -webkit-box-orient: vertical;\r\n\r\n          /*必须结合的属性 ，设置或检索伸缩盒对象的子元素的排列方式 。*/\r\n          span {\r\n            &:hover {\r\n              color: rgb(145, 245, 228);\r\n              cursor: pointer;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .song-album-wrap {\r\n    height: 420px;\r\n    // background: #8eb89e;\r\n    overflow-x: hidden;\r\n\r\n    &::-webkit-scrollbar {\r\n      display: none;\r\n    }\r\n  }\r\n}\r\n\r\n.pagination {\r\n  text-align: center;\r\n  background: none !important;\r\n\r\n  /deep/ .el-pager {\r\n    height: 30px !important;\r\n    background: none !important;\r\n  }\r\n\r\n  /deep/ .number,\r\n  /deep/ .btn-prev,\r\n  /deep/ .btn-quicknext,\r\n  /deep/ .btn-next,\r\n  /deep/ .el-input__inner,\r\n  /deep/ .more {\r\n    color: #f2fff7 !important;\r\n    background: transparent !important;\r\n  }\r\n\r\n  /deep/ .number:hover,\r\n  /deep/ .btn-prev:hover,\r\n  /deep/ .btn-quicknext:hover,\r\n  /deep/ .btn-next:hover,\r\n  /deep/ .el-input__inner:hover,\r\n  /deep/ .more:hover {\r\n    color: #f7a588 !important;\r\n  }\r\n\r\n  /deep/ .active {\r\n    color: #f7a588 !important;\r\n  }\r\n\r\n  /deep/ .el-input__inner {\r\n    border: none;\r\n  }\r\n\r\n  /deep/ .el-pagination__jump {\r\n    color: #f7dd88 !important;\r\n  }\r\n}\r\n\r\n.iconhover {\r\n  transition: 0.2s;\r\n\r\n  &:hover {\r\n    color: rgb(247, 243, 45);\r\n  }\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}