{"ast":null,"code":"import _defineProperty from \"D:/data/\\u684C\\u9762/\\u4EE3\\u7801\\u6587\\u4EF6\\u5939/git/cloudMusic-Source-Code-main/cloudMusic-Source-Code-main/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _asyncToGenerator from \"D:/data/\\u684C\\u9762/\\u4EE3\\u7801\\u6587\\u4EF6\\u5939/git/cloudMusic-Source-Code-main/cloudMusic-Source-Code-main/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.function.name.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getDownloadUrl as _getDownloadUrl, getSongDetails as _getSongDetails, getSongComment as _getSongComment } from \"@/api/api\";\nimport { likeMusic as _likeMusic } from \"@/api/needLogin/musicOperate\";\nimport { download, transMusicTime } from \"@/utils/commonApi\";\nexport default {\n  // props: ['songId'],\n  data: function data() {\n    return {\n      //评论分页\n      currentPage: 1,\n      songUrlAdd: null,\n      // songId: '', //接收的歌曲id\n      songDetails: {\n        al: {\n          picUrl: \"\"\n        },\n        ar: [{\n          name: \"\"\n        }],\n        alia: [],\n        fee: 0\n      },\n      //歌曲详情\n      songComment: [],\n      commentCount: 0,\n      //搜索歌曲总数\n      count: 0\n    };\n  },\n  created: function created() {\n    //路由中含有歌曲详细信息时，直接使用\n    if (this.$route.params.songDetails) {\n      this.songDetails = this.$route.params.songDetails;\n      localStorage.setItem(\"songDetails\", JSON.stringify(this.$route.params.songDetails));\n      this.getSongComment(this.songDetails.id);\n    } else {\n      //路由只设置了歌曲id时，便发起请求获取歌曲信息。反之若都没有，代表只是刷新了页面，直接使用缓存获取路由信息\n      if (this.$route.params.id) {\n        this.getSongDetails();\n        this.getSongComment(this.$route.params.id);\n      } else {\n        this.songDetails = JSON.parse(localStorage.getItem(\"songDetails\"));\n        this.getSongComment(this.songDetails.id);\n      }\n    }\n  },\n  methods: _defineProperty({\n    // 分页\n    songhandleCurrentChange: function songhandleCurrentChange(currentPage) {\n      var that = this;\n      that.currentPage = currentPage;\n      that.getSongComment();\n    },\n    // 获取歌曲详情\n    getSongDetails: function getSongDetails() {\n      var that = this;\n      var params = {\n        ids: this.$route.params.id\n      };\n\n      _getSongDetails(params).then( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(res) {\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return res.data.songs[0];\n\n                case 2:\n                  that.songDetails = _context.sent;\n                  that.$set(that.songDetails, \"timer\", true);\n                  transMusicTime(that.songDetails, \"dt\");\n                  localStorage.setItem(\"songDetails\", JSON.stringify(that.songDetails)); // console.log(\"歌曲详情\", res.data.songs[0]);\n\n                case 6:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    },\n    //获取歌曲评论\n    getSongComment: function getSongComment(id) {\n      var that = this;\n      var params = {\n        id: id,\n        limit: 7,\n        offset: (that.currentPage - 1) * 7\n      };\n\n      _getSongComment(params).then(function (res) {\n        that.songComment = res.data.comments;\n        that.commentCount = res.data.total; // console.log(\"歌曲评论：\", res.data);\n      });\n    },\n    //喜欢/取消喜欢音乐\n    likeMusic: function likeMusic(id, like) {\n      var _this = this;\n\n      var loading = this.$loading({\n        target: \"#like_detail\",\n        background: \"rgba(255,255,255,0.1)\"\n      });\n\n      _likeMusic({\n        id: id,\n        like: like\n      }).then(function (res) {\n        _this.$nextTick(function () {\n          loading.close();\n        });\n\n        if (res.data.code === 200) {\n          if (like) {\n            _this.$message.success(\"已添加入我的喜欢-可进入网易云音乐查看\");\n\n            return;\n          }\n\n          _this.$message.success(\"已从我的喜欢列表删除\");\n        }\n      }).catch(function (error) {\n        _this.$nextTick(function () {\n          loading.close();\n        });\n      });\n    },\n    //试听音乐\n    listenMusic: function listenMusic(songDetails) {\n      // console.log('歌曲信息---：',songDetails)\n      if (songDetails.timer) {\n        //获取播放音乐链接\n        if (songDetails.noCopyrightRcmd) {\n          this.$message.error(\"这首歌暂无版权\");\n          songDetails.timer = false;\n          setTimeout(function () {\n            songDetails.timer = true;\n          }, 3000);\n          return;\n        }\n\n        if (songDetails.fee == 1) {\n          this.$message({\n            message: \"VIP歌曲 - 只能试听30s\",\n            type: \"warning\"\n          });\n        } // 获取歌词\n        // getSongLyric({\n        //   id: id,\n        // }).then((res) => {\n        //   songlrc = res.data.lrc.lyric;\n        // }),\n\n\n        this.$store.commit(\"aplayer/addAUDITION\", {\n          name: songDetails.name,\n          //歌曲名\n          artist: songDetails.ar[0].name,\n          //作者\n          // url: songUrlAdd,\n          url: \"https://music.163.com/song/media/outer/url?id=\".concat(songDetails.id, \".mp3\"),\n          cover: songDetails.al.picUrl,\n          //   lrc: songlrc,\n          id: songDetails.id\n        });\n        songDetails.timer = false;\n        setTimeout(function () {\n          songDetails.timer = true;\n        }, 3000);\n      }\n    },\n    //添加歌曲到播放列表\n    playMusic: function playMusic(songDetails) {\n      if (songDetails.timer) {\n        //获取播放音乐链接\n        if (songDetails.noCopyrightRcmd) {\n          this.$message.error(\"这首歌暂无版权\");\n          songDetails.timer = false;\n          setTimeout(function () {\n            songDetails.timer = true;\n          }, 3000);\n          return;\n        }\n\n        if (songDetails.fee == 1) {\n          this.$message.warning(\"VIP歌曲 - 只能试听30s\");\n        } // 获取歌词\n        // getSongLyric({\n        //   id: id,\n        // }).then((res) => {\n        //   songlrc = res.data.lrc.lyric;\n        // }),\n\n\n        this.$store.commit(\"aplayer/addSONG\", {\n          name: songDetails.name,\n          //歌曲名\n          artist: songDetails.ar[0].name,\n          //作者\n          // url: songUrlAdd,\n          url: \"https://music.163.com/song/media/outer/url?id=\".concat(songDetails.id, \".mp3\"),\n          cover: songDetails.al.picUrl,\n          //   lrc: songlrc,\n          id: songDetails.id\n        });\n        songDetails.timer = false;\n        setTimeout(function () {\n          songDetails.timer = true;\n        }, 3000);\n      }\n    },\n    playMV: function playMV(mvId) {\n      //获取mv播放链接\n      this.$router.push({\n        name: \"mvPlay\",\n        params: {\n          mvId: mvId\n        }\n      });\n    },\n    //获取歌曲下载地址\n    getDownloadUrl: function getDownloadUrl(songId, songName) {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var that, params;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                that = _this2;\n                that.$message.warning(\"正在尝试下载\");\n                params = {\n                  id: songId\n                };\n                _context3.next = 5;\n                return _getDownloadUrl(params).then( /*#__PURE__*/function () {\n                  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(res) {\n                    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                      while (1) {\n                        switch (_context2.prev = _context2.next) {\n                          case 0:\n                            _context2.next = 2;\n                            return download(res.data.data[0].url, songName);\n\n                          case 2:\n                            that.$message.success(\"可以开始下载了\");\n\n                          case 3:\n                          case \"end\":\n                            return _context2.stop();\n                        }\n                      }\n                    }, _callee2);\n                  }));\n\n                  return function (_x2) {\n                    return _ref2.apply(this, arguments);\n                  };\n                }());\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }))();\n    },\n    //进入歌手页面\n    goSingerDetail: function goSingerDetail(id) {\n      // let routerInfo = {\n      //   name: \"singerDetail\",\n      //   params: {\n      //     id: id,\n      //   },\n      // };\n      // this.$router.push({\n      //   name: \"emptyPage\",\n      //   params: routerInfo,\n      // });\n      this.$router.push({\n        name: \"singerDetail\",\n        params: {\n          id: id\n        }\n      });\n    }\n  }, \"playMV\", function playMV(mvId) {\n    //获取mv播放链接\n    this.$router.push({\n      name: \"mvPlay\",\n      params: {\n        mvId: mvId\n      }\n    });\n  })\n};","map":null,"metadata":{},"sourceType":"module"}