{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport Vue from 'vue';\nimport VueRouter from 'vue-router';\nimport HomePage from '@/views/home/HomePage.vue';\nVue.use(VueRouter);\nvar routes = [{\n  path: \"/\",\n  name: \"HomePage\",\n  component: HomePage\n}, // 首页\n{\n  path: \"/HomePage\",\n  name: \"HomePage\",\n  redirect: {\n    name: \"recommend\"\n  },\n  component: function component() {\n    return import(\"@/views/home/HomePage.vue\");\n  },\n  children: [{\n    //个性推荐\n    path: \"/HomePage/recommend\",\n    name: \"recommend\",\n    component: function component() {\n      return import(\"@/views/recommend/index.vue\");\n    }\n  }, {\n    //歌单分类\n    path: \"/HomePage/playlistCategary\",\n    name: \"playlistCategary\",\n    component: function component() {\n      return import(\"@/views/categery/playlistCategary.vue\");\n    }\n  }, {\n    //歌手分类\n    path: \"/HomePage/singerCategary\",\n    name: \"singerCategary\",\n    component: function component() {\n      return import(\"@/views/categery/singerCategary.vue\");\n    }\n  }]\n}, {\n  path: \"/emptyPage\",\n  name: \"emptyPage\",\n  component: function component() {\n    return import(\"@/components/emptyPage.vue\");\n  }\n}, //搜索的音乐页面\n{\n  path: \"/MusicPlayList\",\n  name: \"MusicPlayList\",\n  component: function component() {\n    return import(\"@/views/musiclist/MusicPlayList.vue\");\n  }\n}, //歌曲详情\n{\n  path: \"/songDetails\",\n  name: \"songDetails\",\n  component: function component() {\n    return import(\"@/views/songDetails/songDetails.vue\");\n  },\n  props: true\n}, //专辑详情\n{\n  path: \"/albumDetail\",\n  name: \"albumDetail\",\n  component: function component() {\n    return import(\"@/views/albumDetail/albumDetail.vue\");\n  },\n  props: true\n}, //歌手详情\n{\n  path: \"/singerDetail\",\n  name: \"singerDetail\",\n  component: function component() {\n    return import(\"@/views/singerDetail/singerDetail.vue\");\n  },\n  props: true\n}, //歌单详情\n{\n  path: '/playListDetails',\n  name: 'playListDetails',\n  component: function component() {\n    return import(\"@/views/playListDetails/playListDetails.vue\");\n  },\n  props: true\n}, //MV页面\n{\n  path: \"/mvPlay\",\n  name: \"mvPlay\",\n  component: function component() {\n    return import(\"@/views/mvPlay/mvPlay.vue\");\n  },\n  props: true,\n  meta: {\n    login: true,\n    met: false\n  } // meta: { keepAlive: true }\n\n}, //视频页面\n{\n  path: \"/videoPlay\",\n  name: \"videoPlay\",\n  component: function component() {\n    return import(\"@/views/videoPlay/videoPlay.vue\");\n  },\n  props: true // meta: { keepAlive: true }\n  // 独享路由\n  // beforeEnter(to,from,next){\n  //   if(from.path=='/MusicPlayList'){\n  //     next()\n  //     // alert('buyun')\n  //   }\n  // },\n  //\n  // afterEnter(to,from,next){\n  // }\n\n}]; // 前置路由\n// router.beforeEach((to,from,next)=>{\n//   if(to.name === 'videoPlay' || to.meta.met === false) {\n//     alert('不允许进入')\n//   }else{\n//     next()\n//   }\n// })\n//后置路由\n// router.afterEach((to,from,next)=>{\n// })\n// //还有组件内路由如下,组件内使用\n// beforRouteEnter(to,from,next){\n// }\n// befroeRouteLeave(to,from,next){\n// }\n// beforeRouteUpdate(to,from,next){\n// }\n//去除首页导航重复导航相同页面报错 ：Avoided redundant navigation to current location:\n\nvar router = new VueRouter({\n  mode: 'history',\n  routes: routes\n}); // const originalPush = VueRouter.prototype.push\n// VueRouter.prototype.push = function push(location) {\n//   return originalPush.call(this, location).catch(err => err)\n// }\n\nexport default router;","map":{"version":3,"sources":["D:/data/桌面/git/cloudMusic-Source-Code/src/router/index.js"],"names":["Vue","VueRouter","HomePage","use","routes","path","name","component","redirect","children","props","meta","login","met","router","mode"],"mappings":"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","sourcesContent":["import Vue from 'vue'\r\nimport VueRouter from 'vue-router'\r\nimport HomePage from '@/views/home/HomePage.vue'\r\n\r\n\r\nVue.use(VueRouter)\r\n\r\n\r\nconst routes = [\r\n  {\r\n    path: \"/\",\r\n    name: \"HomePage\",\r\n    component: HomePage\r\n  },\r\n  // 首页\r\n  {\r\n    path: \"/HomePage\",\r\n    name: \"HomePage\",\r\n    redirect: { name: \"recommend\" },\r\n    component: () => import(\"@/views/home/HomePage.vue\"),\r\n    children: [\r\n      {//个性推荐\r\n        path: \"/HomePage/recommend\",\r\n        name: \"recommend\",\r\n        component: () => import(\"@/views/recommend/index.vue\")\r\n      },\r\n      {//歌单分类\r\n        path: \"/HomePage/playlistCategary\",\r\n        name: \"playlistCategary\",\r\n        component: () => import(\"@/views/categery/playlistCategary.vue\")\r\n      },\r\n      {//歌手分类\r\n        path: \"/HomePage/singerCategary\",\r\n        name: \"singerCategary\",\r\n        component: () => import(\"@/views/categery/singerCategary.vue\")\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    path: \"/emptyPage\",\r\n    name: \"emptyPage\",\r\n    component: () => import(\"@/components/emptyPage.vue\")\r\n  },\r\n  //搜索的音乐页面\r\n  {\r\n    path: \"/MusicPlayList\",\r\n    name: \"MusicPlayList\",\r\n    component: () => import(\"@/views/musiclist/MusicPlayList.vue\"),\r\n  },\r\n  //歌曲详情\r\n  {\r\n    path: \"/songDetails\",\r\n    name: \"songDetails\",\r\n    component: () => import(\"@/views/songDetails/songDetails.vue\"),\r\n    props: true,\r\n  },\r\n  //专辑详情\r\n  {\r\n    path: \"/albumDetail\",\r\n    name: \"albumDetail\",\r\n    component: () => import(\"@/views/albumDetail/albumDetail.vue\"),\r\n    props: true,\r\n  },\r\n  //歌手详情\r\n  {\r\n    path: \"/singerDetail\",\r\n    name: \"singerDetail\",\r\n    component: () => import(\"@/views/singerDetail/singerDetail.vue\"),\r\n    props: true,\r\n  },\r\n  //歌单详情\r\n  {\r\n    path: '/playListDetails',\r\n    name: 'playListDetails',\r\n    component: () => import(\"@/views/playListDetails/playListDetails.vue\"),\r\n    props: true,\r\n  },\r\n  //MV页面\r\n  {\r\n    path: \"/mvPlay\",\r\n    name: \"mvPlay\",\r\n    component: () => import(\"@/views/mvPlay/mvPlay.vue\"),\r\n    props: true,\r\n    meta: {\r\n      login: true,\r\n      met: false\r\n    },\r\n\r\n\r\n    // meta: { keepAlive: true }\r\n  },\r\n  //视频页面\r\n  {\r\n    path: \"/videoPlay\",\r\n    name: \"videoPlay\",\r\n    component: () => import(\"@/views/videoPlay/videoPlay.vue\"),\r\n    props: true,\r\n    // meta: { keepAlive: true }\r\n    // 独享路由\r\n    // beforeEnter(to,from,next){\r\n    //   if(from.path=='/MusicPlayList'){\r\n    //     next()\r\n    //     // alert('buyun')\r\n    //   }\r\n    // },\r\n    //\r\n    // afterEnter(to,from,next){\r\n\r\n    // }\r\n  },\r\n]\r\n\r\n// 前置路由\r\n// router.beforeEach((to,from,next)=>{\r\n//   if(to.name === 'videoPlay' || to.meta.met === false) {\r\n//     alert('不允许进入')\r\n//   }else{\r\n//     next()\r\n//   }\r\n// })\r\n\r\n//后置路由\r\n// router.afterEach((to,from,next)=>{\r\n\r\n// })\r\n// //还有组件内路由如下,组件内使用\r\n// beforRouteEnter(to,from,next){\r\n\r\n// }\r\n// befroeRouteLeave(to,from,next){\r\n\r\n// }\r\n// beforeRouteUpdate(to,from,next){\r\n\r\n// }\r\n\r\n//去除首页导航重复导航相同页面报错 ：Avoided redundant navigation to current location:\r\nconst router = new VueRouter({\r\n  mode: 'history',\r\n  routes\r\n})\r\n// const originalPush = VueRouter.prototype.push\r\n// VueRouter.prototype.push = function push(location) {\r\n//   return originalPush.call(this, location).catch(err => err)\r\n// }\r\nexport default router\r\n"]},"metadata":{},"sourceType":"module"}