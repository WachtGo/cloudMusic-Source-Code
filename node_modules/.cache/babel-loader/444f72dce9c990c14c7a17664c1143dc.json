{"ast":null,"code":"import _createForOfIteratorHelper from \"D:/data/\\u684C\\u9762/git/cloudMusic-Source-Code/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport createPersistedState from \"vuex-persistedstate\";\nexport default {\n  namespaced: true,\n  state: {\n    // 歌曲生成周期\n    plugins: [createPersistedState({\n      key: 'aplayer',\n      storage: window.sessionStorage,\n      whiteList: ['audio', 'audition', 'musicAudioStatu', alplayShow]\n    })],\n    audio: [],\n    //播放列表音乐\n    audition: [],\n    //试听歌曲\n    musicAudioStatu: 0,\n    //控制audio,audition两个播放器显示\n    alplayShow: true\n  },\n  actions: {},\n  mutations: {\n    //播放器添加歌曲\n    addSONG: function addSONG(state, song) {\n      var _iterator = _createForOfIteratorHelper(state.audio),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var item = _step.value;\n\n          if (item.id === song.id) {\n            this._vm.$message(\"播放列表已存在这首歌\");\n\n            return;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      state.audio.push(song); //将歌曲添加\n\n      this._vm.$message({\n        type: \"success\",\n        message: \"歌曲已添加到播放列表\"\n      });\n    },\n    //删除歌曲\n    deleteMUSIC: function deleteMUSIC(state, index) {\n      state.audio.splice(index, 1);\n\n      this._vm.$message({\n        type: \"success\",\n        message: \"歌曲已移出播放列表\"\n      });\n    },\n    //添加试听\n    addAUDITION: function addAUDITION(state, song) {\n      var _iterator2 = _createForOfIteratorHelper(state.audition),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var item = _step2.value;\n\n          if (item.id === song.id) {\n            this._vm.$message(\"正在试听这首歌\");\n\n            return;\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      state.musicAudioStatu = 1;\n      state.audition.splice(0, 1);\n      state.audition[0] = song; //将歌曲添加\n\n      this._vm.$message({\n        type: \"success\",\n        message: \"歌曲已添加到试听\"\n      });\n    },\n    // 删除试听\n    deleteAUDITION: function deleteAUDITION(state, index) {\n      state.audition.splice(index, 1);\n\n      this._vm.$message({\n        type: \"success\",\n        message: \"歌曲已移出试听列表\"\n      });\n    },\n    //更换播放器\n    changeAPLAYER: function changeAPLAYER(state, statu) {\n      statu === 1 ? state.musicAudioStatu = 1 : state.musicAudioStatu = 0;\n    }\n  }\n};","map":{"version":3,"sources":["D:/data/桌面/git/cloudMusic-Source-Code/src/store/aplayer.js"],"names":["createPersistedState","namespaced","state","plugins","key","storage","window","sessionStorage","whiteList","alplayShow","audio","audition","musicAudioStatu","actions","mutations","addSONG","song","item","id","_vm","$message","push","type","message","deleteMUSIC","index","splice","addAUDITION","deleteAUDITION","changeAPLAYER","statu"],"mappings":"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","sourcesContent":["import createPersistedState from \"vuex-persistedstate\"\n\nexport default {\n  namespaced: true,\n  state: {\n    // 歌曲生成周期\n    plugins: [createPersistedState({\n      key: 'aplayer',\n      storage: window.sessionStorage,\n      whiteList: ['audio', 'audition', 'musicAudioStatu', alplayShow],\n    })],\n    audio: [], //播放列表音乐\n    audition: [], //试听歌曲\n    musicAudioStatu: 0, //控制audio,audition两个播放器显示\n    alplayShow: true,\n  },\n  actions: {},\n  mutations: {\n    //播放器添加歌曲\n    addSONG(state, song) {\n      for (let item of state.audio) {\n        if (item.id === song.id) {\n          this._vm.$message(\"播放列表已存在这首歌\");\n          return;\n        }\n      }\n      state.audio.push(song); //将歌曲添加\n      this._vm.$message({\n        type: \"success\",\n        message: \"歌曲已添加到播放列表\",\n      });\n    },\n    //删除歌曲\n    deleteMUSIC(state, index) {\n      state.audio.splice(index, 1);\n      this._vm.$message({\n        type: \"success\",\n        message: \"歌曲已移出播放列表\",\n      });\n    },\n    //添加试听\n    addAUDITION(state, song) {\n      for (let item of state.audition) {\n        if (item.id === song.id) {\n          this._vm.$message(\"正在试听这首歌\");\n          return;\n        }\n      }\n      state.musicAudioStatu = 1;\n      state.audition.splice(0, 1);\n      state.audition[0] = song; //将歌曲添加\n      this._vm.$message({\n        type: \"success\",\n        message: \"歌曲已添加到试听\",\n      });\n    },\n    // 删除试听\n    deleteAUDITION(state, index) {\n      state.audition.splice(index, 1);\n      this._vm.$message({\n        type: \"success\",\n        message: \"歌曲已移出试听列表\",\n      });\n    },\n    //更换播放器\n    changeAPLAYER(state, statu) {\n      statu === 1 ? (state.musicAudioStatu = 1) : (state.musicAudioStatu = 0);\n    },\n  },\n};\n"]},"metadata":{},"sourceType":"module"}