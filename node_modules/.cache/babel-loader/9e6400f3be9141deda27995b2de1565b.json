{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapMutations, mapState } from \"vuex\";\nimport { getSongDetails } from \"@/api/api\";\nimport { playMusic } from \"@/utils/musicPlay\";\nexport default {\n  data() {\n    return {};\n  },\n\n  computed: { ...mapState(\"aplayer\", [\"audio\", \"audition\", \"musicAudioStatu\"])\n  },\n\n  mounted() {},\n\n  methods: { ...mapMutations(\"aplayer\", [\"deleteMUSIC\", \"deleteAUDITION\", \"changeAPLAYER\"]),\n\n    //播放指定歌曲\n    async playMusic(idx) {\n      //await,防止还未切换播放器就开始请求，使得aplayer出现undefine\n      await this.changeAPLAYER(0); //切换播放器\n\n      let aplayer = this.$refs.aplayer; //获取当前播放器\n      // console.log(aplayer)\n\n      aplayer.switch(idx); //切换到播放当前下标的歌曲\n\n      aplayer.toggle(); //切换播放/暂停\n    },\n\n    //删除歌曲\n    deleteMusic(idx) {\n      // this.$store.commit('deleteMusic',idx)\n      this.deleteMUSIC(idx);\n    },\n\n    //试听的播放/暂停\n    async playAudition() {\n      await this.changeAPLAYER(1); //切换到试听播放器\n\n      let auditions = this.$refs.auditions; //获取当前播放器\n      // console.log(auditions)\n      // auditions.switch(0); //切换到播放当前下标的歌曲\n\n      auditions.toggle(); //切换播放/暂停\n    },\n\n    //删除试听\n    deleteAudition(idx) {\n      this.deleteAUDITION(idx);\n    },\n\n    //添加到播放列表\n    async addListenMusic(id) {\n      let that = this;\n      let list = \"audition\";\n      await getSongDetails({\n        ids: id\n      }).then(res => {\n        playMusic(id, res.data.songs[0].fee, 0, list, that);\n      });\n    }\n\n  },\n  directives: {\n    drag(el) {\n      // let dragBox = el.parentElement.parentElement; //获取移动的元素\n      let dragBox = document.getElementsByClassName(\"musicWrap\");\n\n      el.onmousedown = e => {\n        //鼠标点击时鼠标的的位置\n        // console.log(e)\n        // console.log(el.parentElement)\n        let downX = e.clientX;\n        let downY = e.clientY; //元素位置\n\n        let left = dragBox[0].offsetLeft;\n        let top = dragBox[0].offsetTop; // console.log(e.clientX,e.clientY)\n        // console.log('app位置：',dragBox.offsetLeft,dragBox.offsetTop)\n\n        document.onmousemove = e => {\n          //鼠标移动的距离\n          let moveX = e.clientX - downX;\n          let moveY = e.clientY - downY; // console.log('鼠标移动:',moveX,moveY)\n          //移动当前元素\n\n          dragBox[0].style.left = left + moveX + \"px\";\n          dragBox[0].style.top = top + moveY + \"px\";\n        };\n\n        document.onmouseup = e => {\n          //鼠标弹起来的时候不再移动\n          document.onmousemove = null; //预防鼠标弹起来后还会循环（即预防鼠标放上去的时候还会移动）\n\n          document.onmouseup = null;\n        };\n      };\n    }\n\n  }\n};","map":null,"metadata":{},"sourceType":"module"}