{"ast":null,"code":"import _asyncToGenerator from \"D:/data/\\u684C\\u9762/git/cloudMusic-Source-Code/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.search.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport \"core-js/modules/es.array.concat.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getSearchDefault as _getSearchDefault, getMusicInfo as _getMusicInfo } from \"@/api/api\";\nexport default {\n  data: function data() {\n    return {\n      searchSwitch: false,\n      //搜索窗口开关\n      searchTerms: \"\",\n      //输入框内容\n      placeholder: \"\",\n      musicList: [],\n      //搜索列表\n      inputTimer: null,\n      //搜索节流\n      reloadShow: null,\n      //是否在请求数据\n      page: 1,\n      //搜索列表页数\n      limit: 30,\n      //搜索每次请求的数\n      count: 15 //最后一次搜索请求的数量，用于判断是否全部加载完毕\n\n    };\n  },\n  directives: {\n    drag: function drag(el, binding) {\n      console.log(el); // let dragBox = el.parentElement.parentElement; //获取app元素\n\n      var dragBox = document.getElementById(\"app\");\n\n      el.onmousedown = function (e) {\n        //鼠标点击时鼠标的的位置\n        // console.log(e)\n        // console.log(el.parentElement)\n        var downX = e.clientX;\n        var downY = e.clientY; //元素位置\n\n        var left = dragBox.offsetLeft;\n        var top = dragBox.offsetTop; // console.log(e.clientX,e.clientY)\n        // console.log('app位置：',dragBox.offsetLeft,dragBox.offsetTop)\n\n        document.onmousemove = function (e) {\n          //鼠标移动的距离\n          var moveX = e.clientX - downX;\n          var moveY = e.clientY - downY; // console.log('鼠标移动:',moveX,moveY)\n          //移动当前元素\n\n          dragBox.style.left = left + moveX + \"px\";\n          dragBox.style.top = top + moveY + \"px\";\n        };\n\n        document.onmouseup = function (e) {\n          //鼠标弹起来的时候不再移动\n          document.onmousemove = null; //预防鼠标弹起来后还会循环（即预防鼠标放上去的时候还会移动）\n\n          document.onmouseup = null;\n        };\n      };\n    }\n  },\n  watch: {\n    searchTerms: function searchTerms() {\n      this.search();\n    }\n  },\n  mounted: function mounted() {\n    this.getSearchDefault();\n  },\n  methods: {\n    goBack: function goBack(val) {\n      this.$router.go(val);\n    },\n    goHome: function goHome() {\n      this.$router.push({\n        name: \"HomePage\"\n      });\n    },\n    switchChange: function switchChange() {\n      //显示搜索列表\n      this.searchSwitch = true;\n\n      if (!this.searchTerms.trim()) {\n        this.getMusicInfo(this.placeholder);\n      }\n    },\n    selectMusic: function selectMusic(keywords, artist) {\n      this.placeholder = \"\".concat(keywords, \"      \").concat(artist); // console.log(this.placeholder, \"---placeholde\");\n\n      this.searchTerms = \"\"; //选择歌曲进入列表\n\n      this.$router.push({\n        name: \"emptyPage\",\n        query: {\n          keywords: this.keywords,\n          reload: true\n        }\n      });\n      this.searchSwitch = false;\n    },\n    enterSearch: function enterSearch() {\n      if (!this.searchTerms.trim()) {\n        this.$router.push({\n          name: \"emptyPage\",\n          query: {\n            keywords: this.placeholder,\n            reload: true\n          }\n        });\n        this.searchTerms = this.placeholder;\n      } else {\n        this.$router.push({\n          name: \"emptyPage\",\n          query: {\n            keywords: this.searchTerms,\n            reload: true\n          }\n        });\n      }\n\n      this.searchSwitch = false;\n    },\n    search: function search() {\n      var _this = this;\n\n      //搜索列表\n      if (this.searchTerms.trim) {\n        if (this.inputTimer) {\n          clearTimeout(this.inputTimer);\n        }\n\n        this.inputTimer = setTimeout(function () {\n          _this.musicList = [];\n          _this.page = 1;\n\n          _this.getMusicInfo(_this.searchTerms);\n\n          clearTimeout(_this.inputTimer);\n        }, 500);\n      }\n    },\n    //搜索懒加载\n    searchScroll: function searchScroll() {\n      //获取现在滚动高度\n      var scrollTop = document.getElementById('search-box').scrollTop; // console.log('滚动高度----:',scrollTop)\n      // 获取可视区域高度\n\n      var clientHeight = document.getElementById('search-box').clientHeight; // 获取文档总高度\n\n      var scrollHeight = document.getElementById('search-box').scrollHeight; // 滚动到底部\n\n      if (scrollTop + clientHeight === scrollHeight) {\n        // console.log('到底部了');\n        // console.log(this.reloadShow,this.count)\n        if (this.reloadShow || this.limit > this.count) return;\n        this.page += 1;\n        this.getMusicInfo(this.searchTerms);\n      }\n    },\n    //搜索\n    getMusicInfo: function getMusicInfo(searchTerms) {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var params;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this2.reloadShow = true; //获取歌曲列表\n\n                params = {\n                  keywords: searchTerms,\n                  limit: _this2.limit,\n                  offset: _this2.limit * _this2.page,\n                  type: \"\"\n                };\n                _context.next = 4;\n                return _getMusicInfo(params).then(function (res) {\n                  // console.log(res)\n                  var listBox = res.data.result.songs;\n                  _this2.count = res.data.result.songCount; // this.count = res.data.result.songs.length;\n                  //将歌曲时长转换成分秒格式\n\n                  // this.count = res.data.result.songs.length;\n                  //将歌曲时长转换成分秒格式\n                  for (var i = 0; i < listBox.length; i++) {\n                    var min = parseInt(listBox[i].dt / 1000 / 60);\n                    var sec = parseInt(listBox[i].dt / 1000 % 60);\n\n                    if (min < 10) {\n                      min = \"0\" + min;\n                    }\n\n                    if (sec < 10) {\n                      sec = \"0\" + sec;\n                    }\n\n                    listBox[i].dt = min + \":\" + sec; // console.log(this.musicList[i].song.duration)\n                  }\n\n                  _this2.musicList = _this2.musicList.concat(listBox);\n                  _this2.reloadShow = false; // console.log(\"音乐列表：\", res.data.result.songs);\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    getSearchDefault: function getSearchDefault() {\n      var _this3 = this;\n\n      //默认搜索关键字\n      _getSearchDefault().then(function (res) {\n        _this3.placeholder = res.data.data.realkeyword; // console.log(\"搜索关键字：\", res.data.data);\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwDA;AACA;AACAA,MADA,kBACA;AACA;AACAC,yBADA;AACA;AACAC,qBAFA;AAEA;AACAC,qBAHA;AAIAC,mBAJA;AAIA;AACAC,sBALA;AAKA;AACAC,sBANA;AAMA;AACAC,aAPA;AAOA;AACAC,eARA;AAQA;AACAC,eATA,CASA;;AATA;AAWA,GAbA;AAcAC;AACAC,QADA,gBACAC,EADA,EACAC,OADA,EACA;AACAC,sBADA,CAEA;;AACA;;AACAF;AACA;AACA;AACA;AACA;AACA,8BALA,CAMA;;AACA;AACA,oCARA,CASA;AACA;;AACAG;AACA;AACA;AACA,wCAHA,CAIA;AAEA;;AACAC;AACAA;AACA,SATA;;AAUAD;AACA;AACAA,sCAFA,CAGA;;AACAA;AACA,SALA;AAMA,OA3BA;AA4BA;AAjCA,GAdA;AAiDAE;AACAf;AACA;AACA;AAHA,GAjDA;AAsDAgB,SAtDA,qBAsDA;AACA;AACA,GAxDA;AAyDAC;AACAC,UADA,kBACAC,GADA,EACA;AACA;AACA,KAHA;AAIAC,UAJA,oBAIA;AACA;AAAAC;AAAA;AACA,KANA;AAOAC,gBAPA,0BAOA;AACA;AACA;;AACA;AACA;AACA;AACA,KAbA;AAeAC,eAfA,uBAeAC,QAfA,EAeAC,MAfA,EAeA;AACA,sEADA,CAEA;;AACA,4BAHA,CAIA;;AACA;AACAJ,yBADA;AAEAK;AAAAF;AAAAG;AAAA;AAFA;AAIA;AACA,KAzBA;AA0BAC,eA1BA,yBA0BA;AACA;AACA;AACAP,2BADA;AAEAK;AAAAF;AAAAG;AAAA;AAFA;AAIA;AACA,OANA,MAMA;AACA;AACAN,2BADA;AAEAK;AAAAF;AAAAG;AAAA;AAFA;AAIA;;AACA;AACA,KAxCA;AAyCAE,UAzCA,oBAyCA;AAAA;;AACA;AACA;AACA;AACAC;AACA;;AACA;AACA;AACA;;AACA;;AACAA;AACA,SALA,EAKA,GALA;AAMA;AACA,KAtDA;AAwDA;AACAC,gBAzDA,0BAyDA;AACA;AACA,sEAFA,CAGA;AACA;;AACA,4EALA,CAMA;;AACA,4EAPA,CAQA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAzEA;AA0EA;AACAC,gBA3EA,wBA2EAhC,WA3EA,EA2EA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,yCADA,CAEA;;AACAiC,sBAHA,GAGA;AACAT,uCADA;AAEAlB,qCAFA;AAGA4B,oDAHA;AAIAC;AAJA,iBAHA;AAAA;AAAA,uBASAH;AACA;AACA;AACA,2DAHA,CAIA;AAEA;;AAFA;AAEA;AACA;AACA;AACA;;AACA;AACAI;AACA;;AACA;AACAC;AACA;;AACAC,oDATA,CAUA;AACA;;AACA;AACA,4CApBA,CAqBA;AACA,iBAtBA,CATA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiCA,KA5GA;AA6GAC,oBA7GA,8BA6GA;AAAA;;AACA;AACAA;AACA,uDADA,CAEA;AACA,OAHA;AAIA;AAnHA;AAzDA","names":["data","searchSwitch","searchTerms","placeholder","musicList","inputTimer","reloadShow","page","limit","count","directives","drag","el","binding","console","document","dragBox","watch","mounted","methods","goBack","val","goHome","name","switchChange","selectMusic","keywords","artist","query","reload","enterSearch","search","clearTimeout","searchScroll","getMusicInfo","params","offset","type","min","sec","listBox","getSearchDefault"],"sourceRoot":"src/components","sources":["HeaderNav.vue"],"sourcesContent":["<template>\r\n  <!-- 顶部栏 -->\r\n  <div>\r\n    \r\n      <header class=\"head\">\r\n        <div style=\"float: left;width: 100%;height: 100%;\" v-drag></div>\r\n        <!-- 首页 -->\r\n        <div class=\"left cl\" @click=\"goHome\" goHome>首页\r\n        </div>\r\n        <!-- 搜索框 -->\r\n        <div class=\"center cl\">\r\n          <div class=\"search\">\r\n            <div class=\"search-input\">\r\n              <input id=\"searchInput\" @focus=\"switchChange\" @blur=\"searchSwitch = false\" @keyup.enter=\"enterSearch\"\r\n                type=\"text\" :placeholder=\"placeholder\" v-model=\"searchTerms\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <!-- 返回 -->\r\n        <div class=\"right cl\">\r\n          <div class=\"gobackWrap\">\r\n            <div class=\"goBack\" @click=\"goBack(-1)\">&lt;</div>\r\n            &nbsp;\r\n            <div class=\"goBack\" @click=\"goBack(1)\">&gt;</div>\r\n          </div>\r\n        </div>\r\n        \r\n      </header>\r\n   \r\n\r\n    <!-- 搜索显示的搜索项列表 -->\r\n    <ul id=\"search-box\" v-show=\"searchSwitch\" @scroll=\"searchScroll\">\r\n      \r\n      <!-- searchSwitch -->\r\n      <li class=\"suggest-list\" v-for=\"(item, index) in musicList\" :key=\"index\"\r\n        @mousedown=\"selectMusic(item.name, item.ar[0].name)\">\r\n        <span class=\"suggest-list-music\" style=\"width: 310px\">{{\r\n          item.name\r\n        }}</span>\r\n        <span class=\"suggest-list-music\" style=\"width: 180px\">{{\r\n          item.ar[0].name\r\n        }}</span>\r\n        <span class=\"suggest-list-music\" style=\"width: 50px\">{{\r\n          item.dt\r\n        }}</span>\r\n      </li>\r\n      <h3 style=\"text-align: center\" v-if=\"reloadShow\">\r\n        <i class=\"el-icon-loading\"></i>\r\n      </h3>\r\n    </ul>\r\n\r\n    <!-- <router-view></router-view> -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getSearchDefault, getMusicInfo } from \"@/api/api\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      searchSwitch: false,//搜索窗口开关\r\n      searchTerms: \"\",//输入框内容\r\n      placeholder: \"\",\r\n      musicList: [],//搜索列表\r\n      inputTimer: null,//搜索节流\r\n      reloadShow:null,//是否在请求数据\r\n      page: 1,//搜索列表页数\r\n      limit: 30,//搜索每次请求的数\r\n      count:15,//最后一次搜索请求的数量，用于判断是否全部加载完毕\r\n    };\r\n  },\r\n  directives: {\r\n    drag(el,binding) {\r\n      console.log(el)\r\n      // let dragBox = el.parentElement.parentElement; //获取app元素\r\n      let dragBox = document.getElementById(\"app\");\r\n      el.onmousedown = (e) => {\r\n        //鼠标点击时鼠标的的位置\r\n        // console.log(e)\r\n        // console.log(el.parentElement)\r\n        let downX = e.clientX;\r\n        let downY = e.clientY;\r\n        //元素位置\r\n        let left = dragBox.offsetLeft;\r\n        let top = dragBox.offsetTop;\r\n        // console.log(e.clientX,e.clientY)\r\n        // console.log('app位置：',dragBox.offsetLeft,dragBox.offsetTop)\r\n        document.onmousemove = (e) => {\r\n          //鼠标移动的距离\r\n          let moveX = e.clientX - downX;\r\n          let moveY = e.clientY - downY;\r\n          // console.log('鼠标移动:',moveX,moveY)\r\n\r\n          //移动当前元素\r\n          dragBox.style.left = left + moveX + \"px\";\r\n          dragBox.style.top = top + moveY + \"px\";\r\n        };\r\n        document.onmouseup = (e) => {\r\n          //鼠标弹起来的时候不再移动\r\n          document.onmousemove = null;\r\n          //预防鼠标弹起来后还会循环（即预防鼠标放上去的时候还会移动）\r\n          document.onmouseup = null;\r\n        };\r\n      };\r\n    },\r\n  },\r\n  watch: {\r\n    searchTerms: function () {\r\n      this.search();\r\n    },\r\n  },\r\n  mounted() {\r\n    this.getSearchDefault();\r\n  },\r\n  methods: {\r\n    goBack(val) {\r\n      this.$router.go(val);\r\n    },\r\n    goHome() {\r\n      this.$router.push({ name: \"HomePage\" });\r\n    },\r\n    switchChange() {\r\n      //显示搜索列表\r\n      this.searchSwitch = true;\r\n      if (!this.searchTerms.trim()) {\r\n        this.getMusicInfo(this.placeholder);\r\n      }\r\n    },\r\n\r\n    selectMusic(keywords, artist) {\r\n      this.placeholder = `${keywords}      ${artist}`;\r\n      // console.log(this.placeholder, \"---placeholde\");\r\n      this.searchTerms = \"\";\r\n      //选择歌曲进入列表\r\n      this.$router.push({\r\n        name: \"emptyPage\",\r\n        query: { keywords: this.keywords, reload: true },\r\n      });\r\n      this.searchSwitch = false;\r\n    },\r\n    enterSearch() {\r\n      if (!this.searchTerms.trim()) {\r\n        this.$router.push({\r\n          name: \"emptyPage\",\r\n          query: { keywords: this.placeholder, reload: true },\r\n        });\r\n        this.searchTerms = this.placeholder;\r\n      } else {\r\n        this.$router.push({\r\n          name: \"emptyPage\",\r\n          query: { keywords: this.searchTerms, reload: true },\r\n        });\r\n      }\r\n      this.searchSwitch = false;\r\n    },\r\n    search() {\r\n      //搜索列表\r\n      if (this.searchTerms.trim) {\r\n        if (this.inputTimer) {\r\n          clearTimeout(this.inputTimer);\r\n        }\r\n        this.inputTimer = setTimeout(() => {\r\n          this.musicList = [];\r\n          this.page = 1;\r\n          this.getMusicInfo(this.searchTerms);\r\n          clearTimeout(this.inputTimer);\r\n        }, 500);\r\n      }\r\n    },\r\n\r\n    //搜索懒加载\r\n    searchScroll() {\r\n      //获取现在滚动高度\r\n      let scrollTop = document.getElementById('search-box').scrollTop\r\n      // console.log('滚动高度----:',scrollTop)\r\n      // 获取可视区域高度\r\n      let clientHeight = document.getElementById('search-box').clientHeight;\r\n      // 获取文档总高度\r\n      let scrollHeight = document.getElementById('search-box').scrollHeight;\r\n      // 滚动到底部\r\n      if (scrollTop + clientHeight === scrollHeight) {\r\n        // console.log('到底部了');\r\n        // console.log(this.reloadShow,this.count)\r\n        if(this.reloadShow || this.limit>this.count) return\r\n        this.page += 1\r\n        this.getMusicInfo(this.searchTerms);\r\n      }\r\n    },\r\n    //搜索\r\n   async getMusicInfo(searchTerms) {\r\n    this.reloadShow = true\r\n      //获取歌曲列表\r\n      let params = {\r\n        keywords: searchTerms,\r\n        limit: this.limit,\r\n        offset: this.limit * this.page,\r\n        type: \"\",\r\n      };\r\n     await getMusicInfo(params).then((res) => {\r\n        // console.log(res)\r\n        let listBox = res.data.result.songs;\r\n        this.count = res.data.result.songCount;\r\n        // this.count = res.data.result.songs.length;\r\n\r\n        //将歌曲时长转换成分秒格式\r\n        for (let i = 0; i < listBox.length; i++) {\r\n          let min = parseInt(listBox[i].dt / 1000 / 60);\r\n          let sec = parseInt((listBox[i].dt / 1000) % 60);\r\n          if (min < 10) {\r\n            min = \"0\" + min;\r\n          }\r\n          if (sec < 10) {\r\n            sec = \"0\" + sec;\r\n          }\r\n          listBox[i].dt = min + \":\" + sec;\r\n          // console.log(this.musicList[i].song.duration)\r\n        }\r\n        this.musicList = this.musicList.concat(listBox)\r\n        this.reloadShow = false\r\n        // console.log(\"音乐列表：\", res.data.result.songs);\r\n      });\r\n      \r\n    },\r\n    getSearchDefault() {\r\n      //默认搜索关键字\r\n      getSearchDefault().then((res) => {\r\n        this.placeholder = res.data.data.realkeyword;\r\n        // console.log(\"搜索关键字：\", res.data.data);\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.head {\r\n  position: relative;\r\n  display: flex;\r\n  align-content: center;\r\n  justify-content: space-between;\r\n  \r\n  height: 50px;\r\n  // line-height: 50px;\r\n  background: rgba(0, 0, 0, 0.05);\r\n  box-sizing: border-box;\r\n\r\n  .cl {\r\n    position: absolute;\r\n    height: 100%;\r\n    h3 {\r\n      height: 30px;\r\n      line-height: 30px;\r\n      transition: 0.2s;\r\n\r\n      &:hover {\r\n        cursor: pointer;\r\n        color: rgb(95, 205, 248);\r\n      }\r\n    }\r\n\r\n    .gobackWrap {\r\n      display: flex;\r\n      align-content: center;\r\n      justify-content: center;\r\n      height: 30px;\r\n      line-height: 30px;\r\n      transition: 0.2s;\r\n\r\n      .goBack {\r\n        width: 30px;\r\n        height: 30px;\r\n        line-height: 30px;\r\n        font-size: 15px;\r\n        font-weight: bolder;\r\n        text-align: center;\r\n        transition: 0.2s;\r\n\r\n        &:hover {\r\n          color: rgb(32, 147, 192);\r\n        }\r\n      }\r\n\r\n      &:hover {\r\n        cursor: pointer;\r\n      }\r\n    }\r\n  }\r\n  .left,.center,.right{\r\n\r\n  }\r\n  .left{\r\n    left: 0;\r\n    top:50%;\r\n  }\r\n  .right{\r\n    \r\n  }\r\n  .center{\r\n    width: 300px;\r\n    left: 0;\r\n    right: 0;\r\n    margin: auto;\r\n  }\r\n  .search {\r\n    \r\n\r\n    \r\n\r\n    .search-input {\r\n      height: 100%;\r\n      display: inline-block;\r\n\r\n      input {\r\n        padding: 0 10px;\r\n        font-size: 16px;\r\n        width: 100%;\r\n        height: 30px;\r\n        font-family: 三极行楷;\r\n        // font-weight: bolder;\r\n        border-style: none;\r\n        border-radius: 10px;\r\n        text-align: center;\r\n        text-overflow: ellipsis;\r\n        color: rgb(255, 255, 255);\r\n        background: rgba(216, 216, 216, 0.11);\r\n\r\n        &:focus {\r\n          outline: none;\r\n        }\r\n      }\r\n\r\n      ::-webkit-input-placeholder {\r\n        font-size: 16px;\r\n        color: rgba(253, 253, 253, 0.61);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n#search-box {\r\n  z-index: 100;\r\n  position: absolute;\r\n  right: 0;\r\n  left: 0;\r\n  margin: auto;\r\n  width: 600px;\r\n  height: 300px;\r\n  border-radius: 0 0 20px 20px;\r\n  background: url(@/static/img/background8.jpeg); //-------------需要与主题更改\r\n  overflow-x: hidden;\r\n\r\n  cursor: default;\r\n\r\n  &::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n\r\n  .suggest-list {\r\n    margin: 5px 10px;\r\n    padding: 0 10px;\r\n    height: 30px;\r\n    line-height: 30px;\r\n    font-size: 15px;\r\n    border-radius: 10px;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    white-space: nowrap;\r\n    font-weight: bolder;\r\n    transition: 0.2s;\r\n    // border-bottom: 2px solid rgba(255, 255, 255, 0.445);\r\n\r\n    &:hover {\r\n      cursor: pointer;\r\n      transform: scale(1.02);\r\n      // color: rgb(94, 211, 211);\r\n      background: rgba(250, 250, 250, 0.062);\r\n    }\r\n\r\n    .suggest-list-music {\r\n      display: inline-block;\r\n      margin-left: 5px;\r\n      overflow: hidden;\r\n      text-overflow: ellipsis;\r\n      white-space: nowrap;\r\n    }\r\n  }\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}