{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport axios from 'axios';\nimport { Message, MessageBox } from 'element-ui';\nimport Cookies from 'js-cookie'; // import store from '@/store'\n// import { getToken } from '@/utils/auth'\n// import { MessageBox, Message } from 'element-ui'\n//可以创建多个axois实例，需要用哪个就引入使用哪个\n\nvar cloudMusic = axios.create({\n  // baseURL: 'https://biejuanle.icu/',\n  baseURL: 'http://localhost:3000/',\n  // changeOrigin: true,  //解决跨域\n  withCredentials: true\n});\nvar cloudMusic2 = axios.create({\n  baseURL: 'https://biejuanle.icu/',\n  // baseURL:'http://localhost:3000/'\n  // changeOrigin: true,  //解决跨域\n  withCredentials: true\n}); //配置全局的axios默认值\n// axios.defaults.baseURL = '你的基础域名'\n\naxios.defaults.timeout = 5000; // 在全局请求和响应拦截器中添加请求状态\n// Add a request interceptor\n\ncloudMusic.interceptors.request.use(function (config) {\n  // Do something before request is sent\n  // if (localStorage.getItem('token')) {\n  //     config.headers.Authorization = localStorage.getItem('token');\n  // M}\n  console.log(document.Cookies);\n  console.log(1111111);\n  return config;\n}, function (error) {\n  // Do something with request error\n  return Promise.reject(error);\n}); // Add a response interceptor\n\ncloudMusic.interceptors.response.use(function (response) {\n  // Do something with response data\n  return response;\n}, function (error) {\n  // Do something with response error\n  return Promise.reject(error);\n});\nexport { cloudMusic, cloudMusic2 }; //其他文件可通过import { cloudMusic, cloudMusic2 } from  ...导入使用\n// export default cloudMusic2;//default只能导出一个","map":{"version":3,"sources":["D:/data/桌面/git/cloudMusic-Source-Code/src/api/request.js"],"names":["axios","Message","MessageBox","Cookies","cloudMusic","create","baseURL","withCredentials","cloudMusic2","defaults","timeout","interceptors","request","use","config","console","log","document","error","Promise","reject","response"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,YAApC;AACA,OAAOC,OAAP,MAAoB,WAApB,C,CACA;AACA;AACA;AAIA;;AACA,IAAMC,UAAU,GAAGJ,KAAK,CAACK,MAAN,CAAa;AAC5B;AACAC,EAAAA,OAAO,EAAE,wBAFmB;AAG5B;AACAC,EAAAA,eAAe,EAAE;AAJW,CAAb,CAAnB;AAMA,IAAMC,WAAW,GAAGR,KAAK,CAACK,MAAN,CAAa;AAC7BC,EAAAA,OAAO,EAAE,wBADoB;AAE7B;AACA;AACAC,EAAAA,eAAe,EAAE;AAJY,CAAb,CAApB,C,CAOA;AACA;;AACAP,KAAK,CAACS,QAAN,CAAeC,OAAf,GAAyB,IAAzB,C,CAEA;AACA;;AACAN,UAAU,CAACO,YAAX,CAAwBC,OAAxB,CAAgCC,GAAhC,CAAoC,UAAAC,MAAM,EAAI;AAC1C;AACA;AACA;AACA;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYC,QAAQ,CAACd,OAArB;AACAY,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,SAAOF,MAAP;AACH,CATD,EASG,UAAAI,KAAK,EAAI;AACR;AACA,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CAZD,E,CAcA;;AACAd,UAAU,CAACO,YAAX,CAAwBU,QAAxB,CAAiCR,GAAjC,CAAqC,UAAAQ,QAAQ,EAAI;AAC7C;AACA,SAAOA,QAAP;AACH,CAHD,EAGG,UAAAH,KAAK,EAAI;AACR;AACA,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CAND;AASA,SAASd,UAAT,EAAqBI,WAArB,G,CAAmC;AACnC","sourcesContent":["import axios from 'axios'\r\nimport { Message, MessageBox } from 'element-ui'\r\nimport Cookies from 'js-cookie';\r\n// import store from '@/store'\r\n// import { getToken } from '@/utils/auth'\r\n// import { MessageBox, Message } from 'element-ui'\r\n\r\n\r\n\r\n//可以创建多个axois实例，需要用哪个就引入使用哪个\r\nconst cloudMusic = axios.create({\r\n    // baseURL: 'https://biejuanle.icu/',\r\n    baseURL: 'http://localhost:3000/',\r\n    // changeOrigin: true,  //解决跨域\r\n    withCredentials: true,\r\n});\r\nconst cloudMusic2 = axios.create({\r\n    baseURL: 'https://biejuanle.icu/',\r\n    // baseURL:'http://localhost:3000/'\r\n    // changeOrigin: true,  //解决跨域\r\n    withCredentials: true,\r\n});\r\n\r\n//配置全局的axios默认值\r\n// axios.defaults.baseURL = '你的基础域名'\r\naxios.defaults.timeout = 5000\r\n\r\n// 在全局请求和响应拦截器中添加请求状态\r\n// Add a request interceptor\r\ncloudMusic.interceptors.request.use(config => {\r\n    // Do something before request is sent\r\n    // if (localStorage.getItem('token')) {\r\n    //     config.headers.Authorization = localStorage.getItem('token');\r\n    // M}\r\n\r\n    console.log(document.Cookies)\r\n    console.log(1111111)\r\n    return config;\r\n}, error => {\r\n    // Do something with request error\r\n    return Promise.reject(error);\r\n});\r\n\r\n// Add a response interceptor\r\ncloudMusic.interceptors.response.use(response => {\r\n    // Do something with response data\r\n    return response;\r\n}, error => {\r\n    // Do something with response error\r\n    return Promise.reject(error);\r\n});\r\n\r\n\r\nexport { cloudMusic, cloudMusic2 };//其他文件可通过import { cloudMusic, cloudMusic2 } from  ...导入使用\r\n// export default cloudMusic2;//default只能导出一个\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}