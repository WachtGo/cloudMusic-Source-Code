{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getNewMvList as _getNewMvList } from \"@/api/api\";\nimport { transPlayCount } from \"@/utils/commonApi\";\nexport default {\n  data: function data() {\n    return {\n      limit: 4,\n      recMvList: []\n    };\n  },\n  mounted: function mounted() {\n    this.getNewMvList();\n  },\n  methods: {\n    getNewMvList: function getNewMvList() {\n      //获取最新MV\n      var that = this;\n      var params = {\n        limit: that.limit\n      };\n\n      _getNewMvList(params).then(function (res) {\n        that.recMvList = res.data.data; // console.log(\"最新mv---:\", res.data.data);\n        //将播放量转换成亿万单位\n\n        transPlayCount(that.recMvList, \"playCount\");\n      });\n    },\n    goPlayMv: function goPlayMv(mvId) {\n      var that = this;\n      that.$router.push({\n        name: \"mvPlay\",\n        params: {\n          mvId: mvId\n        }\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCA;AACA;AACA;AACAA,MADA,kBACA;AACA;AACAC,cADA;AAEAC;AAFA;AAIA,GANA;AAOAC,SAPA,qBAOA;AACA;AACA,GATA;AAUAC;AACAC,gBADA,0BACA;AACA;AACA;AACA;AACAJ;AADA;;AAGAI;AACAC,uCADA,CAEA;AACA;;AACAC;AACA,OALA;AAMA,KAbA;AAcAC,YAdA,oBAcAC,IAdA,EAcA;AACA;AACAH;AACAI,sBADA;AAEAC;AAAAF;AAAA;AAFA;AAIA;AApBA;AAVA","names":["data","limit","recMvList","mounted","methods","getNewMvList","that","transPlayCount","goPlayMv","mvId","name","params"],"sourceRoot":"src/views/recommend","sources":["NewMvList.vue"],"sourcesContent":["<template>\n  <!-- 最新MV -->\n  <div>\n    <h3 class=\"h2title\">最新MV :</h3>\n    <div class=\"recPlay\">\n      <ul class=\"recPlaywrap\">\n        <li class=\"recPlayList\" v-for=\"(item, index) in recMvList\" :key=\"index\">\n          <div class=\"image\">\n            <img\n              :src=\"item.cover\"\n              alt=\" \"\n              title=\"\"\n              @click=\"goPlayMv(item.id)\"\n            />\n            <span class=\"playCount\"\n              ><i class=\"el-icon-video-play\" style=\"margin-right: 1px\"></i\n              >{{ item.playCount }}</span\n            >\n          </div>\n          <p class=\"List-title\">\n            <span\n              style=\"\n                display: inline-block;\n                width: 100%;\n                overflow: hidden;\n                white-space: nowrap;\n                text-overflow: ellipsis;\n              \"\n              >{{ item.name }}</span\n            >\n            <span style=\"font-size: 10px; color: rgb(220, 220, 220)\">{{\n              item.artists[0].name\n            }}</span>\n          </p>\n        </li>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { getNewMvList } from \"@/api/api\";\nimport { transPlayCount } from \"@/utils/commonApi\";\nexport default {\n  data() {\n    return {\n      limit: 4,\n      recMvList: [],\n    };\n  },\n  mounted() {\n    this.getNewMvList();\n  },\n  methods: {\n    getNewMvList() {\n      //获取最新MV\n      var that = this;\n      let params = {\n        limit: that.limit,\n      };\n      getNewMvList(params).then((res) => {\n        that.recMvList = res.data.data;\n        // console.log(\"最新mv---:\", res.data.data);\n        //将播放量转换成亿万单位\n        transPlayCount(that.recMvList, \"playCount\");\n      });\n    },\n    goPlayMv(mvId) {\n      var that = this;\n      that.$router.push({\n        name: \"mvPlay\",\n        params: { mvId: mvId },\n      });\n    },\n  },\n};\n</script>\n\n<style lang=\"less\" scoped>\n.recPlay {\n  // max-height: 550px;\n  overflow-x: hidden;\n  // background: rgba(95, 158, 160, 0.11);\n  // &::-webkit-scrollbar {\n  //   display: none;\n  // }\n\n  .recPlaywrap {\n    display: flex;\n    justify-content: space-evenly;\n    flex-wrap: wrap; //根据宽度限制一行的盒子个数\n    margin: 10px 0;\n    width: 100%;\n    height: 200px;\n    // overflow-x: hidden;\n\n    .recPlayList {\n      margin-bottom: 10px;\n      width: 260px;\n      height: 190px;\n      box-sizing: border-box;\n\n      .image {\n        position: relative;\n        margin-bottom: 5px;\n        width: 260px;\n        height: 145px;\n        border-radius: 10px;\n        overflow: hidden;\n        transition: 0.2s;\n\n        &:hover {\n          transform: scale(1.05);\n          cursor: pointer;\n          // height: 210px;\n        }\n        img {\n          position: absolute;\n          width: 100%;\n          height: 100%;\n        }\n\n        .playCount {\n          position: absolute;\n          z-index: 99;\n          right: 10px;\n          background: transparent;\n        }\n      }\n\n      .list-title {\n        font-size: 15px;\n        padding: 0 10px;\n        // width: 100%;\n        transition: 0.2s;\n        overflow: hidden; /*必须结合的属性,当内容溢出元素框时发生的事情*/\n        text-overflow: ellipsis; /*可以用来多行文本的情况下，用省略号“…”隐藏超出范围的文本 。*/\n        display: -webkit-box; /*必须结合的属性 ，将对象作为弹性伸缩盒子模型显示 。*/\n        -webkit-line-clamp: 2; /*用来限制在一个块元素显示的文本的行数。*/\n        -webkit-box-orient: vertical; /*必须结合的属性 ，设置或检索伸缩盒对象的子元素的排列方式 。*/\n      }\n    }\n  }\n}\n.h2title {\n  margin-top: 10px;\n  text-align: left;\n}\n</style>"]},"metadata":{},"sourceType":"module"}