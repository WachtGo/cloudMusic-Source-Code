{"ast":null,"code":"import _asyncToGenerator from \"D:/Desktop/git/cloudMusic-Source-Code/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport { playMusicUrl, getSongLyric, getSongDetails } from \"@/api/api\"; //添加歌曲到播放列表\n\nexport function playMusic(_x, _x2, _x3, _x4, _x5) {\n  return _playMusic.apply(this, arguments);\n} //播放试听音乐\n\nfunction _playMusic() {\n  _playMusic = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(id, fee, index, list, that) {\n    var songUrlAdd, songlrc;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            //获取播放音乐链接\n            // console.log(that,'----')\n            songUrlAdd = null; //音乐地址\n\n            songlrc = ''; //歌词 \n\n            if (!that[list][index].timer) {\n              _context.next = 4;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 4:\n            if (fee == 1) {\n              that.$message({\n                message: \"VIP歌曲 - 只能试听30s\",\n                type: \"warning\"\n              });\n            }\n\n            playMusicUrl({\n              id: id\n            }).then(function (res) {\n              // console.log(\"播放音乐链接\", res.data.data[0].url);\n              if (res.data.data[0].url) {\n                songUrlAdd = res.data.data[0].url;\n              } else {\n                that.$message({\n                  message: \"这首歌暂无版权\",\n                  type: \"error\"\n                });\n                that[list][index].timer = setTimeout(function () {\n                  that[list][index].timer = null;\n                }, 2000);\n                return;\n              }\n            }), // 获取歌词\n            getSongLyric({\n              id: id\n            }).then(function (res) {\n              songlrc = res.data.lrc.lyric;\n            }), // 获取歌曲信息\n            getSongDetails({\n              ids: id\n            }).then(function (res) {\n              that.$store.commit(\"aplayer/addSONG\", {\n                name: res.data.songs[0].name,\n                //歌曲名\n                artist: res.data.songs[0].ar[0].name,\n                //作者\n                url: songUrlAdd,\n                cover: res.data.songs[0].al.picUrl,\n                lrc: that.songlrc,\n                id: id\n              });\n              that[list][index].timer = setTimeout(function () {\n                that[list][index].timer = null;\n              }, 3000);\n            });\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _playMusic.apply(this, arguments);\n}\n\nexport function listenMusic(_x6, _x7, _x8, _x9, _x10) {\n  return _listenMusic.apply(this, arguments);\n}\n\nfunction _listenMusic() {\n  _listenMusic = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(id, fee, index, list, that) {\n    var songUrlAdd, songlrc;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            songUrlAdd = null;\n            songlrc = '';\n\n            if (!that[list][index].timer) {\n              _context2.next = 4;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 4:\n            if (fee == 1) {\n              that.$message({\n                message: \"VIP歌曲 - 只能试听30s\",\n                type: \"warning\"\n              });\n            }\n\n            playMusicUrl({\n              id: id\n            }).then(function (res) {\n              // console.log(\"播放音乐链接\", res.data.data[0].url);\n              if (res.data.data[0].url) {\n                songUrlAdd = res.data.data[0].url;\n              } else {\n                that.$message({\n                  message: \"这首歌暂无版权\",\n                  type: \"error\"\n                });\n                that[list][index].timer = setTimeout(function () {\n                  that[list][index].timer = null;\n                }, 3000);\n                return;\n              }\n            }), // 获取歌词\n            getSongLyric({\n              id: id\n            }).then(function (res) {\n              songlrc = res.data.lrc.lyric;\n            }), // 获取歌曲信息\n            getSongDetails({\n              ids: id\n            }).then(function (res) {\n              if (songUrlAdd != null) {\n                that.$store.commit('aplayer/addAUDITION', {\n                  name: res.data.songs[0].name,\n                  //歌曲名\n                  artist: res.data.songs[0].ar[0].name,\n                  //作者\n                  url: songUrlAdd,\n                  cover: res.data.songs[0].al.picUrl,\n                  lrc: songlrc,\n                  id: id,\n                  timer: null //试听中添加，防止用户连点消耗性能，在添加播放列表方法中可使用到\n\n                });\n              }\n\n              that[list][index].timer = setTimeout(function () {\n                that[list][index].timer = null;\n              }, 2000);\n            });\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _listenMusic.apply(this, arguments);\n}","map":{"version":3,"sources":["D:/Desktop/git/cloudMusic-Source-Code/src/utils/musicPlay.js"],"names":["playMusicUrl","getSongLyric","getSongDetails","playMusic","id","fee","index","list","that","songUrlAdd","songlrc","timer","$message","message","type","then","res","data","url","setTimeout","lrc","lyric","ids","$store","commit","name","songs","artist","ar","cover","al","picUrl","listenMusic"],"mappings":";;;AAAA,SACEA,YADF,EAEEC,YAFF,EAGEC,cAHF,QAIO,WAJP,C,CAMC;;AACA,gBAAuBC,SAAvB;AAAA;AAAA,C,CAuDD;;;uEAvDQ,iBAA2BC,EAA3B,EAA+BC,GAA/B,EAAoCC,KAApC,EAA4CC,IAA5C,EAAmDC,IAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AACP;AACA;AAEIC,YAAAA,UAJG,GAIU,IAJV,EAIe;;AAClBC,YAAAA,OALG,GAKO,EALP,EAKU;;AALV,iBAMHF,IAAI,CAACD,IAAD,CAAJ,CAAWD,KAAX,EAAkBK,KANf;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAON,gBAAIN,GAAG,IAAI,CAAX,EAAc;AACbG,cAAAA,IAAI,CAACI,QAAL,CAAc;AACbC,gBAAAA,OAAO,EAAE,iBADI;AAEbC,gBAAAA,IAAI,EAAE;AAFO,eAAd;AAIA;;AACDd,YAAAA,YAAY,CAAC;AACZI,cAAAA,EAAE,EAAEA;AADQ,aAAD,CAAZ,CAEGW,IAFH,CAEQ,UAACC,GAAD,EAAS;AAChB;AACA,kBAAIA,GAAG,CAACC,IAAJ,CAASA,IAAT,CAAc,CAAd,EAAiBC,GAArB,EAA0B;AACzBT,gBAAAA,UAAU,GAAGO,GAAG,CAACC,IAAJ,CAASA,IAAT,CAAc,CAAd,EAAiBC,GAA9B;AACA,eAFD,MAEO;AACNV,gBAAAA,IAAI,CAACI,QAAL,CAAc;AACbC,kBAAAA,OAAO,EAAE,SADI;AAEbC,kBAAAA,IAAI,EAAE;AAFO,iBAAd;AAKAN,gBAAAA,IAAI,CAACD,IAAD,CAAJ,CAAWD,KAAX,EAAkBK,KAAlB,GAA0BQ,UAAU,CAAC,YAAM;AAC1CX,kBAAAA,IAAI,CAACD,IAAD,CAAJ,CAAWD,KAAX,EAAkBK,KAAlB,GAA0B,IAA1B;AACA,iBAFmC,EAEjC,IAFiC,CAApC;AAGA;AACA;AACD,aAjBD,GAkBC;AACAV,YAAAA,YAAY,CAAC;AACZG,cAAAA,EAAE,EAAEA;AADQ,aAAD,CAAZ,CAEGW,IAFH,CAEQ,UAACC,GAAD,EAAS;AAChBN,cAAAA,OAAO,GAAGM,GAAG,CAACC,IAAJ,CAASG,GAAT,CAAaC,KAAvB;AACA,aAJD,CAnBD,EAwBC;AACAnB,YAAAA,cAAc,CAAC;AACdoB,cAAAA,GAAG,EAAElB;AADS,aAAD,CAAd,CAEGW,IAFH,CAEQ,UAACC,GAAD,EAAS;AACfR,cAAAA,IAAI,CAACe,MAAL,CAAYC,MAAZ,CAAmB,iBAAnB,EAAsC;AACrCC,gBAAAA,IAAI,EAAET,GAAG,CAACC,IAAJ,CAASS,KAAT,CAAe,CAAf,EAAkBD,IADa;AACP;AAC9BE,gBAAAA,MAAM,EAAEX,GAAG,CAACC,IAAJ,CAASS,KAAT,CAAe,CAAf,EAAkBE,EAAlB,CAAqB,CAArB,EAAwBH,IAFK;AAEC;AACtCP,gBAAAA,GAAG,EAAET,UAHgC;AAIrCoB,gBAAAA,KAAK,EAAEb,GAAG,CAACC,IAAJ,CAASS,KAAT,CAAe,CAAf,EAAkBI,EAAlB,CAAqBC,MAJS;AAKrCX,gBAAAA,GAAG,EAAEZ,IAAI,CAACE,OAL2B;AAMrCN,gBAAAA,EAAE,EAAEA;AANiC,eAAtC;AAQAI,cAAAA,IAAI,CAACD,IAAD,CAAJ,CAAWD,KAAX,EAAkBK,KAAlB,GAA0BQ,UAAU,CAAC,YAAM;AAC1CX,gBAAAA,IAAI,CAACD,IAAD,CAAJ,CAAWD,KAAX,EAAkBK,KAAlB,GAA0B,IAA1B;AACA,eAFmC,EAEjC,IAFiC,CAApC;AAGD,aAdD,CAzBD;;AAbM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAwDP,gBAAuBqB,WAAvB;AAAA;AAAA;;;yEAAO,kBAA6B5B,EAA7B,EAAiCC,GAAjC,EAAsCC,KAAtC,EAA6CC,IAA7C,EAAmDC,IAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AACHC,YAAAA,UADG,GACU,IADV;AAEHC,YAAAA,OAFG,GAEO,EAFP;;AAAA,iBAGHF,IAAI,CAACD,IAAD,CAAJ,CAAWD,KAAX,EAAkBK,KAHf;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAIP,gBAAIN,GAAG,IAAI,CAAX,EAAc;AACZG,cAAAA,IAAI,CAACI,QAAL,CAAc;AACbC,gBAAAA,OAAO,EAAE,iBADI;AAEbC,gBAAAA,IAAI,EAAE;AAFO,eAAd;AAIA;;AACAd,YAAAA,YAAY,CAAC;AACbI,cAAAA,EAAE,EAAEA;AADS,aAAD,CAAZ,CAEEW,IAFF,CAEO,UAACC,GAAD,EAAS;AAChB;AACA,kBAAIA,GAAG,CAACC,IAAJ,CAASA,IAAT,CAAc,CAAd,EAAiBC,GAArB,EAA0B;AACzBT,gBAAAA,UAAU,GAAGO,GAAG,CAACC,IAAJ,CAASA,IAAT,CAAc,CAAd,EAAiBC,GAA9B;AACA,eAFD,MAEO;AACNV,gBAAAA,IAAI,CAACI,QAAL,CAAc;AACbC,kBAAAA,OAAO,EAAE,SADI;AAEbC,kBAAAA,IAAI,EAAE;AAFO,iBAAd;AAICN,gBAAAA,IAAI,CAACD,IAAD,CAAJ,CAAWD,KAAX,EAAkBK,KAAlB,GAA0BQ,UAAU,CAAC,YAAM;AAC3CX,kBAAAA,IAAI,CAACD,IAAD,CAAJ,CAAWD,KAAX,EAAkBK,KAAlB,GAA0B,IAA1B;AACA,iBAFoC,EAElC,IAFkC,CAApC;AAGD;AACA;AACD,aAhBA,GAiBA;AACAV,YAAAA,YAAY,CAAC;AACZG,cAAAA,EAAE,EAAEA;AADQ,aAAD,CAAZ,CAEGW,IAFH,CAEQ,UAACC,GAAD,EAAS;AACfN,cAAAA,OAAO,GAAGM,GAAG,CAACC,IAAJ,CAASG,GAAT,CAAaC,KAAvB;AACD,aAJD,CAlBA,EAuBA;AACAnB,YAAAA,cAAc,CAAC;AACdoB,cAAAA,GAAG,EAAElB;AADS,aAAD,CAAd,CAEGW,IAFH,CAEQ,UAACC,GAAD,EAAS;AAChB,kBAAIP,UAAU,IAAI,IAAlB,EAAwB;AACvBD,gBAAAA,IAAI,CAACe,MAAL,CAAYC,MAAZ,CAAmB,qBAAnB,EAAyC;AACxCC,kBAAAA,IAAI,EAAET,GAAG,CAACC,IAAJ,CAASS,KAAT,CAAe,CAAf,EAAkBD,IADgB;AACV;AAC9BE,kBAAAA,MAAM,EAAEX,GAAG,CAACC,IAAJ,CAASS,KAAT,CAAe,CAAf,EAAkBE,EAAlB,CAAqB,CAArB,EAAwBH,IAFQ;AAEF;AACtCP,kBAAAA,GAAG,EAAET,UAHmC;AAIxCoB,kBAAAA,KAAK,EAAEb,GAAG,CAACC,IAAJ,CAASS,KAAT,CAAe,CAAf,EAAkBI,EAAlB,CAAqBC,MAJY;AAKxCX,kBAAAA,GAAG,EAAEV,OALmC;AAMxCN,kBAAAA,EAAE,EAAEA,EANoC;AAOxCO,kBAAAA,KAAK,EAAC,IAPkC,CAO9B;;AAP8B,iBAAzC;AAQI;;AACJH,cAAAA,IAAI,CAACD,IAAD,CAAJ,CAAWD,KAAX,EAAkBK,KAAlB,GAA0BQ,UAAU,CAAC,YAAM;AAC1CX,gBAAAA,IAAI,CAACD,IAAD,CAAJ,CAAWD,KAAX,EAAkBK,KAAlB,GAA0B,IAA1B;AACA,eAFmC,EAEjC,IAFiC,CAApC;AAGD,aAhBD,CAxBA;;AAVK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import {\r\n  playMusicUrl,\r\n  getSongLyric,\r\n  getSongDetails,\r\n} from \"@/api/api\";\r\n\r\n //添加歌曲到播放列表\r\n export async function  playMusic (id, fee, index , list , that){\r\n\t//获取播放音乐链接\r\n\t// console.log(that,'----')\r\n\r\n\tlet songUrlAdd = null\t//音乐地址\r\n\tlet songlrc = '' //歌词 \r\n\tif (that[list][index].timer) return\r\n\t\tif (fee == 1) {\r\n\t\t\tthat.$message({\r\n\t\t\t\tmessage: \"VIP歌曲 - 只能试听30s\",\r\n\t\t\t\ttype: \"warning\",\r\n\t\t\t});\r\n\t\t}\r\n\t\tplayMusicUrl({\r\n\t\t\tid: id,\r\n\t\t}).then((res) => {\r\n\t\t\t// console.log(\"播放音乐链接\", res.data.data[0].url);\r\n\t\t\tif (res.data.data[0].url) {\r\n\t\t\t\tsongUrlAdd = res.data.data[0].url;\r\n\t\t\t} else {\r\n\t\t\t\tthat.$message({\r\n\t\t\t\t\tmessage: \"这首歌暂无版权\",\r\n\t\t\t\t\ttype: \"error\",\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\tthat[list][index].timer = setTimeout(() => {\r\n\t\t\t\t\tthat[list][index].timer = null;\r\n\t\t\t\t}, 2000);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}),\r\n\t\t\t// 获取歌词\r\n\t\t\tgetSongLyric({\r\n\t\t\t\tid: id,\r\n\t\t\t}).then((res) => {\r\n\t\t\t\tsonglrc = res.data.lrc.lyric;\r\n\t\t\t}),\r\n\t\t\t// 获取歌曲信息\r\n\t\t\tgetSongDetails({\r\n\t\t\t\tids: id,\r\n\t\t\t}).then((res) => {\r\n\t\t\t\t\tthat.$store.commit(\"aplayer/addSONG\", {\r\n\t\t\t\t\t\tname: res.data.songs[0].name, //歌曲名\r\n\t\t\t\t\t\tartist: res.data.songs[0].ar[0].name, //作者\r\n\t\t\t\t\t\turl: songUrlAdd,\r\n\t\t\t\t\t\tcover: res.data.songs[0].al.picUrl,\r\n\t\t\t\t\t\tlrc: that.songlrc,\r\n\t\t\t\t\t\tid: id,\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthat[list][index].timer = setTimeout(() => {\r\n\t\t\t\t\t\tthat[list][index].timer = null;\r\n\t\t\t\t\t}, 3000);\r\n\t\t\t});\r\n\t\t}\r\n\t\r\n//播放试听音乐\r\n export async function  listenMusic (id, fee, index, list, that) {\r\n\tlet songUrlAdd = null\r\n\tlet songlrc = ''\r\n\tif (that[list][index].timer) return\r\n\tif (fee == 1) {\r\n\t\t\tthat.$message({\r\n\t\t\t\tmessage: \"VIP歌曲 - 只能试听30s\",\r\n\t\t\t\ttype: \"warning\",\r\n\t\t\t});\r\n\t\t}\r\n\t\t playMusicUrl({\r\n\t\t\tid: id,\r\n\t\t}).then((res) => {\r\n\t\t\t// console.log(\"播放音乐链接\", res.data.data[0].url);\r\n\t\t\tif (res.data.data[0].url) {\r\n\t\t\t\tsongUrlAdd = res.data.data[0].url;\r\n\t\t\t} else {\r\n\t\t\t\tthat.$message({\r\n\t\t\t\t\tmessage: \"这首歌暂无版权\",\r\n\t\t\t\t\ttype: \"error\",\r\n\t\t\t\t});\r\n\t\t\t\t that[list][index].timer = setTimeout(() => {\r\n\t\t\t\t\tthat[list][index].timer = null;\r\n\t\t\t\t}, 3000);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}),\r\n\t\t\t// 获取歌词\r\n\t\t\tgetSongLyric({\r\n\t\t\t\tid: id,\r\n\t\t\t}).then((res) => {\r\n\t\t\t \tsonglrc = res.data.lrc.lyric;\r\n\t\t\t}),\r\n\t\t\t// 获取歌曲信息\r\n\t\t\tgetSongDetails({\r\n\t\t\t\tids: id,\r\n\t\t\t}).then((res) => {\r\n\t\t\t\tif (songUrlAdd != null) {\r\n\t\t\t\t\tthat.$store.commit('aplayer/addAUDITION',{\r\n\t\t\t\t\t\tname: res.data.songs[0].name, //歌曲名\r\n\t\t\t\t\t\tartist: res.data.songs[0].ar[0].name, //作者\r\n\t\t\t\t\t\turl: songUrlAdd,\r\n\t\t\t\t\t\tcover: res.data.songs[0].al.picUrl,\r\n\t\t\t\t\t\tlrc: songlrc,\r\n\t\t\t\t\t\tid: id,\r\n\t\t\t\t\t\ttimer:null//试听中添加，防止用户连点消耗性能，在添加播放列表方法中可使用到\r\n\t\t\t\t\t});}\r\n\t\t\t\t\tthat[list][index].timer = setTimeout(() => {\r\n\t\t\t\t\t\tthat[list][index].timer = null;\r\n\t\t\t\t\t}, 2000);\r\n\t\t\t});\r\n\t\r\n}"]},"metadata":{},"sourceType":"module"}