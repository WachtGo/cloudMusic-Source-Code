{"ast":null,"code":"import _asyncToGenerator from \"D:/data/\\u684C\\u9762/git/cloudMusic-Source-Code/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.function.name.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getMyPlayList as _getMyPlayList, updatePlayList } from \"@/api/needLogin/musicOperate\";\nimport { transMusicTime, transPlayCount } from \"@/utils/commonApi\";\nimport songlist from \"@/components/songlist.vue\";\nexport default {\n  components: {\n    songlist: songlist\n  },\n  data: function data() {\n    return {\n      //歌单列表\n      playListTable: [],\n      count: 0,\n      //初始页\n      currentPage: 1\n    };\n  },\n  created: function created() {\n    // this.updatePlayList();\n    this.getMyPlayList();\n  },\n  methods: {\n    //分页\n    handleCurrentChange: function handleCurrentChange(currentPage) {\n      this.currentPage = currentPage;\n      this.getMyPlayList();\n    },\n    //进入歌单详情\n    goSongList: function goSongList(playListDetail) {\n      // console.log(playListDetail);\n      var params = {\n        id: playListDetail.id,\n        name: playListDetail.name,\n        coverImgUrl: playListDetail.picUrl,\n        trackCount: playListDetail.trackCount,\n        creator: {\n          avatarUrl: \"\",\n          nickname: playListDetail.creator.nickname,\n          signature: \"\"\n        },\n        tags: [],\n        description: \"\"\n      }; //传入歌单id进入歌单详情\n\n      this.$router.push({\n        name: \"playListDetails\",\n        params: {\n          playListDetail: params\n        }\n      });\n    },\n    //获取用户歌单\n    getMyPlayList: function getMyPlayList() {\n      var _this = this;\n\n      var params = {\n        uid: JSON.parse(localStorage.getItem(\"user\")).userId,\n        limit: 30,\n        offset: (this.currentPage - 1) * 30\n      };\n      this.playListTable = [];\n\n      _getMyPlayList(params).then( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(res) {\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  console.log(\"获取我的歌单列表----\", res);\n\n                  if (!(res.data.code === 200)) {\n                    _context.next = 7;\n                    break;\n                  }\n\n                  _context.next = 4;\n                  return res.data.playlist;\n\n                case 4:\n                  _this.playListTable = _context.sent;\n                  _this.count = _this.playListTable.length;\n                  transPlayCount(_this.playListTable, \"playCount\");\n\n                case 7:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    } //更新歌单\n    // updatePlayList(){\n    //   updatePlayList().then(res=>{\n    //   })\n    // }\n\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsDA;AACA;AACA;AACA;AACAA;AACAC;AADA,GADA;AAIAC,MAJA,kBAIA;AACA;AACA;AACAC,uBAFA;AAGAC,cAHA;AAIA;AACAC;AALA;AAOA,GAZA;AAaAC,SAbA,qBAaA;AACA;AACA;AACA,GAhBA;AAiBAC;AACA;AACAC;AACA;AACA;AACA,KALA;AAOA;AACAC,cARA,sBAQAC,cARA,EAQA;AACA;AACA;AACAC,6BADA;AAEAC,iCAFA;AAGAC,0CAHA;AAIAC,6CAJA;AAKAC;AACAC,uBADA;AAEAC,mDAFA;AAGAC;AAHA,SALA;AAUAC,gBAVA;AAWAC;AAXA,QAFA,CAeA;;AACA;AACAR,+BADA;AAEAS;AAAAX;AAAA;AAFA;AAIA,KA5BA;AA8BA;AACAY,iBA/BA,2BA+BA;AAAA;;AACA;AACAC,4DADA;AAEAC,iBAFA;AAGAC;AAHA;AAKA;;AACAH;AAAA;AAAA;AAAA;AAAA;AAAA;AACAI;;AADA,wBAEAC,qBAFA;AAAA;AAAA;AAAA;;AAAA;AAAA,yBAGAA,iBAHA;;AAAA;AAGA,qCAHA;AAIA;AACAC;;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAQA,KA9CA,CA+CA;AACA;AACA;AAEA;AACA;;AApDA;AAjBA","names":["components","songlist","data","playListTable","count","currentPage","created","methods","handleCurrentChange","goSongList","playListDetail","id","name","coverImgUrl","trackCount","creator","avatarUrl","nickname","signature","tags","description","params","getMyPlayList","uid","limit","offset","console","res","transPlayCount"],"sourceRoot":"src/views","sources":["myPlayList.vue"],"sourcesContent":["<template>\n  <div class=\"list-wrap\">\n    <!-- <div class=\"descript\"></div> -->\n    <div class=\"pageName\">我的歌单</div>\n    <ul>\n      <!-- 歌单列表 -->\n      <div class=\"playListClass\">\n        <div class=\"loading\" v-show=\"playListTable.length === 0\">\n          <i class=\"el-icon-loading\"></i>\n        </div>\n        <div class=\"recPlay\">\n          <ul class=\"playListWrap\">\n            <li\n              class=\"playListTable\"\n              v-for=\"(item, index) in playListTable\"\n              :key=\"index\"\n            >\n              <div class=\"image\">\n                <img\n                  :src=\"item.coverImgUrl\"\n                  alt=\" \"\n                  title=\"\"\n                  @click=\"goSongList(item)\"\n                />\n                <span class=\"playCount\"\n                  ><i class=\"el-icon-video-play\" style=\"margin-right: 1px\"></i\n                  >{{ item.playCount }}</span\n                >\n              </div>\n              <p class=\"List-title\" @click=\"goSongList(item)\">\n                <span>{{ item.name }} </span>\n              </p>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </ul>\n\n    <div class=\"pagination\">\n      <el-pagination\n        v-show=\"count != 0\"\n        @current-change=\"handleCurrentChange\"\n        :current-page.sync=\"currentPage\"\n        :page-size=\"30\"\n        layout=\"prev, pager, next, jumper\"\n        :total=\"count\"\n        :background=\"true\"\n      >\n      </el-pagination>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { getMyPlayList, updatePlayList } from \"@/api/needLogin/musicOperate\";\nimport { transMusicTime, transPlayCount } from \"@/utils/commonApi\";\nimport songlist from \"@/components/songlist.vue\";\nexport default {\n  components: {\n    songlist,\n  },\n  data() {\n    return {\n      //歌单列表\n      playListTable: [],\n      count: 0,\n      //初始页\n      currentPage: 1,\n    };\n  },\n  created() {\n    // this.updatePlayList();\n    this.getMyPlayList();\n  },\n  methods: {\n    //分页\n    handleCurrentChange: function (currentPage) {\n      this.currentPage = currentPage;\n      this.getMyPlayList();\n    },\n\n    //进入歌单详情\n    goSongList(playListDetail) {\n      // console.log(playListDetail);\n      let params = {\n        id: playListDetail.id,\n        name: playListDetail.name,\n        coverImgUrl: playListDetail.picUrl,\n        trackCount: playListDetail.trackCount,\n        creator: {\n          avatarUrl: \"\",\n          nickname: playListDetail.creator.nickname,\n          signature: \"\",\n        },\n        tags: [],\n        description: \"\",\n      };\n      //传入歌单id进入歌单详情\n      this.$router.push({\n        name: \"playListDetails\",\n        params: { playListDetail: params },\n      });\n    },\n\n    //获取用户歌单\n    getMyPlayList() {\n      let params = {\n        uid: JSON.parse(localStorage.getItem(\"user\")).userId,\n        limit: 30,\n        offset: (this.currentPage - 1) * 30,\n      };\n      this.playListTable = [];\n      getMyPlayList(params).then(async (res) => {\n        console.log(\"获取我的歌单列表----\", res);\n        if (res.data.code === 200) {\n          this.playListTable = await res.data.playlist;\n          this.count = this.playListTable.length;\n          transPlayCount(this.playListTable, \"playCount\");\n        }\n      });\n    },\n    //更新歌单\n    // updatePlayList(){\n    //   updatePlayList().then(res=>{\n\n    //   })\n    // }\n  },\n};\n</script>\n\n<style lang=\"less\" scoped>\n// 歌单列表样式\n.playListClass {\n  .recPlay {\n    margin: auto;\n    max-height: 630px;\n    overflow-x: hidden;\n\n    &::-webkit-scrollbar {\n      display: none;\n    }\n\n    .playListWrap {\n      display: flex;\n      // flex-direction: column;\n      justify-content: space-between;\n      flex-wrap: wrap; //根据宽度限制一行的盒子个数\n      margin-bottom: 10px;\n      width: 100%;\n      background: transparent;\n      // overflow-x: hidden;\n\n      .playListTable {\n        margin-bottom: 10px;\n        width: 205px;\n        height: 230px;\n        box-sizing: border-box;\n\n        .image {\n          position: relative;\n          margin: 10px auto;\n          width: 190px;\n          height: 190px;\n          border-radius: 10px;\n          overflow: hidden;\n          transition: 0.2s;\n\n          &:hover {\n            transform: scale(1.06);\n            cursor: pointer;\n            // height: 210px;\n          }\n          img {\n            position: absolute;\n            width: 100%;\n            height: 100%;\n          }\n\n          .playCount {\n            position: absolute;\n            z-index: 99;\n            right: 10px;\n            background: transparent;\n          }\n        }\n        .List-title {\n          margin: 0 auto;\n          font-size: 15px;\n          // padding: 0 10px;\n          width: 180px;\n          transition: 0.2s;\n          text-align: center;\n          text-overflow: ellipsis;\n          white-space: nowrap;\n          overflow: hidden; /*必须结合的属性,当内容溢出元素框时发生的事情*/\n          text-overflow: ellipsis; /*可以用来多行文本的情况下，用省略号“…”隐藏超出范围的文本 。*/\n          white-space: nowrap;\n          display: -webkit-box; /*必须结合的属性 ，将对象作为弹性伸缩盒子模型显示 。*/\n          -webkit-line-clamp: 1; /*用来限制在一个块元素显示的文本的行数。*/\n          -webkit-box-orient: vertical; /*必须结合的属性 ，设置或检索伸缩盒对象的子元素的排列方式 。*/\n          span {\n            display: inline-block;\n            width: 180px;\n            // text-align: center;\n            text-overflow: ellipsis;\n            overflow: hidden;\n            white-space: nowrap;\n\n            &:hover {\n              color: rgb(145, 245, 228);\n              cursor: pointer;\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\n.descript {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  color: aliceblue;\n  font-weight: bolder;\n  padding: 10px 20px;\n  border-radius: 20px 20px 0 0;\n  background: rgba(95, 158, 160, 0.05);\n  box-sizing: border-box;\n}\n.list-wrap {\n  margin: 10px auto 0;\n  padding: 0 20px 10px;\n  width: 1120px;\n  // height: 730px;\n  border-radius: 20px;\n  background: rgba(95, 158, 160, 0.11);\n  box-sizing: border-box;\n\n  .tagWrap {\n    display: flex;\n    justify-content: space-around;\n    align-content: center;\n    margin: 0 auto;\n    width: 50%;\n\n    span {\n      font-size: 18px;\n      padding: 0 10px;\n      transition: 0.2s;\n\n      &:hover {\n        color: rgb(101, 195, 233);\n        cursor: pointer;\n      }\n    }\n  }\n\n  ul {\n    height: 650px;\n    border-radius: 0 0 10px 10px;\n    background: rgba(95, 158, 160, 0.05);\n    overflow-x: hidden;\n\n    &::-webkit-scrollbar {\n      display: none;\n    }\n\n    .music-list {\n      position: relative;\n      display: flex;\n      margin: 5px auto 5px;\n      padding: 0 10px;\n      width: 96%;\n      height: 30px;\n      line-height: 30px;\n      overflow: hidden;\n      color: rgba(255, 255, 255, 1);\n      font-weight: bolder;\n      border-radius: 5px;\n      -o-text-overflow: ellipsis;\n      text-overflow: ellipsis;\n      // background: rgba(172, 233, 236, 0.055);\n      transition: 0.2s;\n\n      .music-list-span {\n        display: inline-block;\n        width: 270px;\n        // font-size:13px;\n        text-align: center;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n      }\n      .option {\n        position: absolute;\n        padding-left: 120px;\n        width: 240px;\n        right: 0px;\n        box-sizing: border-box;\n\n        span {\n          display: inline-block;\n          width: 30px;\n          &:hover {\n            cursor: pointer;\n          }\n        }\n      }\n\n      &:hover {\n        color: rgb(88, 255, 241);\n        transform: scale(1.01);\n        // background: rgba(141, 251, 255, 0.192);\n      }\n    }\n  }\n}\n.pagination {\n  text-align: center;\n  background: none !important;\n\n  /deep/ .el-pager {\n    height: 30px !important;\n    background: none !important;\n  }\n  /deep/ .number,\n  /deep/ .btn-prev,\n  /deep/ .btn-quicknext,\n  /deep/ .btn-next,\n  /deep/ .el-input__inner,\n  /deep/ .more {\n    color: #f2fff7 !important;\n    transition: 0.2s;\n    background: transparent !important;\n  }\n  /deep/ .number:hover,\n  /deep/ .btn-prev:hover,\n  /deep/ .btn-quicknext:hover,\n  /deep/ .btn-next:hover,\n  /deep/ .el-input__inner:hover,\n  /deep/ .more:hover {\n    transform: scale(1.02);\n    color: #f7a588 !important;\n  }\n  /deep/ .active {\n    color: #f7a588 !important;\n  }\n  /deep/ .el-input__inner {\n    border: none;\n  }\n  /deep/ .el-pagination__jump {\n    color: #f7dd88 !important;\n  }\n  /deep/.el-pagination {\n    height: 100%;\n  }\n  .iconhover {\n    transition: 0.2s;\n    &:hover {\n      color: rgb(247, 243, 45);\n    }\n  }\n}\n</style>\n\n"]},"metadata":{},"sourceType":"module"}