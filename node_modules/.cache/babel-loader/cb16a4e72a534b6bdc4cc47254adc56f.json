{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport axios from 'axios';\nimport { Message } from 'element-ui';\nimport loginUrl from './needLogin/loginUrl';\nimport { getCookie } from '@/utils/cookie';\nimport { getToken } from '@/utils/token'; // import { MessageBox, Message } from 'element-ui'\n//可以创建多个axois实例，需要用哪个就引入使用哪个\n\nvar cloudMusic = axios.create({\n  baseURL: 'https://wacht.xyz/',\n  // baseURL: 'https://biejuanle.icu/',\n  // baseURL: 'http://localhost:3000/',\n  // changeOrigin: true,  //解决跨域\n  withCredentials: true,\n  data: {\n    csrf_token: getToken()\n  }\n});\nvar cloudMusic2 = axios.create({\n  baseURL: 'https://biejuanle.icu/',\n  // baseURL:'http://localhost:3000/'\n  // changeOrigin: true,  //解决跨域\n  withCredentials: true\n}); //配置全局的axios默认值\n// axios.defaults.baseURL = '你的基础域名'\n\naxios.defaults.timeout = 5000; // 在全局请求和响应拦截器中添加请求状态\n// Add a request interceptor\n\ncloudMusic.interceptors.request.use(function (config) {\n  if (loginUrl.includes(config.url) && !localStorage.getItem(\"user\")) {\n    //当请求的url需要登录，并且此时未登录时，进入此处\n    Message.error('该操作需要登录');\n    return false;\n  }\n\n  return config;\n}, function (error) {\n  // Do something with request error\n  return Promise.reject(error);\n}); // Add a response interceptor\n\ncloudMusic.interceptors.response.use(function (response) {\n  return response;\n}, function (error) {\n  if (loginUrl.includes(config.url) && !localStorage.getItem(\"user\")) {\n    //当请求的url需要登录，并且此时未登录时，进入此处\n    Message.error('请求错误');\n    return false;\n  }\n\n  return Promise.reject(error);\n});\nexport { cloudMusic, cloudMusic2 }; //其他文件可通过import { cloudMusic, cloudMusic2 } from  ...导入使用\n// export default cloudMusic2;//default只能导出一个","map":{"version":3,"sources":["D:/data/桌面/git/cloudMusic-Source-Code/src/api/request.js"],"names":["axios","Message","loginUrl","getCookie","getToken","cloudMusic","create","baseURL","withCredentials","data","csrf_token","cloudMusic2","defaults","timeout","interceptors","request","use","config","includes","url","localStorage","getItem","error","Promise","reject","response"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,SAASC,SAAT,QAA0B,gBAA1B;AACA,SAASC,QAAT,QAAyB,eAAzB,C,CACA;AAIA;;AACA,IAAMC,UAAU,GAAGL,KAAK,CAACM,MAAN,CAAa;AAC5BC,EAAAA,OAAO,EAAE,oBADmB;AAE5B;AACA;AACA;AACAC,EAAAA,eAAe,EAAE,IALW;AAM5BC,EAAAA,IAAI,EAAE;AACFC,IAAAA,UAAU,EAAEN,QAAQ;AADlB;AANsB,CAAb,CAAnB;AAUA,IAAMO,WAAW,GAAGX,KAAK,CAACM,MAAN,CAAa;AAC7BC,EAAAA,OAAO,EAAE,wBADoB;AAE7B;AACA;AACAC,EAAAA,eAAe,EAAE;AAJY,CAAb,CAApB,C,CAOA;AACA;;AACAR,KAAK,CAACY,QAAN,CAAeC,OAAf,GAAyB,IAAzB,C,CAEA;AACA;;AACAR,UAAU,CAACS,YAAX,CAAwBC,OAAxB,CAAgCC,GAAhC,CAAoC,UAAAC,MAAM,EAAI;AAC1C,MAAIf,QAAQ,CAACgB,QAAT,CAAkBD,MAAM,CAACE,GAAzB,KAAiC,CAACC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAtC,EAAoE;AAAC;AACjEpB,IAAAA,OAAO,CAACqB,KAAR,CAAc,SAAd;AACA,WAAO,KAAP;AACH;;AACD,SAAOL,MAAP;AACH,CAND,EAMG,UAAAK,KAAK,EAAI;AACR;AACA,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CATD,E,CAUA;;AACAjB,UAAU,CAACS,YAAX,CAAwBW,QAAxB,CAAiCT,GAAjC,CAAqC,UAAAS,QAAQ,EAAI;AAE7C,SAAOA,QAAP;AACH,CAHD,EAGG,UAAAH,KAAK,EAAI;AACR,MAAIpB,QAAQ,CAACgB,QAAT,CAAkBD,MAAM,CAACE,GAAzB,KAAiC,CAACC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAtC,EAAoE;AAAC;AACjEpB,IAAAA,OAAO,CAACqB,KAAR,CAAc,MAAd;AACA,WAAO,KAAP;AACH;;AAED,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CAVD;AAWA,SAASjB,UAAT,EAAqBM,WAArB,G,CAAmC;AACnC","sourcesContent":["import axios from 'axios'\nimport { Message } from 'element-ui'\nimport loginUrl from './needLogin/loginUrl';\nimport { getCookie } from '@/utils/cookie';\nimport { getToken } from '@/utils/token'\n// import { MessageBox, Message } from 'element-ui'\n\n\n\n//可以创建多个axois实例，需要用哪个就引入使用哪个\nconst cloudMusic = axios.create({\n    baseURL: 'https://wacht.xyz/',\n    // baseURL: 'https://biejuanle.icu/',\n    // baseURL: 'http://localhost:3000/',\n    // changeOrigin: true,  //解决跨域\n    withCredentials: true,\n    data: {\n        csrf_token: getToken()\n    }\n});\nconst cloudMusic2 = axios.create({\n    baseURL: 'https://biejuanle.icu/',\n    // baseURL:'http://localhost:3000/'\n    // changeOrigin: true,  //解决跨域\n    withCredentials: true,\n});\n\n//配置全局的axios默认值\n// axios.defaults.baseURL = '你的基础域名'\naxios.defaults.timeout = 5000\n\n// 在全局请求和响应拦截器中添加请求状态\n// Add a request interceptor\ncloudMusic.interceptors.request.use(config => {\n    if (loginUrl.includes(config.url) && !localStorage.getItem(\"user\")) {//当请求的url需要登录，并且此时未登录时，进入此处\n        Message.error('该操作需要登录')\n        return false\n    }\n    return config\n}, error => {\n    // Do something with request error\n    return Promise.reject(error);\n});\n// Add a response interceptor\ncloudMusic.interceptors.response.use(response => {\n\n    return response;\n}, error => {\n    if (loginUrl.includes(config.url) && !localStorage.getItem(\"user\")) {//当请求的url需要登录，并且此时未登录时，进入此处\n        Message.error('请求错误')\n        return false\n    }\n\n    return Promise.reject(error);\n});\nexport { cloudMusic, cloudMusic2 };//其他文件可通过import { cloudMusic, cloudMusic2 } from  ...导入使用\n// export default cloudMusic2;//default只能导出一个\n\n\n"]},"metadata":{},"sourceType":"module"}