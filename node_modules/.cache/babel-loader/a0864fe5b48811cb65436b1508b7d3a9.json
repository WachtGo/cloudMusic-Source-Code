{"ast":null,"code":"import \"core-js/modules/es.array.fill.js\";\n//\n//\n//\n//\nexport default {\n  name: \"MaskCanvas\",\n  data: function data() {\n    return {\n      canvas: \"\",\n      stars_count: \"\",\n      stars: []\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.ini();\n    this.makeStars();\n    var interval = setInterval(function () {\n      this.drawStars();\n    }, 50); //定时刷新星星数据\n\n    window.onresize = function () {\n      _this.ini();\n\n      _this.makeStars();\n\n      var interval = setInterval(function () {\n        this.drawStars();\n      }, 50); //定时刷新星星数据\n    };\n  },\n  methods: {\n    ini: function ini() {\n      //初始化\n      this.canvas = document.getElementById(\"starfield\");\n      this.canvas.width = window.innerWidth;\n      this.canvas.height = window.innerHeight;\n      context = this.canvas.getContext(\"2d\");\n      this.stars = Array(); //数组存放随机生成的星星数据（x,y,大小，颜色，速度）\n\n      this.stars_count = 800; //星星数量\n\n      clearInterval(interval);\n    },\n    makeStars: function makeStars() {\n      //随机生成星星数据\n      for (var i = 0; i < this.stars_count; i++) {\n        console.log(this);\n        var x = Math.random() * this.canvas.offsetWidth;\n        var y = Math.random() * this.canvas.offsetHeight;\n        var radius = Math.random() * 0.8;\n        var color = \"rgba(\" + Math.random() * 255 + \",\" + Math.random() * 255 + \",\" + Math.random() * 255 + \",0.8)\";\n        var speed = Math.random() * 0.5;\n        var arr = {\n          x: x,\n          y: y,\n          radius: radius,\n          color: color,\n          speed: speed\n        }; //（x,y,大小，颜色，速度）\n\n        this.stars.push(arr); //随机生成的星星数据存在这里\n      }\n    },\n    drawStars: function drawStars() {\n      //把星星画到画布上\n      context.fillStyle = \"#0e1729\";\n      context.fillRect(0, 0, this.canvas.width, this.canvas.height);\n\n      for (var i = 0; i < this.stars.length; i++) {\n        var x = this.stars[i][\"x\"] - this.stars[i][\"speed\"];\n        if (x < -2 * this.stars[i][\"radius\"]) x = this.canvas.width;\n        this.stars[i][\"x\"] = x;\n        var y = this.stars[i][\"y\"];\n        var radius = this.stars[i][\"radius\"];\n        context.beginPath();\n        context.arc(x, y, radius * 2, 0, 2 * Math.PI);\n        context.fillStyle = \"rgba(\" + Math.random() * 255 + \",\" + Math.random() * 255 + \",\" + Math.random() * 255 + \",0.8)\";\n        context.fill();\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;AAKA;AACAA,oBADA;AAEAC,MAFA,kBAEA;AACA;AACAC,gBADA;AAEAC,qBAFA;AAGAC;AAHA;AAKA,GARA;AASAC,SATA,qBASA;AAAA;;AACA;AACA;AACA;AACA;AACA,KAFA,EAEA,EAFA,EAHA,CAKA;;AACAC;AACA;;AACA;;AACA;AACA;AACA,OAFA,EAEA,EAFA,EAHA,CAKA;AACA,KANA;AAOA,GAtBA;AAuBAC;AACAC,OADA,iBACA;AACA;AACA;AACA;AACA;AACAC;AACA,2BANA,CAMA;;AACA,6BAPA,CAOA;;AACAC;AACA,KAVA;AAYAC,aAZA,uBAYA;AACA;AACA;AACAC;AACA;AACA;AACA;AACA,oBACA,UACAC,mBADA,GAEA,GAFA,GAGAA,mBAHA,GAIA,GAJA,GAKAA,mBALA,GAMA,OAPA;AAQA;AACA;AACAC,cADA;AAEAC,cAFA;AAGAC,wBAHA;AAIAC,sBAJA;AAKAC;AALA,UAdA,CAoBA;;AACA,6BArBA,CAqBA;AACA;AACA,KArCA;AAuCAC,aAvCA,uBAuCA;AACA;AACAV;AACAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACAA;AACAA;AACAA,4BACA,UACAI,mBADA,GAEA,GAFA,GAGAA,mBAHA,GAIA,GAJA,GAKAA,mBALA,GAMA,OAPA;AAQAJ;AACA;AACA;AA7DA;AAvBA","names":["name","data","canvas","stars_count","stars","mounted","window","methods","ini","context","clearInterval","makeStars","console","Math","x","y","radius","color","speed","drawStars"],"sourceRoot":"src/components","sources":["maskCanvas.vue"],"sourcesContent":["<template>\r\n  <canvas id=\"myCanvas\"></canvas>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"MaskCanvas\",\r\n  data() {\r\n    return {\r\n      canvas: \"\",\r\n      stars_count: \"\",\r\n      stars: [],\r\n    };\r\n  },\r\n  mounted() {\r\n    this.ini();\r\n    this.makeStars();\r\n    let interval = setInterval(function () {\r\n      this.drawStars();\r\n    }, 50); //定时刷新星星数据\r\n    window.onresize = () => {\r\n      this.ini();\r\n      this.makeStars();\r\n      let interval = setInterval(function () {\r\n        this.drawStars();\r\n      }, 50); //定时刷新星星数据\r\n    };\r\n  },\r\n  methods: {\r\n    ini() {\r\n      //初始化\r\n      this.canvas = document.getElementById(\"starfield\");\r\n      this.canvas.width = window.innerWidth;\r\n      this.canvas.height = window.innerHeight;\r\n      context = this.canvas.getContext(\"2d\");\r\n      this.stars = Array(); //数组存放随机生成的星星数据（x,y,大小，颜色，速度）\r\n      this.stars_count = 800; //星星数量\r\n      clearInterval(interval);\r\n    },\r\n\r\n    makeStars() {\r\n      //随机生成星星数据\r\n      for (var i = 0; i < this.stars_count; i++) {\r\n        console.log(this);\r\n        let x = Math.random() * this.canvas.offsetWidth;\r\n        let y = Math.random() * this.canvas.offsetHeight;\r\n        let radius = Math.random() * 0.8;\r\n        let color =\r\n          \"rgba(\" +\r\n          Math.random() * 255 +\r\n          \",\" +\r\n          Math.random() * 255 +\r\n          \",\" +\r\n          Math.random() * 255 +\r\n          \",0.8)\";\r\n        let speed = Math.random() * 0.5;\r\n        let arr = {\r\n          x: x,\r\n          y: y,\r\n          radius: radius,\r\n          color: color,\r\n          speed: speed,\r\n        }; //（x,y,大小，颜色，速度）\r\n        this.stars.push(arr); //随机生成的星星数据存在这里\r\n      }\r\n    },\r\n\r\n    drawStars() {\r\n      //把星星画到画布上\r\n      context.fillStyle = \"#0e1729\";\r\n      context.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n      for (var i = 0; i < this.stars.length; i++) {\r\n        var x = this.stars[i][\"x\"] - this.stars[i][\"speed\"];\r\n        if (x < -2 * this.stars[i][\"radius\"]) x = this.canvas.width;\r\n        this.stars[i][\"x\"] = x;\r\n        var y = this.stars[i][\"y\"];\r\n        var radius = this.stars[i][\"radius\"];\r\n        context.beginPath();\r\n        context.arc(x, y, radius * 2, 0, 2 * Math.PI);\r\n        context.fillStyle =\r\n          \"rgba(\" +\r\n          Math.random() * 255 +\r\n          \",\" +\r\n          Math.random() * 255 +\r\n          \",\" +\r\n          Math.random() * 255 +\r\n          \",0.8)\";\r\n        context.fill();\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n// canvas {\r\n//   position: absolute;\r\n//   /*设置定位*/\r\n//   top: 0;\r\n//   left: 0;\r\n//   z-index: -6;\r\n//   /*使画布基于最低层*/\r\n//   // background: #0e1729;\r\n//   /*画布背景色*/\r\n// }\r\n</style>"]},"metadata":{},"sourceType":"module"}