{"ast":null,"code":"import _asyncToGenerator from \"D:/data/\\u684C\\u9762/\\u4EE3\\u7801\\u6587\\u4EF6\\u5939/git/cloudMusic-Source-Code-main/cloudMusic-Source-Code-main/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.string.sub.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getHotPlayList as _getHotPlayList, getAllPlayList as _getAllPlayList, getPlaylist as _getPlaylist } from \"@/api/api\";\nimport { transPlayCount } from \"@/utils/commonApi\";\nexport default {\n  data: function data() {\n    return {\n      hotPlaylistTag: [],\n      categaryShow: false,\n      order: \"最新\",\n      currentTag: \"全部\",\n      categories: {},\n      categoryTag: {\n        0: [],\n        1: [],\n        2: [],\n        3: [],\n        4: []\n      },\n      playListTable: [],\n      count: 0,\n      //初始页\n      currentPage: 1\n    };\n  },\n  watch: {\n    //排列顺序发生变化时，自动获取\n    order: function order() {\n      this.getPlaylist(this.currentTag);\n    }\n  },\n  mounted: function mounted() {\n    this.getHotPlayList();\n    this.getAllPlayList();\n    this.getPlaylist(this.currentTag);\n  },\n  methods: {\n    //获取热门分类歌单\n    getHotPlayList: function getHotPlayList() {\n      var that = this;\n\n      _getHotPlayList().then(function (res) {\n        that.hotPlaylistTag = res.data.tags;\n      });\n    },\n    //获取全部歌单分类\n    getAllPlayList: function getAllPlayList() {\n      var that = this;\n\n      _getAllPlayList().then( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(res) {\n          var _loop, key;\n\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return res.data.categories;\n\n                case 2:\n                  that.categories = _context.sent;\n\n                  _loop = function _loop(key) {\n                    res.data.sub.forEach(function (item) {\n                      if (item.category == key) {\n                        that.categoryTag[key].push(item); // console.log(that.categoryTag)\n                      }\n                    });\n                  };\n\n                  for (key in that.categoryTag) {\n                    _loop(key);\n                  }\n\n                case 5:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    },\n    //获取歌单列表----\n    getPlaylist: function getPlaylist(cat, notChangePage) {\n      var that = this;\n      var params = {\n        cat: cat,\n        order: that.order,\n        limit: 15,\n        offset: (that.currentPage - 1) * 15\n      };\n      that.categaryShow = false;\n      if (that.currentTag === cat && notChangePage) return;\n      that.playListTable = []; //清空，重新获取，防止页面图片加载慢\n\n      that.currentTag = cat;\n\n      _getPlaylist(params).then( /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(res) {\n          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.next = 2;\n                  return res.data.playlists;\n\n                case 2:\n                  that.playListTable = _context2.sent;\n                  _context2.next = 5;\n                  return res.data.total;\n\n                case 5:\n                  that.count = _context2.sent;\n                  // transPlayCount(that.playListTable)\n                  transPlayCount(that.playListTable, \"playCount\");\n\n                case 7:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function (_x2) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n    },\n    //传入歌单id进入歌单详情\n    goSongList: function goSongList(songListDetail) {\n      //传入歌单id进入歌单详情\n      console.log(\"歌单详情\", songListDetail);\n      var that = this;\n      that.$router.push({\n        name: \"playListDetails\",\n        params: {\n          playListDetail: songListDetail\n        }\n      });\n    },\n    //分页\n    handleCurrentChange: function handleCurrentChange(currentPage) {\n      // console.log(`当前页: ${currentPage}`);\n      var that = this;\n      that.currentPage = currentPage;\n      that.getPlaylist(that.currentTag, false);\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkHA;AACA;AACA;AACAA,MADA,kBACA;AACA;AACAC,wBADA;AAEAC,yBAFA;AAGAC,iBAHA;AAIAC,sBAJA;AAKAC,oBALA;AAMAC;AACA,aADA;AAEA,aAFA;AAGA,aAHA;AAIA,aAJA;AAKA;AALA,OANA;AAaAC,uBAbA;AAcAC,cAdA;AAeA;AACAC;AAhBA;AAkBA,GApBA;AAqBAC;AACA;AACAP,SAFA,mBAEA;AACA;AACA;AAJA,GArBA;AA2BAQ,SA3BA,qBA2BA;AACA;AACA;AACA;AACA,GA/BA;AAgCAC;AACA;AACAC,kBAFA,4BAEA;AACA;;AACAA;AACAC;AACA,OAFA;AAGA,KAPA;AAQA;AACAC,kBATA,4BASA;AACA;;AACAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEAC,mBAFA;;AAAA;AAEAF,iCAFA;;AAAA,yCAGAG,GAHA;AAIAD;AACA;AACAF,yDADA,CAEA;AACA;AACA,qBALA;AAJA;;AAGA;AAAA;AAOA;;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAYA,KAvBA;AAwBA;AACAI,eAzBA,uBAyBAC,GAzBA,EAyBAC,aAzBA,EAyBA;AACA;AACA;AACAD,gBADA;AAEAhB,yBAFA;AAGAkB,iBAHA;AAIAC;AAJA;AAMAR;AACA;AACAA,8BAVA,CAUA;;AACAA;;AACAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEAF,kBAFA;;AAAA;AAEAF,oCAFA;AAAA;AAAA,yBAIAE,cAJA;;AAAA;AAIAF,4BAJA;AAKA;AACAS;;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAQA,KA7CA;AA8CA;AACAC,cA/CA,sBA+CAC,cA/CA,EA+CA;AACA;AACAC;AACA;AACAZ;AACAa,+BADA;AAEAC;AAAAC;AAAA;AAFA;AAIA,KAvDA;AAwDA;AACAC;AACA;AACA;AACAhB;AACAA;AACA;AA9DA;AAhCA","names":["data","hotPlaylistTag","categaryShow","order","currentTag","categories","categoryTag","playListTable","count","currentPage","watch","mounted","methods","getHotPlayList","that","getAllPlayList","res","key","getPlaylist","cat","notChangePage","limit","offset","transPlayCount","goSongList","songListDetail","console","name","params","playListDetail","handleCurrentChange"],"sourceRoot":"src/views/categery","sources":["playlistCategary.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"list-wrap\">\n      <div>\n        <div class=\"inline-block\" style=\"padding: 5px 0\">\n          <span style=\"font-size: 16px\">热门歌单分类：</span>\n          <span\n            class=\"hotCategary\"\n            v-for=\"item in hotPlaylistTag\"\n            :key=\"item.id\"\n            @click=\"getPlaylist(item.name)\"\n          >\n            {{ item.name }}\n          </span>\n        </div>\n        <div class=\"inline-block clearfix\" style=\"float: right; padding: 5px 0\">\n          <span style=\"color: #eee\">当前：</span>\n          <span class=\"categary-select\">{{ currentTag }}</span> -\n          <span style=\"color: #eee\">&nbsp;排列：</span>\n          <span\n            class=\"categary-select\"\n            v-if=\"order === '最热'\"\n            @click=\"order = '最新'\"\n            >最热</span\n          >\n          <span\n            class=\"categary-select\"\n            v-if=\"order === '最新'\"\n            @click=\"order = '最热'\"\n            >最新</span\n          >\n          -\n          <span class=\"categary-allTag\" @click=\"categaryShow = !categaryShow\"\n            >&nbsp;全部分类</span\n          >\n          <!-- 全部分类窗口 -->\n          <div class=\"categary-allTag-wrap\" v-if=\"categaryShow\">\n            <div\n              class=\"categary-allTag-wrap-list\"\n              v-for=\"(item, index) in categories\"\n              :key=\"index\"\n            >\n              <div>\n                <span>{{ item }}:</span>\n              </div>\n              <div class=\"categary-allTag-wrap-list-item\">\n                <span\n                  v-for=\"(item, index2) in categoryTag[index]\"\n                  @click=\"getPlaylist(item.name)\"\n                  :key=\"index2\"\n                  >{{ item.name }}</span\n                >\n              </div>\n            </div>\n            <div class=\"categary-allTag-wrap-list\">\n              <div><span>全部:</span></div>\n              <div class=\"categary-allTag-wrap-list-item\">\n                <span @click=\"getPlaylist('全部')\">全部</span>\n              </div>\n            </div>\n          </div>\n        </div>\n        <!-- <div class=\"descript\"></div> -->\n      </div>\n\n      <!-- <div class=\"descript\"></div> -->\n      <!-- 歌单列表 -->\n      <div class=\"playListClass\">\n        <div class=\"recPlay\">\n          <div class=\"loading\" v-show=\"playListTable.length === 0\">\n            <i class=\"el-icon-loading\"></i>\n          </div>\n          <ul class=\"playListWrap\">\n            <li\n              class=\"playListTable\"\n              v-for=\"(item, index) in playListTable\"\n              :key=\"index\"\n            >\n              <div class=\"image\">\n                <img\n                  :src=\"item.coverImgUrl\"\n                  alt=\" \"\n                  title=\"\"\n                  @click=\"goSongList(item)\"\n                />\n                <span class=\"playCount\"\n                  ><i class=\"el-icon-video-play\" style=\"margin-right: 1px\"></i\n                  >{{ item.playCount }}</span\n                >\n              </div>\n              <p class=\"List-title\" @click=\"goSongList(item)\">\n                <span>{{ item.name }} </span>\n              </p>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n    <div class=\"pagination position_bottom\">\n      <el-pagination\n        v-show=\"count !== 0\"\n        @current-change=\"handleCurrentChange\"\n        :current-page.sync=\"currentPage\"\n        :page-size=\"15\"\n        layout=\"prev, pager, next, jumper\"\n        :total=\"count\"\n        :background=\"true\"\n      >\n      </el-pagination>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { getHotPlayList, getAllPlayList, getPlaylist } from \"@/api/api\";\nimport { transPlayCount } from \"@/utils/commonApi\";\nexport default {\n  data() {\n    return {\n      hotPlaylistTag: [],\n      categaryShow: false,\n      order: \"最新\",\n      currentTag: \"全部\",\n      categories: {},\n      categoryTag: {\n        0: [],\n        1: [],\n        2: [],\n        3: [],\n        4: [],\n      },\n      playListTable: [],\n      count: 0,\n      //初始页\n      currentPage: 1,\n    };\n  },\n  watch: {\n    //排列顺序发生变化时，自动获取\n    order() {\n      this.getPlaylist(this.currentTag);\n    },\n  },\n  mounted() {\n    this.getHotPlayList();\n    this.getAllPlayList();\n    this.getPlaylist(this.currentTag);\n  },\n  methods: {\n    //获取热门分类歌单\n    getHotPlayList() {\n      let that = this;\n      getHotPlayList().then((res) => {\n        that.hotPlaylistTag = res.data.tags;\n      });\n    },\n    //获取全部歌单分类\n    getAllPlayList() {\n      let that = this;\n      getAllPlayList().then(async (res) => {\n        // console.log(res)\n        that.categories = await res.data.categories;\n        for (let key in that.categoryTag) {\n          res.data.sub.forEach((item) => {\n            if (item.category == key) {\n              that.categoryTag[key].push(item);\n              // console.log(that.categoryTag)\n            }\n          });\n        }\n      });\n    },\n    //获取歌单列表----\n    getPlaylist(cat, notChangePage) {\n      let that = this;\n      let params = {\n        cat: cat,\n        order: that.order,\n        limit: 15,\n        offset: (that.currentPage - 1) * 15,\n      };\n      that.categaryShow = false;\n      if (that.currentTag === cat && notChangePage) return;\n      that.playListTable = []; //清空，重新获取，防止页面图片加载慢\n      that.currentTag = cat;\n      getPlaylist(params).then(async (res) => {\n        // console.log(res)\n        that.playListTable = await res.data.playlists;\n        // console.log(that.playListTable)\n        that.count = await res.data.total;\n        // transPlayCount(that.playListTable)\n        transPlayCount(that.playListTable, \"playCount\");\n      });\n    },\n    //传入歌单id进入歌单详情\n    goSongList(songListDetail) {\n      //传入歌单id进入歌单详情\n      console.log(\"歌单详情\", songListDetail);\n      var that = this;\n      that.$router.push({\n        name: \"playListDetails\",\n        params: { playListDetail: songListDetail },\n      });\n    },\n    //分页\n    handleCurrentChange: function (currentPage) {\n      // console.log(`当前页: ${currentPage}`);\n      var that = this;\n      that.currentPage = currentPage;\n      that.getPlaylist(that.currentTag, false);\n    },\n  },\n};\n</script>\n\n<style lang=\"less\" scoped>\n.descript {\n  display: flex;\n  justify-content: space-between;\n  // color: aliceblue;\n  font-weight: bolder;\n  padding: 0 20px;\n  border-radius: 20px 20px 0 0;\n  // background: rgba(95, 158, 160, 0.05);\n  box-sizing: border-box;\n}\n.list-wrap {\n  margin: 10px auto 0;\n  padding: 0 20px;\n  width: 1120px;\n  height: 697px;\n  border-radius: 20px;\n  // background: rgba(95, 158, 160, 0.11);\n  box-sizing: border-box;\n\n  .hotCategary {\n    padding: 0 5px;\n    font-size: 15px;\n    color: rgb(201, 185, 165);\n    // border: 1px dotted rgb(192, 190, 190);\n    // border-radius: 10px;\n    transition: 0.3s;\n\n    &:hover {\n      cursor: pointer;\n      color: rgb(202, 162, 108);\n    }\n  }\n  .categary-select {\n    padding: 0 10px;\n    // border: 1px solid #eee;\n    border-radius: 10px;\n\n    color: rgb(202, 162, 108);\n    transition: 0.3s;\n    &:hover {\n      color: rgb(202, 162, 108);\n      cursor: pointer;\n    }\n  }\n  .categary-allTag {\n    color: rgb(201, 185, 165);\n    transition: 0.2s;\n    &:hover {\n      color: rgb(202, 162, 108);\n      cursor: pointer;\n    }\n  }\n  .categary-allTag-wrap {\n    z-index: 100;\n    position: absolute;\n    right: 40px;\n    width: 600px;\n    height: 300px;\n    padding: 10px;\n    background: url(@/static/img/background8.jpeg); //---------------需要与主题一同更改\n    // background-size: cover;\n    border-radius: 20px;\n    overflow-x: hidden;\n    box-sizing: border-box;\n    &::-webkit-scrollbar {\n      display: none;\n    }\n\n    .categary-allTag-wrap-list-item {\n      padding: 5px 20px;\n\n      box-sizing: border-box;\n      // background: rgb(153, 140, 140);\n\n      span {\n        display: inline-block;\n        margin: 5px 10px;\n        color: rgb(207, 206, 204);\n        transition: 0.2s;\n\n        &:hover {\n          color: rgb(202, 162, 108);\n          cursor: pointer;\n        }\n      }\n    }\n  }\n}\n/* 歌单列表样式 */\n.playListClass {\n  .recPlay {\n    margin: auto;\n    width: 100%;\n    height: 655px;\n    overflow-x: hidden;\n\n    &::-webkit-scrollbar {\n      display: none;\n    }\n\n    .playListWrap {\n      display: flex;\n      justify-content: space-between;\n      flex-wrap: wrap; //根据宽度限制一行的盒子个数\n      margin: 0 0 10px;\n      width: 100%;\n      // max-height: 100%;\n      background: transparent;\n      overflow-x: hidden;\n      &::-webkit-scrollbar {\n        display: none;\n      }\n      .playListTable {\n        margin-bottom: 10px;\n        width: 205px;\n        height: 230px;\n        box-sizing: border-box;\n\n        .image {\n          position: relative;\n          margin: 10px auto;\n          width: 190px;\n          height: 190px;\n          border-radius: 10px;\n          overflow: hidden;\n          transition: 0.2s;\n\n          &:hover {\n            transform: scale(1.06);\n            cursor: pointer;\n            // height: 210px;\n          }\n          img {\n            position: absolute;\n            width: 100%;\n            height: 100%;\n          }\n\n          .playCount {\n            position: absolute;\n            z-index: 99;\n            right: 10px;\n            background: transparent;\n          }\n        }\n        .List-title {\n          margin: 0 auto;\n          font-size: 15px;\n          // padding: 0 10px;\n          width: 180px;\n          transition: 0.2s;\n          text-align: center;\n          text-overflow: ellipsis;\n          white-space: nowrap;\n          overflow: hidden; /*必须结合的属性,当内容溢出元素框时发生的事情*/\n          text-overflow: ellipsis; /*可以用来多行文本的情况下，用省略号“…”隐藏超出范围的文本 。*/\n          white-space: nowrap;\n          display: -webkit-box; /*必须结合的属性 ，将对象作为弹性伸缩盒子模型显示 。*/\n          -webkit-line-clamp: 1; /*用来限制在一个块元素显示的文本的行数。*/\n          -webkit-box-orient: vertical; /*必须结合的属性 ，设置或检索伸缩盒对象的子元素的排列方式 。*/\n          span {\n            display: inline-block;\n            width: 180px;\n            // text-align: center;\n            text-overflow: ellipsis;\n            overflow: hidden;\n            white-space: nowrap;\n\n            &:hover {\n              color: rgb(145, 245, 228);\n              cursor: pointer;\n            }\n          }\n        }\n      }\n    }\n  }\n}\n// .position_bottom{\n  // position: absolute;\n  // bottom: 0;\n// }\n.pagination {\n  text-align: center;\n  background: none !important;\n\n  /deep/ .el-pager {\n    height: 30px !important;\n    background: none !important;\n  }\n  /deep/ .number,\n  /deep/ .btn-prev,\n  /deep/ .btn-quicknext,\n  /deep/ .btn-next,\n  /deep/ .el-input__inner,\n  /deep/ .more {\n    color: #f2fff7 !important;\n    background: transparent !important;\n  }\n  /deep/ .number:hover,\n  /deep/ .btn-prev:hover,\n  /deep/ .btn-quicknext:hover,\n  /deep/ .btn-next:hover,\n  /deep/ .el-input__inner:hover,\n  /deep/ .more:hover {\n    color: #f7a588 !important;\n  }\n  /deep/ .active {\n    color: #f7a588 !important;\n  }\n  /deep/ .el-input__inner {\n    border: none;\n  }\n  /deep/ .el-pagination__jump {\n    color: #f7dd88 !important;\n  }\n  /deep/ .el-pagination {\n    height: 100% !important;\n  }\n}\n</style>"]},"metadata":{},"sourceType":"module"}