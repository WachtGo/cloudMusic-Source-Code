{"ast":null,"code":"import axios from 'axios';\nimport { Message, MessageBox } from 'element-ui';\nimport store from '@/store';\nimport { getToken } from '@/utils/auth'; // import { MessageBox, Message } from 'element-ui'\n//创建axois实例\n\nvar service = axios.create({\n  // baseURL: 'https://cloud-music-isntafzhs-wachtgo.vercel.app/',\n  baseURL: 'http://localhost:3000/',\n  // changeOrigin: true,  //解决跨域\n  // xhrFields: { withCredentials: true },\n  // withCredentials: true\n  withCredentials: true\n}); // respone拦截器\n\nservice.interceptors.response.use(function (response) {\n  if (response.code !== 200) {\n    console.log('---');\n  }\n\n  return response;\n}); // axios.defaults.withCredentials = true\n\nexport default service;","map":{"version":3,"sources":["D:/Desktop/git工作区/cloudMusic-Source-Code/src/utils/request.js"],"names":["axios","Message","MessageBox","store","getToken","service","create","baseURL","withCredentials","interceptors","response","use","code","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,YAApC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,QAAT,QAAyB,cAAzB,C,CACA;AACA;;AACA,IAAMC,OAAO,GAAGL,KAAK,CAACM,MAAN,CAAa;AACzB;AACAC,EAAAA,OAAO,EAAE,wBAFgB;AAIzB;AACA;AACA;AACAC,EAAAA,eAAe,EAAE;AAPQ,CAAb,CAAhB,C,CASA;;AACAH,OAAO,CAACI,YAAR,CAAqBC,QAArB,CAA8BC,GAA9B,CACE,UAAAD,QAAQ,EAAI;AACV,MAAGA,QAAQ,CAACE,IAAT,KAAkB,GAArB,EAAyB;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACD;;AACD,SAAOJ,QAAP;AACD,CANH,E,CAQA;;AACA,eAAeL,OAAf","sourcesContent":["import axios from 'axios'\r\nimport { Message, MessageBox } from 'element-ui'\r\nimport store from '@/store'\r\nimport { getToken } from '@/utils/auth'\r\n// import { MessageBox, Message } from 'element-ui'\r\n//创建axois实例\r\nconst service = axios.create({\r\n    // baseURL: 'https://cloud-music-isntafzhs-wachtgo.vercel.app/',\r\n    baseURL: 'http://localhost:3000/',\r\n    \r\n    // changeOrigin: true,  //解决跨域\r\n    // xhrFields: { withCredentials: true },\r\n    // withCredentials: true\r\n    withCredentials: true,\r\n});\r\n// respone拦截器\r\nservice.interceptors.response.use(\r\n  response => {\r\n    if(response.code !== 200){\r\n      console.log('---')\r\n    }\r\n    return response\r\n  })\r\n \r\n// axios.defaults.withCredentials = true\r\nexport default service;"]},"metadata":{},"sourceType":"module"}