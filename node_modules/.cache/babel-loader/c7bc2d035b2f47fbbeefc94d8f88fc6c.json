{"ast":null,"code":"import _createForOfIteratorHelper from \"D:/Desktop/git\\u5DE5\\u4F5C\\u533A/cloudMusic-Source-Code/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.search.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getMusicInfo, playMusicUrl, getSongLyric, getSongDetails, getSongList, getDownloadUrl as _getDownloadUrl } from \"@/api/api\";\nimport { download } from \"@/api/download\";\nexport default {\n  data: function data() {\n    return {\n      //试听音乐\n      listen: [],\n      //单曲，专辑，歌手，歌单开关\n      tagSwitch: {},\n      //MV列表\n      videoList: [],\n      //歌单列表\n      playListTable: [],\n      // 歌曲列表\n      musicList: [],\n      // 专辑列表\n      albumList: [],\n      //歌手列表\n      singerList: [],\n      //MV列表\n      mvList: [],\n      //音乐下载地址\n      downLoadUrl: \"\",\n      //标签切换\n      activeName: \"first\",\n      //搜索内容总数（歌曲，歌单，mv,等）\n      count: \"\",\n      //音乐地址\n      songUrlAdd: null,\n      //歌词\n      songlrc: \"\",\n      //初始页\n      currentPage: 1\n    };\n  },\n  created: function created() {\n    // console.log(this);\n    var that = this;\n    that.tagSwitch = that.$store.state.tagSwitch;\n    that.search();\n  },\n  methods: {\n    //标签切换\n    tagSelect: function tagSelect(tag) {\n      var that = this;\n      that.$store.commit(\"tagSelect\", tag);\n      that.$nextTick(function () {\n        that.search();\n      });\n    },\n    //分页\n    handleCurrentChange: function handleCurrentChange(currentPage) {\n      // console.log(`当前页: ${currentPage}`);\n      this.currentPage = currentPage;\n      var that = this;\n\n      if (that.$route.query.recplaylist) {\n        that.getSongList(currentPage);\n      } else if (that.tagSwitch.songSwitch) {\n        that.getSingleMuscic();\n      } else if (that.tagSwitch.playListSwitch) {\n        that.getMusicList();\n      } else if (that.tagSwitch.videoSwitch) {\n        that.getVideoList();\n      } else if (that.tagSwitch.mvSwitch) {\n        that.getMVList();\n      } else if (that.tagSwitch.singerSwitch) {\n        that.getSingerList();\n      } else if (that.tagSwitch.albumSwitch) {\n        that.getSingerList();\n      }\n    },\n    search: function search() {\n      var that = this;\n\n      if (that.$route.query.recplaylist) {\n        that.getSongListDetails(); //歌单详情\n      } else if (that.tagSwitch.songSwitch) {\n        that.getSingleMuscic();\n      } else if (that.tagSwitch.playListSwitch) {\n        that.getMusicList();\n      } else if (that.tagSwitch.videoSwitch) {\n        that.getVideoList();\n      } else if (that.tagSwitch.mvSwitch) {\n        that.getMVList();\n      } else if (that.tagSwitch.singerSwitch) {\n        that.getSingerList();\n      } else if (that.tagSwitch.albumSwitch) {\n        that.getAlbumList();\n      }\n    },\n    //获取歌曲详情,进入详情页面\n    goSongDetails: function goSongDetails(ids) {\n      this.$router.push({\n        name: \"songDetails\",\n        params: {\n          songId: ids\n        }\n      });\n    },\n    //获取专辑详情\n    goAlbumDetail: function goAlbumDetail(id) {\n      this.$router.push({\n        name: \"albumDetail\",\n        params: {\n          id: id\n        }\n      });\n    },\n    //获取歌手详情\n    goSingerDetail: function goSingerDetail(id) {\n      if (id) {\n        this.$router.push({\n          name: \"singerDetail\",\n          params: {\n            id: id\n          }\n        });\n      }\n    },\n    //传入歌单id进入歌曲列表\n    goSongList: function goSongList(songListId) {\n      //传入歌单id进入歌曲列表\n      var that = this;\n      that.$router.push({\n        name: \"playListDetails\",\n        query: {\n          playListTable: true,\n          songListId: songListId\n        }\n      });\n    },\n    // 获取歌单详情\n    getSongListDetails: function getSongListDetails() {\n      //传入歌单id获取歌曲id和歌单详情\n      var that = this;\n      var params = {\n        id: that.$route.query.songListId\n      };\n      getSongList(params).then(function (res) {\n        // console.log(\"----------------:\", res.data.privileges); //歌单歌曲\n        // console.log(\"--歌单详情-------:\", res.data.playlist); //歌单歌曲\n        that.playList = res.data.playlist;\n        that.musicList = that.playList.tracks;\n        that.transMusicTime(that.playList, dt);\n      });\n    },\n    //将时长转化成分秒\n    transMusicTime: function transMusicTime(arr, dt) {\n      for (var i = 0; i < arr.length; i++) {\n        var min = parseInt(arr[i][dt] / 1000 / 60);\n        var sec = parseInt(arr[i][dt] / 1000 % 60);\n\n        if (min < 10) {\n          min = \"0\" + min;\n        }\n\n        if (sec < 10) {\n          sec = \"0\" + sec;\n        }\n\n        arr[i][dt] = min + \":\" + sec;\n      }\n    },\n    playMV: function playMV(mvId, mvName) {\n      //获取mv播放链接\n      this.$router.push({\n        name: \"mvPlay\",\n        query: {\n          mvId: mvId,\n          mvName: mvName\n        }\n      });\n    },\n    //试听音乐\n    listenMusic: function listenMusic(id, fee, index) {\n      //获取播放音乐链接\n      var that = this;\n\n      if (that.musicList[index].timer) {\n        if (fee == 1) {\n          that.$message({\n            message: \"VIP歌曲 - 只能试听30s\",\n            type: \"warning\"\n          });\n        }\n\n        playMusicUrl({\n          id: id\n        }).then(function (res) {\n          // console.log(\"播放音乐链接\", res.data.data[0].url);\n          if (res.data.data[0].url) {\n            that.songUrlAdd = res.data.data[0].url;\n          } else {\n            that.$message({\n              message: \"不好意思这首歌暂无版权\",\n              type: \"error\"\n            });\n            that.musicList[index].timer = false;\n            setTimeout(function () {\n              that.musicList[index].timer = true;\n            }, 3000);\n            return;\n          }\n        }), // 获取歌词\n        getSongLyric({\n          id: id\n        }).then(function (res) {\n          that.songlrc = res.data.lrc.lyric; // console.log(\"歌词：-------\", that.songlrc);\n        }), // 获取歌曲信息\n        getSongDetails({\n          ids: id\n        }).then(function (res) {\n          if (that.songUrlAdd != null) {\n            that.listen = [];\n            that.listen.push({\n              name: res.data.songs[0].name,\n              //歌曲名\n              artist: res.data.songs[0].ar[0].name,\n              //作者\n              url: that.songUrlAdd,\n              //播放地址\n              cover: res.data.songs[0].al.picUrl,\n              lrc: that.songlrc\n            }); // console.log(that.listen);\n\n            that.songUrlAdd = null;\n            that.songlrc = \"\";\n          }\n        });\n      }\n    },\n    //添加歌曲到播放列表\n    playMusic: function playMusic(id, fee, index) {\n      //获取播放音乐链接\n      var that = this;\n\n      if (that.musicList[index].timer) {\n        if (fee == 1) {\n          that.$message({\n            message: \"VIP歌曲 - 只能试听30s\",\n            type: \"warning\"\n          });\n        }\n\n        playMusicUrl({\n          id: id\n        }).then(function (res) {\n          // console.log(\"播放音乐链接\", res.data.data[0].url);\n          if (res.data.data[0].url) {\n            that.songUrlAdd = res.data.data[0].url;\n          } else {\n            that.$message({\n              message: \"不好意思这首歌暂无版权\",\n              type: \"error\"\n            });\n            that.musicList[index].timer = false;\n            setTimeout(function () {\n              that.musicList[index].timer = true;\n            }, 3000);\n            return;\n          }\n        }), // 获取歌词\n        getSongLyric({\n          id: id\n        }).then(function (res) {\n          that.songlrc = res.data.lrc.lyric;\n        }), // 获取歌曲信息\n        getSongDetails({\n          ids: id\n        }).then(function (res) {\n          // console.log(\"获取歌曲信息，添加到播放器：\", res.data.songs[0]);\n          if (that.songUrlAdd != null) {\n            that.$store.commit(\"addSONG\", {\n              name: res.data.songs[0].name,\n              //歌曲名\n              artist: res.data.songs[0].ar[0].name,\n              //作者\n              url: that.songUrlAdd,\n              cover: res.data.songs[0].al.picUrl,\n              lrc: that.songlrc,\n              id: id // theme: that.randomColor(),\n\n            }); // console.log(\n            //   that.$store.state.audio,\n            //   \"添加歌曲后的歌曲播放列表-----\"\n            // );\n\n            that.songUrlAdd = null;\n            that.songlrc = \"\";\n            that.musicList[index].timer = false;\n            setTimeout(function () {\n              that.musicList[index].timer = true;\n            }, 3000);\n          }\n        });\n      }\n    },\n    //通过搜索关键词获取单曲（歌曲）\n    getSingleMuscic: function getSingleMuscic() {\n      var that = this;\n\n      if (that.$route.query.reload) {// console.log(\"this.$route:---\", that.$route);\n      } //获取歌曲列表\n\n\n      var params = {\n        keywords: that.$route.query.keywords,\n        limit: 30,\n        offset: (that.currentPage - 1) * 30,\n        type: 1 //代表获取单曲\n\n      };\n      getMusicInfo(params).then(function (res) {\n        var dt = \"dt\";\n        that.musicList = res.data.result.songs;\n        that.count = res.data.result.songCount;\n        that.transMusicTime(that.musicList, dt); // console.log(\"音乐列表：\", res.data.result);\n        //给每个列表添加一个防抖\n\n        var _iterator = _createForOfIteratorHelper(that.musicList),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var item = _step.value;\n            that.$set(item, \"timer\", true);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      });\n    },\n    // 通过搜索关键词获取专辑\n    getAlbumList: function getAlbumList() {\n      var that = this; //获取歌曲列表\n\n      var params = {\n        keywords: that.$route.query.keywords,\n        limit: 30,\n        offset: (that.currentPage - 1) * 30,\n        type: 10 //代表获取专辑\n\n      };\n      getMusicInfo(params).then(function (res) {\n        that.albumList = res.data.result.albums;\n        that.count = res.data.result.albumCount; // console.log(\"专辑列表：\", res.data.result);\n      });\n    },\n    //通过搜索关键词获取歌手列表\n    getSingerList: function getSingerList() {\n      var that = this;\n      var params = {\n        keywords: that.$route.query.keywords,\n        limit: 15,\n        offset: (that.currentPage - 1) * 15,\n        type: 100 //代表获取歌手\n\n      };\n      getMusicInfo(params).then(function (res) {\n        // console.log(\"获取歌手列表----\", res.data.result);\n        that.singerList = res.data.result.artists;\n        that.count = res.data.result.artistCount;\n      });\n    },\n    //通过搜索关键词获取歌单\n    getMusicList: function getMusicList() {\n      var that = this;\n      var params = {\n        keywords: that.$route.query.keywords,\n        limit: 15,\n        offset: (that.currentPage - 1) * 15,\n        type: 1000 //代表获取歌单\n\n      };\n      getMusicInfo(params).then(function (res) {\n        // console.log(\"获取歌单列表----\", res.data.result);\n        that.playListTable = res.data.result.playlists;\n        that.count = res.data.result.playlistCount;\n\n        for (var i = 0; i < that.playListTable.length; i++) {\n          if (String(that.playListTable[i].playCount).length > 5 && String(that.playListTable[i].playCount).length < 9) {\n            that.playListTable[i].playCount = String(that.playListTable[i].playCount).substr(0, String(that.playListTable[i].playCount).length - 4) + \"万\";\n          } else if (String(that.playListTable[i].playCount).length == 5) {\n            that.playListTable[i].playCount = String(that.playListTable[i].playCount).substr(0, 1) + \".\" + String(that.playListTable[i].playCount).substr(1, 2) + \"万\";\n          } else if (String(that.playListTable[i].playCount).length == 9) {\n            that.playListTable[i].playCount = String(that.playListTable[i].playCount).substr(0, 1) + \".\" + String(that.playListTable[i].playCount).substr(1, 2) + \"亿\";\n          } else if (String(that.playListTable[i].playCount).length > 9) {\n            that.playListTable[i].playCount = String(that.playListTable[i].playCount).substr(0, String(that.playListTable[i].playCount).length - 8) + \"亿\";\n          }\n        }\n      });\n    },\n    //通过搜索关键词获取对应视频列表\n    getVideoList: function getVideoList() {\n      var that = this;\n      var params = {\n        keywords: that.$route.query.keywords,\n        limit: 12,\n        offset: (that.currentPage - 1) * 12,\n        type: 1014 //代表获取视频\n\n      };\n      getMusicInfo(params).then(function (res) {\n        var dt = \"durationms\"; // console.log(\"获取视频列表----\", res.data.result);\n\n        that.videoList = res.data.result.videos; // console.log(\"视频列表：\", that.videoList);\n\n        that.count = res.data.result.videoCount;\n        that.transMusicTime(that.videoList, dt);\n\n        for (var i = 0; i < that.videoList.length; i++) {\n          if (String(that.videoList[i].playTime).length > 5 && String(that.videoList[i].playTime).length < 9) {\n            that.videoList[i].playTime = String(that.videoList[i].playTime).substr(0, String(that.videoList[i].playTime).length - 4) + \"万\";\n          } else if (String(that.videoList[i].playTime).length == 5) {\n            that.videoList[i].playTime = String(that.videoList[i].playTime).substr(0, 1) + \".\" + String(that.videoList[i].playTime).substr(1, 2) + \"万\";\n          } else if (String(that.videoList[i].playTime).length == 9) {\n            that.videoList[i].playTime = String(that.videoList[i].playTime).substr(0, 1) + \".\" + String(that.videoList[i].playTime).substr(1, 2) + \"亿\";\n          } else if (String(that.videoList[i].playTime).length > 9) {\n            that.videoList[i].playTime = String(that.videoList[i].playTime).substr(0, String(that.videoList[i].playTime).length - 8) + \"亿\";\n          }\n        }\n      });\n    },\n    //通过搜索关键词获取对应MV列表\n    getMVList: function getMVList() {\n      var that = this;\n      var params = {\n        keywords: that.$route.query.keywords,\n        limit: 12,\n        offset: (that.currentPage - 1) * 12,\n        type: 1004 //代表获取MV\n\n      };\n      getMusicInfo(params).then(function (res) {\n        var dt = \"duration\"; //将时长字段赋值，方便传参\n        // console.log(\"获取MV列表----\", res.data.result);\n\n        that.mvList = res.data.result.mvs; // console.log(\"MV列表：\", that.mvList);\n\n        that.count = res.data.result.mvCount;\n        that.transMusicTime(that.mvList, dt);\n\n        for (var i = 0; i < that.mvList.length; i++) {\n          if (String(that.mvList[i].playCount).length > 5 && String(that.mvList[i].playCount).length < 9) {\n            that.mvList[i].playCount = String(that.mvList[i].playCount).substr(0, String(that.mvList[i].playCount).length - 4) + \"万\";\n          } else if (String(that.mvList[i].playCount).length == 5) {\n            that.mvList[i].playCount = String(that.mvList[i].playCount).substr(0, 1) + \".\" + String(that.mvList[i].playCount).substr(1, 2) + \"万\";\n          } else if (String(that.mvList[i].playCount).length == 9) {\n            that.mvList[i].playCount = String(that.mvList[i].playCount).substr(0, 1) + \".\" + String(that.mvList[i].playCount).substr(1, 2) + \"亿\";\n          } else if (String(that.mvList[i].playCount).length > 9) {\n            that.mvList[i].playCount = String(that.mvList[i].playCount).substr(0, String(that.mvList[i].playCount).length - 8) + \"亿\";\n          }\n        }\n      });\n    },\n    //获取歌曲下载地址\n    getDownloadUrl: function getDownloadUrl(songId, songName) {\n      var that = this;\n      var params = {\n        id: songId\n      };\n\n      _getDownloadUrl(params).then(function (res) {\n        // console.log(\"歌曲下载地址：\", res.data.data.url);\n        download(res.data.data.url, songName);\n        that.$message({\n          type: \"success\",\n          message: \"开始下载了\"\n        });\n      });\n    },\n    goVideo: function goVideo(vid, type) {\n      if (type === 0) {\n        this.$router.push({\n          name: \"mvPlay\",\n          query: {\n            mvId: vid\n          }\n        });\n      } else {\n        this.$router.push({\n          name: \"videoPlay\",\n          query: {\n            vid: vid\n          }\n        });\n      }\n    },\n    randomColor: function randomColor() {\n      return \"#\".concat((Math.random() * 0xffffff << 0).toString(16));\n    }\n  }\n};","map":{"version":3,"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","names":["getMusicInfo","playMusicUrl","getSongLyric","getSongDetails","getSongList","getDownloadUrl","data","listen","tagSwitch","videoList","playListTable","musicList","albumList","singerList","mvList","downLoadUrl","activeName","count","songUrlAdd","songlrc","currentPage","created","that","methods","tagSelect","tag","handleCurrentChange","search","goSongDetails","ids","name","params","songId","goAlbumDetail","id","goSingerDetail","goSongList","songListId","query","getSongListDetails","transMusicTime","arr","dt","min","sec","playMV","mvId","mvName","listenMusic","fee","index","message","type","then","setTimeout","artist","url","cover","lrc","playMusic","getSingleMuscic","keywords","limit","offset","getAlbumList","getSingerList","getMusicList","String","getVideoList","getMVList","songName","download","goVideo","vid","randomColor"],"sourceRoot":"src/views/musiclist","sources":["MusicPlayList.vue"],"sourcesContent":["<style lang=\"less\" scoped>\r\n//视频列表页面样式\r\n.videoListClass {\r\n  .videoPlay {\r\n    overflow-x: hidden;\r\n    &::-webkit-scrollbar {\r\n      display: none;\r\n    }\r\n\r\n    .videoPlaywrap {\r\n      display: flex;\r\n      margin: 0 auto;\r\n      padding: 10px;\r\n      justify-content: space-evenly;\r\n      flex-wrap: wrap; //根据宽度限制一行的盒子个数\r\n      margin: 10px 0;\r\n      width: 98%;\r\n      background: transparent;\r\n      // overflow-x: hidden;\r\n\r\n      .videoPlayList {\r\n        margin-bottom: 10px;\r\n        width: 240px;\r\n        height: 155px;\r\n        border-radius: 10px;\r\n        box-sizing: border-box;\r\n\r\n        .videoImage {\r\n          position: relative;\r\n          margin-bottom: 10px;\r\n          width: 240px;\r\n          height: 155px;\r\n          border-radius: 10px;\r\n          overflow: hidden;\r\n          transition: 0.2s;\r\n\r\n          &:hover {\r\n            transform: scale(1.05);\r\n            cursor: pointer;\r\n          }\r\n          .videoImg {\r\n            position: absolute;\r\n            width: 100%;\r\n            height: 100%;\r\n          }\r\n\r\n          .videoPlayTime {\r\n            position: absolute;\r\n            z-index: 99;\r\n            right: 10px;\r\n            background: transparent;\r\n          }\r\n        }\r\n\r\n        p {\r\n          font-size: 15px;\r\n          padding: 0 10px;\r\n          // width: 100%;\r\n          transition: 0.2s;\r\n          overflow: hidden; /*必须结合的属性,当内容溢出元素框时发生的事情*/\r\n          text-overflow: ellipsis; /*可以用来多行文本的情况下，用省略号“…”隐藏超出范围的文本 。*/\r\n          display: -webkit-box; /*必须结合的属性 ，将对象作为弹性伸缩盒子模型显示 。*/\r\n          -webkit-line-clamp: 2; /*用来限制在一个块元素显示的文本的行数。*/\r\n          -webkit-box-orient: vertical; /*必须结合的属性 ，设置或检索伸缩盒对象的子元素的排列方式 。*/\r\n          span {\r\n            &:hover {\r\n              color: rgb(145, 245, 228);\r\n              cursor: pointer;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n// 歌曲播放列表样式\r\n.playListClass {\r\n  .recPlay {\r\n    margin: auto;\r\n    max-height: 630px;\r\n    overflow-x: hidden;\r\n\r\n    &::-webkit-scrollbar {\r\n      display: none;\r\n    }\r\n\r\n    .playListWrap {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      flex-wrap: wrap; //根据宽度限制一行的盒子个数\r\n      margin: 10px 0;\r\n      width: 100%;\r\n      background: transparent;\r\n      // overflow-x: hidden;\r\n\r\n      .playListTable {\r\n        margin-bottom: 10px;\r\n        width: 205px;\r\n        height: 250px;\r\n        box-sizing: border-box;\r\n\r\n        .image {\r\n          position: relative;\r\n          margin: 10px auto;\r\n          width: 190px;\r\n          height: 190px;\r\n          border-radius: 10px;\r\n          overflow: hidden;\r\n          transition: 0.2s;\r\n\r\n          &:hover {\r\n            transform: scale(1.06);\r\n            cursor: pointer;\r\n            // height: 210px;\r\n          }\r\n          img {\r\n            position: absolute;\r\n            width: 100%;\r\n            height: 100%;\r\n          }\r\n\r\n          .playCount {\r\n            position: absolute;\r\n            z-index: 99;\r\n            right: 10px;\r\n            background: transparent;\r\n          }\r\n        }\r\n        .List-title {\r\n          margin: 0 auto;\r\n          font-size: 15px;\r\n          // padding: 0 10px;\r\n          width: 180px;\r\n          transition: 0.2s;\r\n          text-align: center;\r\n          text-overflow: ellipsis;\r\n          white-space: nowrap;\r\n          overflow: hidden; /*必须结合的属性,当内容溢出元素框时发生的事情*/\r\n          text-overflow: ellipsis; /*可以用来多行文本的情况下，用省略号“…”隐藏超出范围的文本 。*/\r\n          white-space: nowrap;\r\n          display: -webkit-box; /*必须结合的属性 ，将对象作为弹性伸缩盒子模型显示 。*/\r\n          -webkit-line-clamp: 1; /*用来限制在一个块元素显示的文本的行数。*/\r\n          -webkit-box-orient: vertical; /*必须结合的属性 ，设置或检索伸缩盒对象的子元素的排列方式 。*/\r\n          span {\r\n            display: inline-block;\r\n            width: 180px;\r\n            // text-align: center;\r\n            text-overflow: ellipsis;\r\n            overflow: hidden;\r\n            white-space: nowrap;\r\n\r\n            &:hover {\r\n              color: rgb(145, 245, 228);\r\n              cursor: pointer;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n//歌手列表样式\r\n.singerListClass {\r\n  .liWrap {\r\n    display: flex;\r\n    justify-content: space-around;\r\n    margin: 0 auto 10px;\r\n    padding: 0 10px;\r\n    width: 95%;\r\n    height: 60px;\r\n    border-radius: 12px;\r\n    background-color: rgba(129, 235, 199, 0.068);\r\n    box-sizing: border-box;\r\n    transition: 0.2s;\r\n    &:hover {\r\n      transform: scale(1.01);\r\n    }\r\n    .liWrap-block1 {\r\n      width: 60px;\r\n      height: 60px;\r\n      border-radius: 10px;\r\n      background-color: rgba(178, 244, 151, 1);\r\n      transition: 0.2s;\r\n      img {\r\n        width: 100%;\r\n        height: 100%;\r\n        border-radius: 10px;\r\n      }\r\n      &:hover {\r\n        transform: scale(1.05);\r\n        cursor: pointer;\r\n      }\r\n    }\r\n    .liWrap-block2 {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      padding: 10px;\r\n      width: 920px;\r\n      height: 60px;\r\n      font-size: 15px;\r\n      text-overflow: ellipsis;\r\n      overflow: hidden;\r\n      white-space: no;\r\n      border-radius: 10px;\r\n      line-height: 40px;\r\n      box-sizing: border-box;\r\n      // background-color: rgba(226, 214, 156, 0.075);\r\n      transition: 0.2s;\r\n\r\n      span {\r\n        &:hover {\r\n          color: rgba(136, 240, 240, 0.719);\r\n        }\r\n      }\r\n      .div1 {\r\n        display: inline-block;\r\n        // width: 200px;\r\n\r\n        span {\r\n          color: bisque;\r\n          transition: 0.2s;\r\n          &:hover {\r\n            color: rgba(252, 214, 167, 0.979);\r\n          }\r\n        }\r\n      }\r\n      .divOther {\r\n        display: inline-block;\r\n        width: 100px;\r\n        margin-right: 5px;\r\n\r\n        span {\r\n          color: bisque;\r\n          transition: 0.2s;\r\n          &:hover {\r\n            color: rgba(255, 198, 129, 0.979);\r\n          }\r\n        }\r\n      }\r\n      &:hover {\r\n        transform: scale(1.01);\r\n        cursor: pointer;\r\n      }\r\n    }\r\n  }\r\n}\r\n//专辑列表页面样式\r\n.albumListClass {\r\n  .liWrap {\r\n    display: flex;\r\n    justify-content: space-around;\r\n    margin: 0 auto 10px;\r\n    padding: 0 10px;\r\n    width: 95%;\r\n    height: 60px;\r\n    border-radius: 12px;\r\n    background-color: rgba(129, 235, 199, 0.068);\r\n    box-sizing: border-box;\r\n    transition: 0.2s;\r\n    &:hover {\r\n      // color: aqua;\r\n      transform: scale(1.01);\r\n    }\r\n    .liWrap-block1 {\r\n      width: 60px;\r\n      height: 60px;\r\n      border-radius: 10px;\r\n      background-color: rgba(178, 244, 151, 1);\r\n      transition: 0.2s;\r\n      img {\r\n        width: 100%;\r\n        height: 100%;\r\n        border-radius: 10px;\r\n      }\r\n      &:hover {\r\n        // color: aqua;\r\n        transform: scale(1.05);\r\n        cursor: pointer;\r\n      }\r\n    }\r\n    .liWrap-block2 {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      padding: 10px;\r\n      width: 920px;\r\n      height: 60px;\r\n      font-size: 15px;\r\n      border-radius: 10px;\r\n      line-height: 40px;\r\n      box-sizing: border-box;\r\n      // background-color: rgba(226, 214, 156, 0.075);\r\n      transition: 0.2s;\r\n\r\n      span {\r\n        &:hover {\r\n          color: rgba(109, 255, 255, 0.753);\r\n        }\r\n      }\r\n      .div1 {\r\n        display: inline-block;\r\n        width: 520px;\r\n        text-overflow: ellipsis;\r\n        overflow: hidden;\r\n        white-space: nowrap;\r\n        .albumName {\r\n          display: inline-block;\r\n          max-width: 500px;\r\n          text-overflow: ellipsis;\r\n          overflow: hidden;\r\n          white-space: nowrap;\r\n          color: rgb(196, 255, 250);\r\n          transition: 0.2s;\r\n          span {\r\n            &:hover {\r\n              color: rgba(97, 252, 252, 0.979);\r\n            }\r\n          }\r\n          &:hover {\r\n            color: rgba(97, 252, 252, 0.979);\r\n          }\r\n        }\r\n        &:hover {\r\n          color: rgba(97, 252, 252, 0.979);\r\n        }\r\n      }\r\n      .divOther {\r\n        display: inline-block;\r\n        width: 200px;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n        white-space: nowrap;\r\n        // text-align: left;\r\n        margin-right: 5px;\r\n\r\n        span {\r\n          color: rgb(196, 255, 250);\r\n          transition: 0.2s;\r\n          &:hover {\r\n            color: rgba(97, 252, 252, 0.979);\r\n          }\r\n        }\r\n      }\r\n      &:hover {\r\n        // color: rgba(97, 252, 252, 0.979);\r\n        transform: scale(1.01);\r\n        cursor: pointer;\r\n      }\r\n    }\r\n  }\r\n}\r\nh3 {\r\n  height: 30px;\r\n  line-height: 30px;\r\n  text-align: center;\r\n}\r\n.descript {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  color: aliceblue;\r\n  font-weight: bolder;\r\n  padding: 10px 20px;\r\n  border-radius: 20px 20px 0 0;\r\n  background: rgba(95, 158, 160, 0.322);\r\n  box-sizing: border-box;\r\n}\r\n.list-wrap {\r\n  margin: 10px auto;\r\n  padding: 0 20px 10px;\r\n  width: 1120px;\r\n  height: 730px;\r\n  border-radius: 20px;\r\n  background: rgba(95, 158, 160, 0.322);\r\n  box-sizing: border-box;\r\n\r\n  ul {\r\n    height: 630px;\r\n    border-radius: 0 0 10px 10px;\r\n    background: rgba(95, 158, 160, 0.322);\r\n    overflow-x: hidden;\r\n\r\n    &::-webkit-scrollbar {\r\n      display: none;\r\n    }\r\n    .playListDetailes {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      margin: 0 auto;\r\n      padding: 10px;\r\n      width: 98%;\r\n      height: 200px;\r\n      // border: 1px solid rgb(97, 226, 183);\r\n      border-radius: 10px;\r\n      background: rgba(34, 173, 197, 0.055);\r\n      box-sizing: border-box;\r\n\r\n      .playListImg {\r\n        display: inline-block;\r\n        // width: 180px;\r\n        // height: 180px;\r\n        border-radius: 10px;\r\n\r\n        img {\r\n          width: 180px;\r\n          height: 180px;\r\n          border-radius: 10px;\r\n          transition: 0.2s;\r\n\r\n          &:hover {\r\n            // color: aqua;\r\n            transform: scale(1.03);\r\n          }\r\n        }\r\n      }\r\n\r\n      .detailsRight {\r\n        width: 820px;\r\n        height: 180px;\r\n        // background: rgb(181, 209, 152);\r\n\r\n        .playListIntro {\r\n          margin: 10px 0 10px 0;\r\n          width: 100%;\r\n          max-height: 75px;\r\n          font-size: 14px;\r\n          overflow-x: hidden;\r\n\r\n          &::-webkit-scrollbar {\r\n            display: none;\r\n          }\r\n        }\r\n        .playListNickName {\r\n          color: antiquewhite;\r\n        }\r\n      }\r\n    }\r\n\r\n    .music-list {\r\n      position: relative;\r\n      display: flex;\r\n      margin: 5px auto 5px;\r\n      padding: 0 10px;\r\n      width: 96%;\r\n      height: 30px;\r\n      line-height: 30px;\r\n      overflow: hidden;\r\n      color: rgba(255, 255, 255, 1);\r\n      font-weight: bolder;\r\n      border-radius: 5px;\r\n      -o-text-overflow: ellipsis;\r\n      text-overflow: ellipsis;\r\n      // background: rgba(172, 233, 236, 0.055);\r\n      transition: 0.2s;\r\n\r\n      .music-list-span {\r\n        display: inline-block;\r\n        width: 270px;\r\n        // font-size:13px;\r\n        text-align: center;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n        white-space: nowrap;\r\n      }\r\n      .option {\r\n        position: absolute;\r\n        padding-left: 120px;\r\n        width: 240px;\r\n        right: 0px;\r\n        box-sizing: border-box;\r\n\r\n        span {\r\n          display: inline-block;\r\n          width: 30px;\r\n          &:hover {\r\n            cursor: pointer;\r\n          }\r\n        }\r\n      }\r\n\r\n      &:hover {\r\n        color: rgb(88, 255, 241);\r\n        transform: scale(1.01);\r\n        // background: rgba(141, 251, 255, 0.192);\r\n      }\r\n    }\r\n  }\r\n}\r\n/deep/ .el-pager {\r\n  background: none !important;\r\n}\r\n/deep/ .number,\r\n/deep/ .btn-prev,\r\n/deep/ .btn-quicknext,\r\n/deep/ .btn-next,\r\n/deep/ .el-input__inner,\r\n/deep/ .more {\r\n  color: #f2fff7 !important;\r\n  transition: 0.2s;\r\n  background: transparent !important;\r\n}\r\n/deep/ .number:hover,\r\n/deep/ .btn-prev:hover,\r\n/deep/ .btn-quicknext:hover,\r\n/deep/ .btn-next:hover,\r\n/deep/ .el-input__inner:hover,\r\n/deep/ .more:hover {\r\n  transform: scale(1.02);\r\n  color: #f7a588 !important;\r\n}\r\n/deep/ .active {\r\n  color: #f7a588 !important;\r\n}\r\n/deep/ .el-input__inner {\r\n  border: none;\r\n}\r\n/deep/ .el-pagination__jump {\r\n  color: #f7dd88 !important;\r\n}\r\n/deep/.el-pagination {\r\n  height: 100%;\r\n}\r\n.iconhover {\r\n  transition: 0.2s;\r\n  &:hover {\r\n    color: rgb(247, 243, 45);\r\n  }\r\n}\r\n</style>\r\n\r\n<template>\r\n  <div class=\"list-wrap\">\r\n    <h3>\r\n      <div class=\"tagWrap\">\r\n        <span @click=\"tagSelect('songSwitch')\"\r\n              v-if=\"!tagSwitch.songSwitch\">单曲</span><span style=\"color: rgb(80, 180, 220)\"\r\n              v-if=\"tagSwitch.songSwitch\">单曲</span>\r\n        <span @click=\"tagSelect('albumSwitch')\"\r\n              v-if=\"!tagSwitch.albumSwitch\">专辑</span><span style=\"color: rgb(80, 180, 220)\"\r\n              v-if=\"tagSwitch.albumSwitch\">专辑</span>\r\n        <span @click=\"tagSelect('singerSwitch')\"\r\n              v-if=\"!tagSwitch.singerSwitch\">歌手</span><span style=\"color: rgb(80, 180, 220)\"\r\n              v-if=\"tagSwitch.singerSwitch\">歌手</span>\r\n        <span @click=\"tagSelect('playListSwitch')\"\r\n              v-if=\"!tagSwitch.playListSwitch\">歌单</span><span style=\"color: rgb(80, 180, 220)\"\r\n              v-if=\"tagSwitch.playListSwitch\">歌单</span><span @click=\"tagSelect('videoSwitch')\"\r\n              v-if=\"!tagSwitch.videoSwitch\">视频</span><span style=\"color: rgb(80, 180, 220)\"\r\n              v-if=\"tagSwitch.videoSwitch\">视频</span><span @click=\"tagSelect('mvSwitch')\"\r\n              v-if=\"!tagSwitch.mvSwitch\">MV</span><span style=\"color: rgb(80, 180, 220)\"\r\n              v-if=\"tagSwitch.mvSwitch\">MV</span>\r\n      </div>\r\n    </h3>\r\n    <div class=\"descript\"></div>\r\n    <div>\r\n      <ul>\r\n        <!-- 单曲列表 -->\r\n        <div v-if=\"tagSwitch.songSwitch\">\r\n          <h3 v-if=\"musicList.length === 0\"><i class=\"el-icon-loading\"></i></h3>\r\n          <li class=\"music-list\"\r\n              v-for=\"(item, index) in musicList\"\r\n              :key=\"item.id\">\r\n            <span style=\"width: 20px\">{{ index + 1 }}.</span>\r\n            <div @dblclick=\"goSongDetails(item.id)\">\r\n              <span class=\"music-list-span\">{{ item.name }}</span>\r\n              <span class=\"music-list-span\">{{ item.ar[0].name }}</span>\r\n              <span class=\"music-list-span\">{{ item.dt }}</span>\r\n            </div>\r\n            <div class=\"option\">\r\n              <!-- 试听 -->\r\n              <span @click=\"listenMusic(item.id, item.fee, index)\"><i class=\"el-icon-headset iconhover\"></i></span>\r\n              <!-- 添加到播放列表 -->\r\n              <span v-if=\"item.fee == 0 || item.fee == 8\"\r\n                    @click.stop=\"playMusic(item.id, item.fee, index)\"><i class=\"el-icon-folder-add iconhover\"></i>\r\n              </span>\r\n              <!-- 播放MV -->\r\n              <span v-if=\"Boolean(item.mv)\"\r\n                    @click.stop=\"playMV(item.mv, item.name)\"><i class=\"el-icon-video-camera iconhover\"></i>\r\n              </span>\r\n              <!-- 下载 -->\r\n              <span v-if=\"item.fee == 0\"\r\n                    @click=\"getDownloadUrl(item.id, item.name)\">\r\n                <i class=\"el-icon-download iconhover\"></i></span>\r\n            </div>\r\n          </li>\r\n        </div>\r\n        <!-- 专辑列表 -->\r\n        <div class=\"albumListClass\"\r\n             v-if=\"tagSwitch.albumSwitch\">\r\n          <h3 v-if=\"albumList.length === 0\"><i class=\"el-icon-loading\"></i></h3>\r\n          <li class=\"liWrap\"\r\n              v-for=\"(item, index) in albumList\"\r\n              :key=\"index\"\r\n              @click.stop=\"goAlbumDetail(item.id)\">\r\n            <div class=\"liWrap-block1\">\r\n              <img :src=\"item.blurPicUrl\"\r\n                   alt=\"\" />\r\n            </div>\r\n            <div class=\"liWrap-block2\">\r\n              <div class=\"div1\">\r\n                <span class=\"albumName\">{{ item.name }}\r\n                  <span v-if=\"item.alias[0]\"\r\n                        class=\"albumName2\">{{\r\n                    item.alias[0]\r\n                  }}</span></span>\r\n              </div>\r\n              <div>\r\n                <div class=\"divOther\">\r\n                  作者：<span>{{ item.artist.name }}</span>\r\n                </div>\r\n                <span class=\"inline-block\"\r\n                      style=\"display: inline-block; width: 50px\"></span>\r\n                <div class=\"divOther\"\r\n                     style=\"width: 100px\">\r\n                  歌曲：<span>{{ item.size }}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        </div>\r\n        <!-- 歌手列表 -->\r\n        <div class=\"singerListClass\"\r\n             v-if=\"tagSwitch.singerSwitch\">\r\n          <h3 v-if=\"singerList.length === 0\"><i class=\"el-icon-loading\"></i></h3>\r\n          <li class=\"liWrap\"\r\n              v-for=\"(item, index) in singerList\"\r\n              :key=\"index\"\r\n              @click.stop=\"goSingerDetail(item.id)\">\r\n            <div class=\"liWrap-block1\">\r\n              <img :src=\"item.img1v1Url\"\r\n                   alt=\"\" />\r\n            </div>\r\n            <div class=\"liWrap-block2\">\r\n              <div class=\"div1\">\r\n                歌手：<span>{{ item.name }}</span>\r\n              </div>\r\n              <div>\r\n                <div class=\"divOther\">\r\n                  专辑：<span>{{ item.albumSize }}</span>\r\n                </div>\r\n\r\n                <div class=\"divOther\">\r\n                  MV：<span>{{ item.mvSize }}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        </div>\r\n        <div v-if=\"tagSwitch.albumSwitch\"></div>\r\n        <!-- 歌单列表 -->\r\n        <div class=\"playListClass\"\r\n             v-if=\"tagSwitch.playListSwitch\">\r\n          <h3 v-if=\"playListTable.length === 0\"><i class=\"el-icon-loading\"></i></h3>\r\n          <div class=\"recPlay\">\r\n            <ul class=\"playListWrap\">\r\n              <li class=\"playListTable\"\r\n                  v-for=\"(item, index) in playListTable\"\r\n                  :key=\"index\">\r\n                <div class=\"image\">\r\n                  <img :src=\"item.coverImgUrl\"\r\n                       alt=\"\"\r\n                       title=\"\"\r\n                       @click=\"goSongList(item.id)\" />\r\n                  <span class=\"playCount\"><i class=\"el-icon-video-play\"\r\n                       style=\"margin-right: 1px\"></i>{{ item.playCount }}</span>\r\n                </div>\r\n                <p class=\"List-title\"\r\n                   @click=\"goSongList(item.id)\">\r\n                  <span>{{ item.name }} </span>\r\n                </p>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <!-- 视频列表 -->\r\n        <div class=\"videoListClass\"\r\n             v-if=\"tagSwitch.videoSwitch\">\r\n          <h3 v-if=\"videoList.length === 0\"><i class=\"el-icon-loading\"></i></h3>\r\n          <div class=\"videoPlay\">\r\n            <ul class=\"videoPlaywrap\">\r\n              <li class=\"videoPlayList\"\r\n                  v-for=\"(item, index) in videoList\"\r\n                  :key=\"index\">\r\n                <div class=\"videoImage\">\r\n                  <img class=\"videoImg\"\r\n                       style=\"\r\n                      position: absolute;\r\n                      width: 240px;\r\n                      height: 155px;\r\n                      border-radius: 10px;\r\n                    \"\r\n                       :src=\"item.coverUrl\"\r\n                       alt=\"\"\r\n                       title=\"\"\r\n                       @click=\"goVideo(item.vid, item.type)\" />\r\n                  <span class=\"videoPlayTime\"><i class=\"el-icon-video-play\"\r\n                       style=\"margin-right: 1px\"></i>{{ item.playTime }}</span>\r\n                  <span class=\"videoPlayTime\"\r\n                        style=\"bottom: 0\">{{\r\n                    item.durationms\r\n                  }}</span>\r\n                </div>\r\n\r\n                <p class=\"List-title\"\r\n                   style=\"font-size: 10px\"\r\n                   @click=\"goVideo(item.vid, item.type)\">\r\n                  <span style=\"\r\n                      display: inline-block;\r\n                      width: 100%;\r\n                      overflow: hidden;\r\n                      white-space: nowrap;\r\n                      text-overflow: ellipsis;\r\n                    \"><span v-if=\"!item.type\"\r\n                          style=\"color: red\">MV&nbsp;</span>{{ item.title }}</span><br />\r\n                  <span style=\"color: rgb(199, 199, 199)\"><span v-if=\"item.markTypes\">by&nbsp;</span>\r\n                    <span>{{ item.creator[0].userName }}</span></span>\r\n                </p>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <!-- MV列表 -->\r\n        <div class=\"videoListClass\"\r\n             v-if=\"tagSwitch.mvSwitch\">\r\n          <h3 v-if=\"mvList.length === 0\"><i class=\"el-icon-loading\"></i></h3>\r\n          <div class=\"videoPlay\">\r\n            <ul class=\"videoPlaywrap\">\r\n              <li class=\"videoPlayList\"\r\n                  v-for=\"(item, index) in mvList\"\r\n                  :key=\"index\">\r\n                <div class=\"videoImage\">\r\n                  <img class=\"videoImg\"\r\n                       style=\"\r\n                      position: absolute;\r\n                      width: 240px;\r\n                      height: 155px;\r\n                      border-radius: 10px;\r\n                    \"\r\n                       :src=\"item.cover\"\r\n                       alt=\"\"\r\n                       title=\"\"\r\n                       @click=\"goVideo(item.id, item.mark)\" />\r\n                  <span class=\"videoPlayTime\"><i class=\"el-icon-video-play\"\r\n                       style=\"margin-right: 1px\"></i>{{ item.playCount }}</span>\r\n                  <span class=\"videoPlayTime\"\r\n                        style=\"bottom: 0\">{{\r\n                    item.duration\r\n                  }}</span>\r\n                </div>\r\n\r\n                <p class=\"List-title\"\r\n                   style=\"font-size: 10px\"\r\n                   @click=\"goVideo(item.id, item.mark)\">\r\n                  <span style=\"\r\n                      display: inline-block;\r\n                      width: 100%;\r\n                      overflow: hidden;\r\n                      white-space: nowrap;\r\n                      text-overflow: ellipsis;\r\n                    \"><span v-if=\"!item.type\"\r\n                          style=\"color: red\">MV&nbsp;</span>{{ item.name }}</span><br />\r\n                  <span style=\"color: rgb(199, 199, 199)\"><span>by&nbsp;</span>\r\n                    <span>{{ item.artistName }}</span></span>\r\n                </p>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </ul>\r\n    </div>\r\n\r\n    <div style=\"text-align: center; margin-top: 10px; box-sizing: border-box\">\r\n      <el-pagination v-if=\"count != 0\"\r\n                     @current-change=\"handleCurrentChange\"\r\n                     :current-page.sync=\"currentPage\"\r\n                     :page-size=\"15\"\r\n                     layout=\"prev, pager, next, jumper\"\r\n                     :total=\"count\"\r\n                     :background=\"true\">\r\n      </el-pagination>\r\n    </div>\r\n    <div v-show=\"false\">\r\n      <aplayer autoplay\r\n               :fixed=\"true\"\r\n               :audio=\"listen\"\r\n               :liric-type=\"1\"></aplayer>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  getMusicInfo,\r\n  playMusicUrl,\r\n  getSongLyric,\r\n  getSongDetails,\r\n  getSongList,\r\n  getDownloadUrl,\r\n} from \"@/api/api\";\r\nimport { download } from \"@/api/download\";\r\nexport default {\r\n  data () {\r\n    return {\r\n      //试听音乐\r\n      listen: [],\r\n      //单曲，专辑，歌手，歌单开关\r\n      tagSwitch: {},\r\n      //MV列表\r\n      videoList: [],\r\n      //歌单列表\r\n      playListTable: [],\r\n      // 歌曲列表\r\n      musicList: [],\r\n      // 专辑列表\r\n      albumList: [],\r\n      //歌手列表\r\n      singerList: [],\r\n      //MV列表\r\n      mvList: [],\r\n      //音乐下载地址\r\n      downLoadUrl: \"\",\r\n      //标签切换\r\n      activeName: \"first\",\r\n      //搜索内容总数（歌曲，歌单，mv,等）\r\n      count: \"\",\r\n      //音乐地址\r\n      songUrlAdd: null,\r\n      //歌词\r\n      songlrc: \"\",\r\n\r\n      //初始页\r\n      currentPage: 1,\r\n    };\r\n  },\r\n  created () {\r\n    // console.log(this);\r\n    var that = this;\r\n    that.tagSwitch = that.$store.state.tagSwitch;\r\n    that.search();\r\n  },\r\n  methods: {\r\n    //标签切换\r\n    tagSelect (tag) {\r\n      var that = this;\r\n      that.$store.commit(\"tagSelect\", tag);\r\n      that.$nextTick(() => {\r\n        that.search();\r\n      });\r\n    },\r\n    //分页\r\n    handleCurrentChange: function (currentPage) {\r\n      // console.log(`当前页: ${currentPage}`);\r\n      this.currentPage = currentPage;\r\n      var that = this;\r\n      if (that.$route.query.recplaylist) {\r\n        that.getSongList(currentPage);\r\n      } else if (that.tagSwitch.songSwitch) {\r\n        that.getSingleMuscic();\r\n      } else if (that.tagSwitch.playListSwitch) {\r\n        that.getMusicList();\r\n      } else if (that.tagSwitch.videoSwitch) {\r\n        that.getVideoList();\r\n      } else if (that.tagSwitch.mvSwitch) {\r\n        that.getMVList();\r\n      } else if (that.tagSwitch.singerSwitch) {\r\n        that.getSingerList();\r\n      } else if (that.tagSwitch.albumSwitch) {\r\n        that.getSingerList();\r\n      }\r\n    },\r\n    search () {\r\n      var that = this;\r\n      if (that.$route.query.recplaylist) {\r\n        that.getSongListDetails(); //歌单详情\r\n      } else if (that.tagSwitch.songSwitch) {\r\n        that.getSingleMuscic();\r\n      } else if (that.tagSwitch.playListSwitch) {\r\n        that.getMusicList();\r\n      } else if (that.tagSwitch.videoSwitch) {\r\n        that.getVideoList();\r\n      } else if (that.tagSwitch.mvSwitch) {\r\n        that.getMVList();\r\n      } else if (that.tagSwitch.singerSwitch) {\r\n        that.getSingerList();\r\n      } else if (that.tagSwitch.albumSwitch) {\r\n        that.getAlbumList();\r\n      }\r\n    },\r\n\r\n    //获取歌曲详情,进入详情页面\r\n    goSongDetails (ids) {\r\n      this.$router.push({\r\n        name: \"songDetails\",\r\n        params: {\r\n          songId: ids,\r\n        },\r\n      });\r\n    },\r\n    //获取专辑详情\r\n    goAlbumDetail (id) {\r\n      this.$router.push({\r\n        name: \"albumDetail\",\r\n        params: {\r\n          id: id,\r\n        },\r\n      });\r\n    },\r\n    //获取歌手详情\r\n    goSingerDetail (id) {\r\n      if (id) {\r\n        this.$router.push({\r\n          name: \"singerDetail\",\r\n          params: {\r\n            id: id,\r\n          },\r\n        });\r\n      }\r\n    },\r\n    //传入歌单id进入歌曲列表\r\n    goSongList (songListId) {\r\n      //传入歌单id进入歌曲列表\r\n      var that = this;\r\n      that.$router.push({\r\n        name: \"playListDetails\",\r\n        query: { playListTable: true, songListId: songListId },\r\n      });\r\n    },\r\n    // 获取歌单详情\r\n    getSongListDetails () {\r\n      //传入歌单id获取歌曲id和歌单详情\r\n      var that = this;\r\n      let params = {\r\n        id: that.$route.query.songListId,\r\n      };\r\n      getSongList(params).then((res) => {\r\n        // console.log(\"----------------:\", res.data.privileges); //歌单歌曲\r\n        // console.log(\"--歌单详情-------:\", res.data.playlist); //歌单歌曲\r\n        that.playList = res.data.playlist;\r\n        that.musicList = that.playList.tracks;\r\n        that.transMusicTime(that.playList, dt);\r\n      });\r\n    },\r\n    //将时长转化成分秒\r\n    transMusicTime (arr, dt) {\r\n      for (let i = 0; i < arr.length; i++) {\r\n        let min = parseInt(arr[i][dt] / 1000 / 60);\r\n        let sec = parseInt((arr[i][dt] / 1000) % 60);\r\n        if (min < 10) {\r\n          min = \"0\" + min;\r\n        }\r\n        if (sec < 10) {\r\n          sec = \"0\" + sec;\r\n        }\r\n        arr[i][dt] = min + \":\" + sec;\r\n      }\r\n    },\r\n    playMV (mvId, mvName) {\r\n      //获取mv播放链接\r\n      this.$router.push({\r\n        name: \"mvPlay\",\r\n        query: { mvId: mvId, mvName: mvName },\r\n      });\r\n    },\r\n\r\n    //试听音乐\r\n    listenMusic (id, fee, index) {\r\n      //获取播放音乐链接\r\n      var that = this;\r\n      if (that.musicList[index].timer) {\r\n        if (fee == 1) {\r\n          that.$message({\r\n            message: \"VIP歌曲 - 只能试听30s\",\r\n            type: \"warning\",\r\n          });\r\n        }\r\n        playMusicUrl({\r\n          id: id,\r\n        }).then((res) => {\r\n          // console.log(\"播放音乐链接\", res.data.data[0].url);\r\n          if (res.data.data[0].url) {\r\n            that.songUrlAdd = res.data.data[0].url;\r\n          } else {\r\n            that.$message({\r\n              message: \"不好意思这首歌暂无版权\",\r\n              type: \"error\",\r\n            });\r\n            that.musicList[index].timer = false;\r\n            setTimeout(() => {\r\n              that.musicList[index].timer = true;\r\n            }, 3000);\r\n            return;\r\n          }\r\n        }),\r\n          // 获取歌词\r\n          getSongLyric({\r\n            id: id,\r\n          }).then((res) => {\r\n            that.songlrc = res.data.lrc.lyric;\r\n            // console.log(\"歌词：-------\", that.songlrc);\r\n          }),\r\n          // 获取歌曲信息\r\n          getSongDetails({\r\n            ids: id,\r\n          }).then((res) => {\r\n            if (that.songUrlAdd != null) {\r\n              that.listen = [];\r\n              that.listen.push({\r\n                name: res.data.songs[0].name, //歌曲名\r\n                artist: res.data.songs[0].ar[0].name, //作者\r\n                url: that.songUrlAdd, //播放地址\r\n                cover: res.data.songs[0].al.picUrl,\r\n                lrc: that.songlrc,\r\n              });\r\n              // console.log(that.listen);\r\n              that.songUrlAdd = null;\r\n              that.songlrc = \"\";\r\n            }\r\n          });\r\n      }\r\n    },\r\n    //添加歌曲到播放列表\r\n    playMusic (id, fee, index) {\r\n      //获取播放音乐链接\r\n      var that = this;\r\n      if (that.musicList[index].timer) {\r\n        if (fee == 1) {\r\n          that.$message({\r\n            message: \"VIP歌曲 - 只能试听30s\",\r\n            type: \"warning\",\r\n          });\r\n        }\r\n        playMusicUrl({\r\n          id: id,\r\n        }).then((res) => {\r\n          // console.log(\"播放音乐链接\", res.data.data[0].url);\r\n          if (res.data.data[0].url) {\r\n            that.songUrlAdd = res.data.data[0].url;\r\n          } else {\r\n            that.$message({\r\n              message: \"不好意思这首歌暂无版权\",\r\n              type: \"error\",\r\n            });\r\n            that.musicList[index].timer = false;\r\n            setTimeout(() => {\r\n              that.musicList[index].timer = true;\r\n            }, 3000);\r\n            return;\r\n          }\r\n        }),\r\n          // 获取歌词\r\n          getSongLyric({\r\n            id: id,\r\n          }).then((res) => {\r\n            that.songlrc = res.data.lrc.lyric;\r\n          }),\r\n          // 获取歌曲信息\r\n          getSongDetails({\r\n            ids: id,\r\n          }).then((res) => {\r\n            // console.log(\"获取歌曲信息，添加到播放器：\", res.data.songs[0]);\r\n            if (that.songUrlAdd != null) {\r\n              that.$store.commit(\"addSONG\", {\r\n                name: res.data.songs[0].name, //歌曲名\r\n                artist: res.data.songs[0].ar[0].name, //作者\r\n                url: that.songUrlAdd,\r\n                cover: res.data.songs[0].al.picUrl,\r\n                lrc: that.songlrc,\r\n                id: id,\r\n                // theme: that.randomColor(),\r\n              });\r\n              // console.log(\r\n              //   that.$store.state.audio,\r\n              //   \"添加歌曲后的歌曲播放列表-----\"\r\n              // );\r\n              that.songUrlAdd = null;\r\n              that.songlrc = \"\";\r\n              that.musicList[index].timer = false;\r\n              setTimeout(() => {\r\n                that.musicList[index].timer = true;\r\n              }, 3000);\r\n            }\r\n          });\r\n      }\r\n    },\r\n\r\n    //通过搜索关键词获取单曲（歌曲）\r\n    getSingleMuscic () {\r\n      var that = this;\r\n      if (that.$route.query.reload) {\r\n        // console.log(\"this.$route:---\", that.$route);\r\n      }\r\n      //获取歌曲列表\r\n      let params = {\r\n        keywords: that.$route.query.keywords,\r\n        limit: 30,\r\n        offset: (that.currentPage - 1) * 30,\r\n        type: 1, //代表获取单曲\r\n      };\r\n      getMusicInfo(params).then((res) => {\r\n        let dt = \"dt\";\r\n        that.musicList = res.data.result.songs;\r\n        that.count = res.data.result.songCount;\r\n        that.transMusicTime(that.musicList, dt);\r\n        // console.log(\"音乐列表：\", res.data.result);\r\n        //给每个列表添加一个防抖\r\n        for (let item of that.musicList) {\r\n          that.$set(item, \"timer\", true);\r\n        }\r\n      });\r\n    },\r\n    // 通过搜索关键词获取专辑\r\n    getAlbumList () {\r\n      var that = this;\r\n      //获取歌曲列表\r\n      let params = {\r\n        keywords: that.$route.query.keywords,\r\n        limit: 30,\r\n        offset: (that.currentPage - 1) * 30,\r\n        type: 10, //代表获取专辑\r\n      };\r\n      getMusicInfo(params).then((res) => {\r\n        that.albumList = res.data.result.albums;\r\n        that.count = res.data.result.albumCount;\r\n        // console.log(\"专辑列表：\", res.data.result);\r\n      });\r\n    },\r\n    //通过搜索关键词获取歌手列表\r\n    getSingerList () {\r\n      var that = this;\r\n      let params = {\r\n        keywords: that.$route.query.keywords,\r\n        limit: 15,\r\n        offset: (that.currentPage - 1) * 15,\r\n        type: 100, //代表获取歌手\r\n      };\r\n      getMusicInfo(params).then((res) => {\r\n        // console.log(\"获取歌手列表----\", res.data.result);\r\n        that.singerList = res.data.result.artists;\r\n        that.count = res.data.result.artistCount;\r\n      });\r\n    },\r\n    //通过搜索关键词获取歌单\r\n    getMusicList () {\r\n      var that = this;\r\n      let params = {\r\n        keywords: that.$route.query.keywords,\r\n        limit: 15,\r\n        offset: (that.currentPage - 1) * 15,\r\n        type: 1000, //代表获取歌单\r\n      };\r\n      getMusicInfo(params).then((res) => {\r\n        // console.log(\"获取歌单列表----\", res.data.result);\r\n        that.playListTable = res.data.result.playlists;\r\n        that.count = res.data.result.playlistCount;\r\n        for (let i = 0; i < that.playListTable.length; i++) {\r\n          if (\r\n            String(that.playListTable[i].playCount).length > 5 &&\r\n            String(that.playListTable[i].playCount).length < 9\r\n          ) {\r\n            that.playListTable[i].playCount =\r\n              String(that.playListTable[i].playCount).substr(\r\n                0,\r\n                String(that.playListTable[i].playCount).length - 4\r\n              ) + \"万\";\r\n          } else if (String(that.playListTable[i].playCount).length == 5) {\r\n            that.playListTable[i].playCount =\r\n              String(that.playListTable[i].playCount).substr(0, 1) +\r\n              \".\" +\r\n              String(that.playListTable[i].playCount).substr(1, 2) +\r\n              \"万\";\r\n          } else if (String(that.playListTable[i].playCount).length == 9) {\r\n            that.playListTable[i].playCount =\r\n              String(that.playListTable[i].playCount).substr(0, 1) +\r\n              \".\" +\r\n              String(that.playListTable[i].playCount).substr(1, 2) +\r\n              \"亿\";\r\n          } else if (String(that.playListTable[i].playCount).length > 9) {\r\n            that.playListTable[i].playCount =\r\n              String(that.playListTable[i].playCount).substr(\r\n                0,\r\n                String(that.playListTable[i].playCount).length - 8\r\n              ) + \"亿\";\r\n          }\r\n        }\r\n      });\r\n    },\r\n    //通过搜索关键词获取对应视频列表\r\n    getVideoList () {\r\n      var that = this;\r\n      let params = {\r\n        keywords: that.$route.query.keywords,\r\n        limit: 12,\r\n        offset: (that.currentPage - 1) * 12,\r\n        type: 1014, //代表获取视频\r\n      };\r\n      getMusicInfo(params).then((res) => {\r\n        let dt = \"durationms\";\r\n        // console.log(\"获取视频列表----\", res.data.result);\r\n        that.videoList = res.data.result.videos;\r\n        // console.log(\"视频列表：\", that.videoList);\r\n        that.count = res.data.result.videoCount;\r\n        that.transMusicTime(that.videoList, dt);\r\n\r\n        for (let i = 0; i < that.videoList.length; i++) {\r\n          if (\r\n            String(that.videoList[i].playTime).length > 5 &&\r\n            String(that.videoList[i].playTime).length < 9\r\n          ) {\r\n            that.videoList[i].playTime =\r\n              String(that.videoList[i].playTime).substr(\r\n                0,\r\n                String(that.videoList[i].playTime).length - 4\r\n              ) + \"万\";\r\n          } else if (String(that.videoList[i].playTime).length == 5) {\r\n            that.videoList[i].playTime =\r\n              String(that.videoList[i].playTime).substr(0, 1) +\r\n              \".\" +\r\n              String(that.videoList[i].playTime).substr(1, 2) +\r\n              \"万\";\r\n          } else if (String(that.videoList[i].playTime).length == 9) {\r\n            that.videoList[i].playTime =\r\n              String(that.videoList[i].playTime).substr(0, 1) +\r\n              \".\" +\r\n              String(that.videoList[i].playTime).substr(1, 2) +\r\n              \"亿\";\r\n          } else if (String(that.videoList[i].playTime).length > 9) {\r\n            that.videoList[i].playTime =\r\n              String(that.videoList[i].playTime).substr(\r\n                0,\r\n                String(that.videoList[i].playTime).length - 8\r\n              ) + \"亿\";\r\n          }\r\n        }\r\n      });\r\n    },\r\n    //通过搜索关键词获取对应MV列表\r\n    getMVList () {\r\n      var that = this;\r\n      let params = {\r\n        keywords: that.$route.query.keywords,\r\n        limit: 12,\r\n        offset: (that.currentPage - 1) * 12,\r\n        type: 1004, //代表获取MV\r\n      };\r\n      getMusicInfo(params).then((res) => {\r\n        let dt = \"duration\"; //将时长字段赋值，方便传参\r\n        // console.log(\"获取MV列表----\", res.data.result);\r\n        that.mvList = res.data.result.mvs;\r\n        // console.log(\"MV列表：\", that.mvList);\r\n        that.count = res.data.result.mvCount;\r\n        that.transMusicTime(that.mvList, dt);\r\n\r\n        for (let i = 0; i < that.mvList.length; i++) {\r\n          if (\r\n            String(that.mvList[i].playCount).length > 5 &&\r\n            String(that.mvList[i].playCount).length < 9\r\n          ) {\r\n            that.mvList[i].playCount =\r\n              String(that.mvList[i].playCount).substr(\r\n                0,\r\n                String(that.mvList[i].playCount).length - 4\r\n              ) + \"万\";\r\n          } else if (String(that.mvList[i].playCount).length == 5) {\r\n            that.mvList[i].playCount =\r\n              String(that.mvList[i].playCount).substr(0, 1) +\r\n              \".\" +\r\n              String(that.mvList[i].playCount).substr(1, 2) +\r\n              \"万\";\r\n          } else if (String(that.mvList[i].playCount).length == 9) {\r\n            that.mvList[i].playCount =\r\n              String(that.mvList[i].playCount).substr(0, 1) +\r\n              \".\" +\r\n              String(that.mvList[i].playCount).substr(1, 2) +\r\n              \"亿\";\r\n          } else if (String(that.mvList[i].playCount).length > 9) {\r\n            that.mvList[i].playCount =\r\n              String(that.mvList[i].playCount).substr(\r\n                0,\r\n                String(that.mvList[i].playCount).length - 8\r\n              ) + \"亿\";\r\n          }\r\n        }\r\n      });\r\n    },\r\n\r\n    //获取歌曲下载地址\r\n    getDownloadUrl (songId, songName) {\r\n      var that = this;\r\n      let params = {\r\n        id: songId,\r\n      };\r\n      getDownloadUrl(params).then((res) => {\r\n        // console.log(\"歌曲下载地址：\", res.data.data.url);\r\n        download(res.data.data.url, songName);\r\n        that.$message({\r\n          type: \"success\",\r\n          message: \"开始下载了\",\r\n        });\r\n      });\r\n    },\r\n    goVideo (vid, type) {\r\n      if (type === 0) {\r\n        this.$router.push({\r\n          name: \"mvPlay\",\r\n          query: {\r\n            mvId: vid,\r\n          },\r\n        });\r\n      } else {\r\n        this.$router.push({\r\n          name: \"videoPlay\",\r\n          query: {\r\n            vid: vid,\r\n          },\r\n        });\r\n      }\r\n    },\r\n    randomColor () {\r\n      return `#${((Math.random() * 0xffffff) << 0).toString(16)}`;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n"]},"metadata":{},"sourceType":"module"}