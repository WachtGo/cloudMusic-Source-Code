{"ast":null,"code":"import axios from 'axios';\nimport { Message } from 'element-ui';\nimport loginUrl from './needLogin/loginUrl';\nimport { getCookie } from '@/utils/cookie'; // import { getToken } from '@/utils/auth'\n// import { MessageBox, Message } from 'element-ui'\n//可以创建多个axois实例，需要用哪个就引入使用哪个\n\nconst cloudMusic = axios.create({\n  baseURL: 'https://biejuanle.icu/',\n  // baseURL: 'http://localhost:3000/',\n  // changeOrigin: true,  //解决跨域\n  withCredentials: true\n});\nconst cloudMusic2 = axios.create({\n  baseURL: 'https://biejuanle.icu/',\n  // baseURL:'http://localhost:3000/'\n  // changeOrigin: true,  //解决跨域\n  withCredentials: true\n}); //配置全局的axios默认值\n// axios.defaults.baseURL = '你的基础域名'\n\naxios.defaults.timeout = 5000; // 在全局请求和响应拦截器中添加请求状态\n// Add a request interceptor\n\ncloudMusic.interceptors.request.use(config => {\n  // Do something before request is sent\n  // if (localStorage.getItem('token')) {\n  //     config.headers.Authorization = localStorage.getItem('token');\n  // M}\n  // let cookie = '6bf80db2682091e66db7c358940e6034f555d03d999284f42033476c98e45796993166e004087dd3e30340b48322c4fd7a82616b73ff591e0195ea446a99c0ab92386fc4f57b0915a0d2166338885bd7'\n  // Cookies.set('MUSIC_U', cookie)\n  // console.log(document.cookie)\n  // console.log('000', Cookies.get('NMTID'))\n  // console.log('000', encodeURIComponent(1481119727062))\n  // console.log('cookie', Cookies.get('MUSIC_U'))\n\n  /*\r\n  在每次请求中添加cookie\r\n    config.params = {\r\n       cookie: Cookies.get('cookie'),\r\n       ...config.params\r\n   } */\n  // config.headers.cookie = Cookies.get('cookie');\n  // console.log(config)\n  // console.log(store)\n  // console.log(loginUrl)\n  if (loginUrl.includes(config.url) && !getCookie(\"__csrf\")) {\n    //当请求的url需要登录，并且此时未登录时，进入此处\n    Message({\n      type: 'error',\n      message: '该操作需要登录'\n    });\n    return false;\n  }\n\n  return config;\n}, error => {\n  // Do something with request error\n  return Promise.reject(error);\n}); // Add a response interceptor\n\ncloudMusic.interceptors.response.use(response => {\n  // Do something with response data\n  // console.log('----', response)\n  return response;\n}, error => {\n  // Do something with response error\n  return Promise.reject(error);\n});\nexport { cloudMusic, cloudMusic2 }; //其他文件可通过import { cloudMusic, cloudMusic2 } from  ...导入使用\n// export default cloudMusic2;//default只能导出一个","map":{"version":3,"sources":["D:/data/桌面/git/cloudMusic-Source-Code/src/api/request.js"],"names":["axios","Message","loginUrl","getCookie","cloudMusic","create","baseURL","withCredentials","cloudMusic2","defaults","timeout","interceptors","request","use","config","includes","url","type","message","error","Promise","reject","response"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,SAASC,SAAT,QAA0B,gBAA1B,C,CACA;AACA;AAIA;;AACA,MAAMC,UAAU,GAAGJ,KAAK,CAACK,MAAN,CAAa;AAC5BC,EAAAA,OAAO,EAAE,wBADmB;AAE5B;AACA;AACAC,EAAAA,eAAe,EAAE;AAJW,CAAb,CAAnB;AAMA,MAAMC,WAAW,GAAGR,KAAK,CAACK,MAAN,CAAa;AAC7BC,EAAAA,OAAO,EAAE,wBADoB;AAE7B;AACA;AACAC,EAAAA,eAAe,EAAE;AAJY,CAAb,CAApB,C,CAOA;AACA;;AACAP,KAAK,CAACS,QAAN,CAAeC,OAAf,GAAyB,IAAzB,C,CAEA;AACA;;AACAN,UAAU,CAACO,YAAX,CAAwBC,OAAxB,CAAgCC,GAAhC,CAAoCC,MAAM,IAAI;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACJ;AACA;AACA;AACA;AACA;AACI;AACA;AACA;AACA;AACA,MAAIZ,QAAQ,CAACa,QAAT,CAAkBD,MAAM,CAACE,GAAzB,KAAiC,CAACb,SAAS,CAAC,QAAD,CAA/C,EAA2D;AAAC;AACxDF,IAAAA,OAAO,CAAC;AACJgB,MAAAA,IAAI,EAAE,OADF;AAEJC,MAAAA,OAAO,EAAE;AAFL,KAAD,CAAP;AAIA,WAAO,KAAP;AACH;;AAED,SAAOJ,MAAP;AAGH,CAhCD,EAgCGK,KAAK,IAAI;AACR;AACA,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CAnCD,E,CAqCA;;AACAf,UAAU,CAACO,YAAX,CAAwBW,QAAxB,CAAiCT,GAAjC,CAAqCS,QAAQ,IAAI;AAC7C;AACA;AACA,SAAOA,QAAP;AACH,CAJD,EAIGH,KAAK,IAAI;AACR;AACA,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CAPD;AAUA,SAASf,UAAT,EAAqBI,WAArB,G,CAAmC;AACnC","sourcesContent":["import axios from 'axios'\r\nimport { Message } from 'element-ui'\r\nimport loginUrl from './needLogin/loginUrl';\r\nimport { getCookie } from '@/utils/cookie';\r\n// import { getToken } from '@/utils/auth'\r\n// import { MessageBox, Message } from 'element-ui'\r\n\r\n\r\n\r\n//可以创建多个axois实例，需要用哪个就引入使用哪个\r\nconst cloudMusic = axios.create({\r\n    baseURL: 'https://biejuanle.icu/',\r\n    // baseURL: 'http://localhost:3000/',\r\n    // changeOrigin: true,  //解决跨域\r\n    withCredentials: true,\r\n});\r\nconst cloudMusic2 = axios.create({\r\n    baseURL: 'https://biejuanle.icu/',\r\n    // baseURL:'http://localhost:3000/'\r\n    // changeOrigin: true,  //解决跨域\r\n    withCredentials: true,\r\n});\r\n\r\n//配置全局的axios默认值\r\n// axios.defaults.baseURL = '你的基础域名'\r\naxios.defaults.timeout = 5000\r\n\r\n// 在全局请求和响应拦截器中添加请求状态\r\n// Add a request interceptor\r\ncloudMusic.interceptors.request.use(config => {\r\n    // Do something before request is sent\r\n    // if (localStorage.getItem('token')) {\r\n    //     config.headers.Authorization = localStorage.getItem('token');\r\n    // M}\r\n    // let cookie = '6bf80db2682091e66db7c358940e6034f555d03d999284f42033476c98e45796993166e004087dd3e30340b48322c4fd7a82616b73ff591e0195ea446a99c0ab92386fc4f57b0915a0d2166338885bd7'\r\n    // Cookies.set('MUSIC_U', cookie)\r\n    // console.log(document.cookie)\r\n    // console.log('000', Cookies.get('NMTID'))\r\n    // console.log('000', encodeURIComponent(1481119727062))\r\n    // console.log('cookie', Cookies.get('MUSIC_U'))\r\n    /*\r\n    在每次请求中添加cookie\r\n      config.params = {\r\n         cookie: Cookies.get('cookie'),\r\n         ...config.params\r\n     } */\r\n    // config.headers.cookie = Cookies.get('cookie');\r\n    // console.log(config)\r\n    // console.log(store)\r\n    // console.log(loginUrl)\r\n    if (loginUrl.includes(config.url) && !getCookie(\"__csrf\")) {//当请求的url需要登录，并且此时未登录时，进入此处\r\n        Message({\r\n            type: 'error',\r\n            message: '该操作需要登录'\r\n        })\r\n        return false\r\n    }\r\n\r\n    return config\r\n\r\n\r\n}, error => {\r\n    // Do something with request error\r\n    return Promise.reject(error);\r\n});\r\n\r\n// Add a response interceptor\r\ncloudMusic.interceptors.response.use(response => {\r\n    // Do something with response data\r\n    // console.log('----', response)\r\n    return response;\r\n}, error => {\r\n    // Do something with response error\r\n    return Promise.reject(error);\r\n});\r\n\r\n\r\nexport { cloudMusic, cloudMusic2 };//其他文件可通过import { cloudMusic, cloudMusic2 } from  ...导入使用\r\n// export default cloudMusic2;//default只能导出一个\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}