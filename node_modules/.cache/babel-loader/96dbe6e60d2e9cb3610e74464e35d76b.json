{"ast":null,"code":"import _createForOfIteratorHelper from \"D:/Desktop/git\\u5DE5\\u4F5C\\u533A/cloudMusic-Source-Code/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport \"core-js/modules/es.function.name.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getDownloadUrl as _getDownloadUrl, playMusicUrl, getSongLyric, getSongDetails, getSongList as _getSongList, getPlayListComment as _getPlayListComment, wawawa } from \"@/api/api\";\nimport { download } from \"@/api/download\";\nimport { transMusicTime } from '@/api/commonApi.js';\nexport default {\n  // props: ['songListId'],\n  data: function data() {\n    return {\n      //试听音乐\n      listen: [],\n      //歌单id\n      songListId: '',\n      //评论分页\n      currentPage: 1,\n      // 歌曲数组\n      musicList: [],\n      //下载音乐的地址\n      DownloadSongUrl: \"\",\n      //mv地址\n      mvUrl: \"\",\n      //搜索歌曲总数\n      count: \"\",\n      playListComment: [],\n      commentCount: \"\",\n      //音乐地址\n      songUrlAdd: null,\n      //歌词\n      songlrc: \"\",\n      //MV\n      songMV: [],\n      //歌单详情\n      playListDetail: {}\n    };\n  },\n  mounted: function mounted() {\n    //缓存id,解决params数据在刷新页面后丢失，导致无法获取到歌单id\n    if (this.$route.params.songListId) {\n      localStorage.setItem('songListId', this.$route.params.songListId);\n    } // 判断是否使用缓存\n\n\n    this.$route.params.songListId ? this.songListId = this.$route.params.songListId : this.songListId = localStorage.getItem('songListId');\n    this.getSongList();\n    this.getPlayListComment();\n  },\n  methods: {\n    //切换歌单评论\n    playListHandleCurrentChange: function playListHandleCurrentChange(currentPage) {\n      var that = this;\n      that.currentPage = currentPage;\n      that.getPlayListComment();\n    },\n    //获取歌单评论\n    getPlayListComment: function getPlayListComment() {\n      var _this = this;\n\n      var that = this;\n      var params = {\n        id: that.songListId,\n        limit: 7,\n        offset: (that.currentPage - 1) * 7\n      };\n\n      _getPlayListComment(params).then(function (res) {\n        // console.log(\"歌单评论：\", res.data);\n        _this.playListComment = res.data.comments;\n        that.commentCount = res.data.total; // console.log(\"歌曲评论：\", res.data);\n      });\n    },\n    //获取歌曲详情,进入详情页面\n    goSongDetails: function goSongDetails(ids) {\n      this.$router.push({\n        name: \"songDetails\",\n        params: {\n          songId: ids\n        }\n      });\n    },\n    // 播放MV\n    playMV: function playMV(mvId) {\n      //获取mv播放链接\n      this.$router.push({\n        name: \"mvPlay\",\n        params: {\n          mvId: mvId\n        }\n      });\n    },\n    listenMusic: function listenMusic(id, fee, index) {\n      //获取播放音乐链接\n      var that = this;\n\n      if (that.musicList[index].timer) {\n        if (fee == 1) {\n          that.$message({\n            message: \"VIP歌曲 - 只能试听30s\",\n            type: \"warning\"\n          });\n        }\n\n        playMusicUrl({\n          id: id\n        }).then(function (res) {\n          // console.log(\"播放音乐链接\", res.data.data[0].url);\n          if (res.data.data[0].url) {\n            that.songUrlAdd = res.data.data[0].url;\n          } else {\n            that.$message({\n              message: \"不好意思这首歌暂无版权\",\n              type: \"error\"\n            });\n            that.musicList[index].timer = false;\n            setTimeout(function () {\n              that.musicList[index].timer = true;\n            }, 3000);\n            return;\n          }\n        }), // 获取歌词\n        getSongLyric({\n          id: id\n        }).then(function (res) {\n          that.songlrc = res.data.lrc.lyric;\n        }), // 获取歌曲信息\n        getSongDetails({\n          ids: id\n        }).then(function (res) {\n          if (that.songUrlAdd != null) {\n            that.listen = [];\n            that.listen.push({\n              name: res.data.songs[0].name,\n              //歌曲名\n              artist: res.data.songs[0].ar[0].name,\n              //作者\n              url: that.songUrlAdd,\n              cover: res.data.songs[0].al.picUrl,\n              lrc: that.songlrc\n            }); // console.log(that.listen);\n\n            that.songUrlAdd = null;\n            that.songlrc = \"\";\n          }\n        });\n      }\n    },\n    //播放音乐\n    playMusic: function playMusic(id, fee, index) {\n      //获取播放音乐链接\n      var that = this; // console.log(that.musicList[index]);\n\n      if (that.musicList[index].timer) {\n        if (fee == 1) {\n          that.$message({\n            message: \"VIP歌曲 - 只能试听30s\",\n            type: \"warning\"\n          });\n        }\n\n        playMusicUrl({\n          id: id\n        }).then(function (res) {\n          // console.log(\"播放音乐链接\", res.data.data[0].url);\n          if (res.data.data[0].url) {\n            that.songUrlAdd = res.data.data[0].url;\n          } else {\n            that.$message({\n              message: \"不好意思这首歌暂无版权\",\n              type: \"error\"\n            });\n            that.musicList[index].timer = false;\n            setTimeout(function () {\n              that.musicList[index].timer = true;\n            }, 3000);\n            return;\n          }\n        }), // 获取歌词\n        getSongLyric({\n          id: id\n        }).then(function (res) {\n          that.songlrc = res.data.lrc.lyric;\n        }), // 获取歌曲信息\n        getSongDetails({\n          ids: id\n        }).then(function (res) {\n          // console.log(\"获取歌曲信息，添加到播放器：\", res.data.songs);\n          if (that.songUrlAdd != null) {\n            that.$store.commit(\"addSONG\", {\n              name: res.data.songs[0].name,\n              //歌曲名\n              artist: res.data.songs[0].ar[0].name,\n              //作者\n              url: that.songUrlAdd,\n              cover: res.data.songs[0].al.picUrl,\n              lrc: that.songlrc // theme: that.randomColor(),\n\n            }); // console.log(\n            //   that.$store.state.audio,\n            //   \"添加歌曲后的歌曲播放列表-----\"\n            // );\n\n            that.songUrlAdd = null;\n            that.songlrc = \"\";\n            that.musicList[index].timer = false;\n            setTimeout(function () {\n              that.musicList[index].timer = true;\n            }, 3000);\n          }\n        });\n      }\n    },\n    //分页\n    handleCurrentChange: function handleCurrentChange(currentPage) {\n      // console.log(`当前页: ${currentPage}`);\n      this.currentPage = currentPage;\n      var that = this;\n      that.getSongList(currentPage);\n    },\n    //获取歌曲下载地址\n    getDownloadUrl: function getDownloadUrl(songId, songName) {\n      var that = this;\n      var params = {\n        id: songId\n      };\n\n      _getDownloadUrl(params).then(function (res) {\n        // console.log(\"歌曲下载地址：\", res.data.data.url);\n        download(res.data.data.url, songName);\n        that.$message({\n          type: \"success\",\n          message: \"开始下载了\"\n        });\n      });\n    },\n    getSongList: function getSongList() {\n      //传入歌单id获取歌曲id和歌单详情\n      var that = this;\n      var params = {\n        id: that.songListId\n      };\n\n      _getSongList(params).then(function (res) {\n        // console.log(\"----------------:\", res.data.privileges); //歌单歌曲\n        // console.log(\"--歌单详情-------:\", res.data.playlist); //歌单歌曲\n        that.playListDetail = res.data.playlist;\n        that.musicList = that.playListDetail.tracks; //给每个列表添加一个防抖\n\n        var _iterator = _createForOfIteratorHelper(that.musicList),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var item = _step.value;\n            that.$set(item, \"timer\", true);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n\n        transMusicTime(that.musicList, 'dt');\n      });\n    },\n    wawawa: function wawawa() {\n      var params = {\n        t: '1',\n        id: this.songListId,\n        cookie: \"NMTID=00OzCh7YMHCWQm1ZU9Vogn9qK4feTAAAAGCc3SE0Q; Max-Age=315360000; Expires=Tue, 03 Aug 2032 13:59:52 GMT; Path=/;;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/eapi/feedback; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/openapi/clientlog; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/wapi/feedback; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/wapi/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/neapi/clientlog; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/neapi/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/neapi/feedback; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/eapi/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/eapi/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/api/feedback; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/openapi/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/eapi/feedback; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/wapi/clientlog; HTTPOnly;MUSIC_U=9611c371e6419e2c184a366a7ca936bf0fc69a8d2f6be4455ded1d5066ff6a4b993166e004087dd367fe124475fa63054c4bb8a8a030b49b26de8349c63f526ad40a31ebc291eb4ad4dbf082a8813684; Max-Age=15552000; Expires=Thu, 02 Feb 2023 13:59:52 GMT; Path=/; HTTPOnly;__csrf=e0281d26dcbef96212ed4b7db9e68461; Max-Age=1296010; Expires=Sun, 21 Aug 2022 14:00:02 GMT; Path=/;;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/neapi/feedback; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/weapi/feedback; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/api/feedback; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/weapi/feedback; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/weapi/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/api/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/wapi/feedback; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/api/clientlog; HTTPOnly;MUSIC_SNS=; Max-Age=0; Expires=Sat, 06 Aug 2022 13:59:52 GMT; Path=/;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/weapi/clientlog; HTTPOnly\"\n      };\n      var cookie = {\n        cookie: 'NMTID=00OzCh7YMHCWQm1ZU9Vogn9qK4feTAAAAGCc3SE0Q; Max-Age=315360000; Expires=Tue, 03 Aug 2032 13:59:52 GMT; Path=/;;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/eapi/feedback; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/openapi/clientlog; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/wapi/feedback; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/wapi/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/neapi/clientlog; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/neapi/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/neapi/feedback; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/eapi/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/eapi/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/api/feedback; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/openapi/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/eapi/feedback; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/wapi/clientlog; HTTPOnly;MUSIC_U=9611c371e6419e2c184a366a7ca936bf0fc69a8d2f6be4455ded1d5066ff6a4b993166e004087dd367fe124475fa63054c4bb8a8a030b49b26de8349c63f526ad40a31ebc291eb4ad4dbf082a8813684; Max-Age=15552000; Expires=Thu, 02 Feb 2023 13:59:52 GMT; Path=/; HTTPOnly;__csrf=e0281d26dcbef96212ed4b7db9e68461; Max-Age=1296010; Expires=Sun, 21 Aug 2022 14:00:02 GMT; Path=/;;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/neapi/feedback; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/weapi/feedback; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/api/feedback; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/weapi/feedback; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/weapi/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/api/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/wapi/feedback; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/api/clientlog; HTTPOnly;MUSIC_SNS=; Max-Age=0; Expires=Sat, 06 Aug 2022 13:59:52 GMT; Path=/;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/weapi/clientlog; HTTPOnly'\n      };\n      this.$cookies.set('coo', cookie);\n      console.log(this.$cookies.get('coo').cookie); // wawawa(params).then((res) => {\n      //   console.log(res, '收藏返回')\n      // })\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["getDownloadUrl","playMusicUrl","getSongLyric","getSongDetails","getSongList","getPlayListComment","wawawa","data","listen","songListId","currentPage","musicList","DownloadSongUrl","mvUrl","count","playListComment","commentCount","songUrlAdd","songlrc","songMV","playListDetail","mounted","localStorage","methods","playListHandleCurrentChange","that","id","limit","offset","goSongDetails","ids","name","params","songId","playMV","mvId","listenMusic","fee","index","message","type","then","setTimeout","artist","url","cover","lrc","playMusic","handleCurrentChange","songName","download","transMusicTime","t","cookie","console"],"sourceRoot":"src/views/playListDetails","sources":["playListDetails.vue"],"sourcesContent":["<style lang=\"less\" scoped>\r\nh3 {\r\n  height: 30px;\r\n  line-height: 30px;\r\n  text-align: center;\r\n}\r\n.descript {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  color: aliceblue;\r\n  font-weight: bolder;\r\n  padding: 10px 20px;\r\n  border-radius: 20px 20px 0 0;\r\n  background: rgba(95, 158, 160, 0.11);\r\n  box-sizing: border-box;\r\n}\r\n.list-wrap {\r\n  margin: 10px auto;\r\n  padding: 0 20px 10px;\r\n  width: 1120px;\r\n  border-radius: 20px;\r\n  background: rgba(95, 158, 160, 0.11);\r\n  box-sizing: border-box;\r\n\r\n  ul {\r\n    height: 680px;\r\n    border-radius: 0 0 10px 10px;\r\n    background: rgba(95, 158, 160, 0.11);\r\n    overflow-x: hidden;\r\n\r\n    &::-webkit-scrollbar {\r\n      display: none;\r\n    }\r\n    .playListDetailes {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      margin: 0 auto;\r\n      padding: 10px;\r\n      width: 98%;\r\n      height: 200px;\r\n      // border: 1px solid rgb(97, 226, 183);\r\n      border-radius: 10px;\r\n      background: rgba(34, 173, 197, 0.055);\r\n      box-sizing: border-box;\r\n\r\n      .playListImg {\r\n        display: inline-block;\r\n        // width: 180px;\r\n        // height: 180px;\r\n        border-radius: 10px;\r\n\r\n        img {\r\n          width: 180px;\r\n          height: 180px;\r\n          border-radius: 10px;\r\n          transition: 0.2s;\r\n\r\n          &:hover {\r\n            transform: scale(1.03);\r\n          }\r\n        }\r\n      }\r\n\r\n      .detailsRight {\r\n        width: 820px;\r\n        height: 180px;\r\n        // background: rgb(181, 209, 152);\r\n\r\n        .playListIntro {\r\n          margin: 10px 0 10px 0;\r\n          width: 100%;\r\n          max-height: 75px;\r\n          font-size: 14px;\r\n          overflow-x: hidden;\r\n\r\n          &::-webkit-scrollbar {\r\n            display: none;\r\n          }\r\n        }\r\n        .playListNickName {\r\n          color: antiquewhite;\r\n        }\r\n      }\r\n    }\r\n\r\n    .music-list {\r\n      position: relative;\r\n      display: flex;\r\n      margin: 5px auto;\r\n      padding: 0 10px;\r\n      width: 96%;\r\n      height: 30px;\r\n      line-height: 30px;\r\n      overflow: hidden;\r\n      color: rgba(255, 255, 255, 1);\r\n      font-weight: bolder;\r\n      -o-text-overflow: ellipsis;\r\n      text-overflow: ellipsis;\r\n      border-radius: 5px;\r\n      background: rgba(59, 165, 168, 0.048);\r\n      transition: 0.2s;\r\n\r\n      .music-list-span {\r\n        display: inline-block;\r\n        width: 270px;\r\n        text-align: center;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n        white-space: nowrap;\r\n      }\r\n      .option {\r\n        position: absolute;\r\n        padding-left: 150px;\r\n        width: 240px;\r\n        right: 10px;\r\n        box-sizing: border-box;\r\n\r\n        span {\r\n          display: inline-block;\r\n          width: 30px;\r\n          &:hover {\r\n            cursor: pointer;\r\n          }\r\n        }\r\n      }\r\n\r\n      &:hover {\r\n        color: aquamarine;\r\n        transform: scale(1.01);\r\n        // background: rgba(146, 240, 243, 0.247);\r\n      }\r\n    }\r\n  }\r\n}\r\n/deep/ .el-pager {\r\n  background: none !important;\r\n}\r\n/deep/ .number,\r\n/deep/ .btn-prev,\r\n/deep/ .btn-quicknext,\r\n/deep/ .btn-next,\r\n/deep/ .el-input__inner,\r\n/deep/ .more {\r\n  color: #f2fff7 !important;\r\n  background: transparent !important;\r\n}\r\n/deep/ .number:hover,\r\n/deep/ .btn-prev:hover,\r\n/deep/ .btn-quicknext:hover,\r\n/deep/ .btn-next:hover,\r\n/deep/ .el-input__inner:hover,\r\n/deep/ .more:hover {\r\n  color: #f7a588 !important;\r\n}\r\n/deep/ .active {\r\n  color: #f7a588 !important;\r\n}\r\n/deep/ .el-input__inner {\r\n  border: none;\r\n}\r\n/deep/ .el-pagination__jump {\r\n  color: #f7dd88 !important;\r\n}\r\n//   btn-quickprev el-icon-more\r\n.iconhover {\r\n  transition: 0.2s;\r\n  &:hover {\r\n    color: rgb(247, 243, 45);\r\n  }\r\n}\r\n</style>\r\n\r\n<template>\r\n  <div class=\"list-wrap\">\r\n    <h3>歌单详情</h3>\r\n    <h4 @click=\"wawawa\">收藏</h4>\r\n    <div class=\"descript\"></div>\r\n    <div>\r\n      <ul>\r\n        <div class=\"playListDetailes\">\r\n          <div class=\"playListImg\">\r\n            <img :src=\"playListDetail.coverImgUrl\"\r\n                 alt=\"\" />\r\n          </div>\r\n          <div class=\"detailsRight\">\r\n            <h3 style=\"margin-left: 0px; text-align: left; font-size: 20px\">\r\n              {{ playListDetail.name }}\r\n            </h3>\r\n            <div style=\"margin: 10px 0 10px 0; height: 30px; font-size: 14px\">\r\n              <img :src=\"playListDetail.creator.avatarUrl\"\r\n                   alt=\"\"\r\n                   style=\"width: 30px; height: 30px; border-radius: 15px\" />\r\n              <span class=\"playListNickName\">&nbsp;&nbsp;&nbsp;&nbsp;{{\r\n                  playListDetail.creator.nickname\r\n                }}&nbsp;&nbsp;</span><span v-if=\"playListDetail.creator.signature\">&nbsp;&nbsp;-&nbsp;&nbsp;{{\r\n                  playListDetail.creator.signature\r\n                }}</span>\r\n            </div>\r\n            <div style=\"margin: 10px 0 10px 0; height: 18px; font-size: 14px\">\r\n              <span>标签:&nbsp;&nbsp;</span><span v-for=\"(tag, index) in playListDetail.tags\"\r\n                    :key=\"index\">{{ tag }}&nbsp;</span>\r\n            </div>\r\n            <div class=\"playListIntro\"\r\n                 style=\"\">\r\n              <span style=\"display: inline-block; margin-left: 0px\">\r\n                {{ playListDetail.description }}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <li class=\"music-list\"\r\n            v-for=\"(item, index) in musicList\"\r\n            :key=\"item.id\">\r\n          <span style=\"display: inline-block; width: 20px\">{{ index + 1 }}.</span>\r\n          <div @dblclick=\"goSongDetails(item.id)\">\r\n            <span class=\"music-list-span\">{{ item.name }}</span>\r\n            <span class=\"music-list-span\">{{ item.ar[0].name }}</span>\r\n            <span class=\"music-list-span\">{{ item.dt }}</span>\r\n          </div>\r\n          <div class=\"option\">\r\n            <span @click=\"listenMusic(item.id, item.fee, index)\"><i class=\"el-icon-headset iconhover\"></i></span>\r\n            <!-- 添加到播放列表 -->\r\n            <span v-if=\"item.fee == 0 || item.fee == 8\"\r\n                  @click.stop=\"playMusic(item.id, item.fee, index)\"><i class=\"el-icon-folder-add iconhover\"></i>\r\n            </span>\r\n            <span v-if=\"Boolean(item.mv)\"\r\n                  @click=\"playMV(item.mv)\"><i class=\"el-icon-video-camera iconhover\"></i>\r\n            </span>\r\n            <!-- <span v-if=\"!Boolean(item.mv)\">&nbsp;&nbsp;&nbsp; </span> -->\r\n            <span v-if=\"item.fee == 0\"\r\n                  @click.stop=\"getDownloadUrl(item.id, item.name)\"><i class=\"el-icon-download iconhover\"></i></span><span v-if=\"item.fee != 0\"> </span>\r\n          </div>\r\n        </li>\r\n        <div style=\"padding: 0px 50px\">\r\n          <h3 style=\"margin: 5px 0 10px 0\">评论({{ commentCount }}条)</h3>\r\n          <div class=\"hoverBackColor\"\r\n               v-for=\"item in playListComment\"\r\n               :key=\"item.id\">\r\n            <img :src=\"item.user.avatarUrl\"\r\n                 style=\"width: 50px; border-radius: 25px\" />\r\n            <span style=\"display: inline-block; margin-left: 10px; font-size: 15px\">{{ item.user.nickname }}&nbsp;&nbsp;:&nbsp;&nbsp;</span>\r\n            <span style=\"margin-left: 20px; width: 750px\">\r\n              {{ item.content }}\r\n            </span>\r\n            <div style=\"height: 30px\">\r\n              <span style=\"float: right; width: 130px\">&nbsp;&nbsp;时间：{{ item.timeStr }}</span><span style=\"float: right\">{{ item.likedCount }} 赞&nbsp;&nbsp;&nbsp;</span>\r\n            </div>\r\n          </div>\r\n\r\n          <div style=\"text-align: center\">\r\n            <el-pagination v-if=\"commentCount != 0\"\r\n                           @current-change=\"playListHandleCurrentChange\"\r\n                           :current-page.sync=\"currentPage\"\r\n                           :page-size=\"7\"\r\n                           layout=\"prev, pager, next, jumper\"\r\n                           :total=\"commentCount\"\r\n                           :background=\"true\">\r\n            </el-pagination>\r\n          </div>\r\n        </div>\r\n      </ul>\r\n    </div>\r\n    <div v-show=\"false\">\r\n      <aplayer :autoplay=\"true\"\r\n               :fixed=\"true\"\r\n               :audio=\"listen\"\r\n               :liric-type=\"1\"></aplayer>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  getDownloadUrl,\r\n  playMusicUrl,\r\n  getSongLyric,\r\n  getSongDetails,\r\n  getSongList,\r\n  getPlayListComment,\r\n  wawawa\r\n} from \"@/api/api\";\r\nimport { download } from \"@/api/download\";\r\nimport { transMusicTime } from '@/api/commonApi.js'\r\nexport default {\r\n  // props: ['songListId'],\r\n  data () {\r\n    return {\r\n      //试听音乐\r\n      listen: [],\r\n      //歌单id\r\n      songListId: '',\r\n      //评论分页\r\n      currentPage: 1,\r\n      // 歌曲数组\r\n      musicList: [],\r\n      //下载音乐的地址\r\n      DownloadSongUrl: \"\",\r\n      //mv地址\r\n      mvUrl: \"\",\r\n      //搜索歌曲总数\r\n      count: \"\",\r\n      playListComment: [],\r\n      commentCount: \"\",\r\n      //音乐地址\r\n      songUrlAdd: null,\r\n      //歌词\r\n      songlrc: \"\",\r\n      //MV\r\n      songMV: [],\r\n      //歌单详情\r\n      playListDetail: {},\r\n    };\r\n  },\r\n  mounted () {\r\n    //缓存id,解决params数据在刷新页面后丢失，导致无法获取到歌单id\r\n    if (this.$route.params.songListId) { localStorage.setItem('songListId', this.$route.params.songListId) }\r\n    // 判断是否使用缓存\r\n    this.$route.params.songListId ? this.songListId = this.$route.params.songListId : this.songListId = localStorage.getItem('songListId')\r\n    this.getSongList();\r\n    this.getPlayListComment();\r\n  },\r\n  methods: {\r\n    //切换歌单评论\r\n    playListHandleCurrentChange (currentPage) {\r\n      var that = this;\r\n      that.currentPage = currentPage;\r\n      that.getPlayListComment();\r\n    },\r\n    //获取歌单评论\r\n    getPlayListComment () {\r\n      var that = this;\r\n      let params = {\r\n        id: that.songListId,\r\n        limit: 7,\r\n        offset: (that.currentPage - 1) * 7,\r\n      };\r\n      getPlayListComment(params).then((res) => {\r\n        // console.log(\"歌单评论：\", res.data);\r\n        this.playListComment = res.data.comments;\r\n        that.commentCount = res.data.total;\r\n        // console.log(\"歌曲评论：\", res.data);\r\n      });\r\n    },\r\n\r\n    //获取歌曲详情,进入详情页面\r\n    goSongDetails (ids) {\r\n      this.$router.push({\r\n        name: \"songDetails\",\r\n        params: {\r\n          songId: ids,\r\n        },\r\n      });\r\n    },\r\n    // 播放MV\r\n    playMV (mvId) {\r\n      //获取mv播放链接\r\n      this.$router.push({\r\n        name: \"mvPlay\",\r\n        params: { mvId: mvId },\r\n      });\r\n    },\r\n    listenMusic (id, fee, index) {\r\n      //获取播放音乐链接\r\n      var that = this;\r\n      if (that.musicList[index].timer) {\r\n        if (fee == 1) {\r\n          that.$message({\r\n            message: \"VIP歌曲 - 只能试听30s\",\r\n            type: \"warning\",\r\n          });\r\n        }\r\n        playMusicUrl({\r\n          id: id,\r\n        }).then((res) => {\r\n          // console.log(\"播放音乐链接\", res.data.data[0].url);\r\n          if (res.data.data[0].url) {\r\n            that.songUrlAdd = res.data.data[0].url;\r\n          } else {\r\n            that.$message({\r\n              message: \"不好意思这首歌暂无版权\",\r\n              type: \"error\",\r\n            });\r\n            that.musicList[index].timer = false;\r\n            setTimeout(() => {\r\n              that.musicList[index].timer = true;\r\n            }, 3000);\r\n            return;\r\n          }\r\n        }),\r\n          // 获取歌词\r\n          getSongLyric({\r\n            id: id,\r\n          }).then((res) => {\r\n            that.songlrc = res.data.lrc.lyric;\r\n          }),\r\n          // 获取歌曲信息\r\n          getSongDetails({\r\n            ids: id,\r\n          }).then((res) => {\r\n            if (that.songUrlAdd != null) {\r\n              that.listen = [];\r\n              that.listen.push({\r\n                name: res.data.songs[0].name, //歌曲名\r\n                artist: res.data.songs[0].ar[0].name, //作者\r\n                url: that.songUrlAdd,\r\n                cover: res.data.songs[0].al.picUrl,\r\n                lrc: that.songlrc,\r\n              });\r\n              // console.log(that.listen);\r\n              that.songUrlAdd = null;\r\n              that.songlrc = \"\";\r\n            }\r\n          });\r\n      }\r\n    },\r\n    //播放音乐\r\n    playMusic (id, fee, index) {\r\n      //获取播放音乐链接\r\n      var that = this;\r\n      // console.log(that.musicList[index]);\r\n      if (that.musicList[index].timer) {\r\n        if (fee == 1) {\r\n          that.$message({\r\n            message: \"VIP歌曲 - 只能试听30s\",\r\n            type: \"warning\",\r\n          });\r\n        }\r\n        playMusicUrl({\r\n          id: id,\r\n        }).then((res) => {\r\n          // console.log(\"播放音乐链接\", res.data.data[0].url);\r\n          if (res.data.data[0].url) {\r\n            that.songUrlAdd = res.data.data[0].url;\r\n          } else {\r\n            that.$message({\r\n              message: \"不好意思这首歌暂无版权\",\r\n              type: \"error\",\r\n            });\r\n            that.musicList[index].timer = false;\r\n            setTimeout(() => {\r\n              that.musicList[index].timer = true;\r\n            }, 3000);\r\n            return;\r\n          }\r\n        }),\r\n          // 获取歌词\r\n          getSongLyric({\r\n            id: id,\r\n          }).then((res) => {\r\n            that.songlrc = res.data.lrc.lyric;\r\n          }),\r\n          // 获取歌曲信息\r\n          getSongDetails({\r\n            ids: id,\r\n          }).then((res) => {\r\n            // console.log(\"获取歌曲信息，添加到播放器：\", res.data.songs);\r\n            if (that.songUrlAdd != null) {\r\n              that.$store.commit(\"addSONG\", {\r\n                name: res.data.songs[0].name, //歌曲名\r\n                artist: res.data.songs[0].ar[0].name, //作者\r\n                url: that.songUrlAdd,\r\n                cover: res.data.songs[0].al.picUrl,\r\n                lrc: that.songlrc,\r\n                // theme: that.randomColor(),\r\n              });\r\n              // console.log(\r\n              //   that.$store.state.audio,\r\n              //   \"添加歌曲后的歌曲播放列表-----\"\r\n              // );\r\n              that.songUrlAdd = null;\r\n              that.songlrc = \"\";\r\n              that.musicList[index].timer = false;\r\n              setTimeout(() => {\r\n                that.musicList[index].timer = true;\r\n              }, 3000);\r\n            }\r\n          });\r\n      }\r\n    },\r\n\r\n    //分页\r\n    handleCurrentChange: function (currentPage) {\r\n      // console.log(`当前页: ${currentPage}`);\r\n      this.currentPage = currentPage;\r\n      var that = this;\r\n      that.getSongList(currentPage);\r\n    },\r\n\r\n    //获取歌曲下载地址\r\n    getDownloadUrl (songId, songName) {\r\n      var that = this;\r\n      let params = {\r\n        id: songId,\r\n      };\r\n      getDownloadUrl(params).then((res) => {\r\n        // console.log(\"歌曲下载地址：\", res.data.data.url);\r\n        download(res.data.data.url, songName);\r\n        that.$message({\r\n          type: \"success\",\r\n          message: \"开始下载了\",\r\n        });\r\n      });\r\n    },\r\n    getSongList () {\r\n      //传入歌单id获取歌曲id和歌单详情\r\n      var that = this;\r\n      let params = {\r\n        id: that.songListId,\r\n      };\r\n      getSongList(params).then((res) => {\r\n        // console.log(\"----------------:\", res.data.privileges); //歌单歌曲\r\n        // console.log(\"--歌单详情-------:\", res.data.playlist); //歌单歌曲\r\n        that.playListDetail = res.data.playlist;\r\n        that.musicList = that.playListDetail.tracks;\r\n\r\n        //给每个列表添加一个防抖\r\n        for (let item of that.musicList) {\r\n          that.$set(item, \"timer\", true);\r\n        }\r\n        transMusicTime(that.musicList, 'dt');\r\n      });\r\n    },\r\n    wawawa () {\r\n\r\n      let params = {\r\n        t: '1',\r\n        id: this.songListId,\r\n        cookie: \"NMTID=00OzCh7YMHCWQm1ZU9Vogn9qK4feTAAAAGCc3SE0Q; Max-Age=315360000; Expires=Tue, 03 Aug 2032 13:59:52 GMT; Path=/;;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/eapi/feedback; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/openapi/clientlog; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/wapi/feedback; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/wapi/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/neapi/clientlog; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/neapi/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/neapi/feedback; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/eapi/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/eapi/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/api/feedback; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/openapi/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/eapi/feedback; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/wapi/clientlog; HTTPOnly;MUSIC_U=9611c371e6419e2c184a366a7ca936bf0fc69a8d2f6be4455ded1d5066ff6a4b993166e004087dd367fe124475fa63054c4bb8a8a030b49b26de8349c63f526ad40a31ebc291eb4ad4dbf082a8813684; Max-Age=15552000; Expires=Thu, 02 Feb 2023 13:59:52 GMT; Path=/; HTTPOnly;__csrf=e0281d26dcbef96212ed4b7db9e68461; Max-Age=1296010; Expires=Sun, 21 Aug 2022 14:00:02 GMT; Path=/;;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/neapi/feedback; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/weapi/feedback; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/api/feedback; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/weapi/feedback; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/weapi/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/api/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/wapi/feedback; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/api/clientlog; HTTPOnly;MUSIC_SNS=; Max-Age=0; Expires=Sat, 06 Aug 2022 13:59:52 GMT; Path=/;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/weapi/clientlog; HTTPOnly\"\r\n      }\r\n      let cookie = { cookie: 'NMTID=00OzCh7YMHCWQm1ZU9Vogn9qK4feTAAAAGCc3SE0Q; Max-Age=315360000; Expires=Tue, 03 Aug 2032 13:59:52 GMT; Path=/;;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/eapi/feedback; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/openapi/clientlog; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/wapi/feedback; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/wapi/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/neapi/clientlog; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/neapi/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/neapi/feedback; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/eapi/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/eapi/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/api/feedback; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/openapi/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/eapi/feedback; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/wapi/clientlog; HTTPOnly;MUSIC_U=9611c371e6419e2c184a366a7ca936bf0fc69a8d2f6be4455ded1d5066ff6a4b993166e004087dd367fe124475fa63054c4bb8a8a030b49b26de8349c63f526ad40a31ebc291eb4ad4dbf082a8813684; Max-Age=15552000; Expires=Thu, 02 Feb 2023 13:59:52 GMT; Path=/; HTTPOnly;__csrf=e0281d26dcbef96212ed4b7db9e68461; Max-Age=1296010; Expires=Sun, 21 Aug 2022 14:00:02 GMT; Path=/;;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/neapi/feedback; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/weapi/feedback; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/api/feedback; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/weapi/feedback; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/weapi/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/api/clientlog; HTTPOnly;MUSIC_A_T=1659792787979; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/wapi/feedback; HTTPOnly;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/api/clientlog; HTTPOnly;MUSIC_SNS=; Max-Age=0; Expires=Sat, 06 Aug 2022 13:59:52 GMT; Path=/;MUSIC_R_T=1659792788186; Max-Age=2147483647; Expires=Thu, 24 Aug 2090 17:13:59 GMT; Path=/weapi/clientlog; HTTPOnly' }\r\n      this.$cookies.set('coo', cookie)\r\n      console.log(this.$cookies.get('coo').cookie)\r\n      // wawawa(params).then((res) => {\r\n      //   console.log(res, '收藏返回')\r\n      // })\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n"]},"metadata":{},"sourceType":"module"}