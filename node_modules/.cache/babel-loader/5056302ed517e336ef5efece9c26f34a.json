{"ast":null,"code":"import _createForOfIteratorHelper from \"C:/Users/Wacht/Desktop/git/cloudMusic-Source-Code/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _asyncToGenerator from \"C:/Users/Wacht/Desktop/git/cloudMusic-Source-Code/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.json.stringify.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getPlaylistDetail as _getPlaylistDetail, getSongList as _getSongList, getPlayListComment } from \"@/api/api\";\nimport { collectPlaylist, deletePlayList } from \"@/api/needLogin/musicOperate\";\nimport { transMusicTime } from \"@/utils/commonApi\";\nimport songlist from \"@/components/songlist.vue\";\nexport default {\n  components: {\n    songlist: songlist\n  },\n  data: function data() {\n    return {\n      //歌单id\n      songListId: \"\",\n      //评论分页\n      currentPage: 1,\n      // 歌曲数组\n      musicList: [],\n      //下载音乐的地址\n      DownloadSongUrl: \"\",\n      //mv地址\n      mvUrl: \"\",\n      //搜索歌曲总数\n      count: \"\",\n      // playListComment: [\n      //   {\n      //     user: {\n      //       avatarUrl: \"\",\n      //     },\n      //   },\n      // ],\n      // commentCount: \"\",\n      //MV\n      songMV: [],\n      //歌单详情\n      playListDetail: {\n        name: \"\",\n        coverImgUrl: \"\",\n        trackCount: \"\",\n        creator: {\n          avatarUrl: '',\n          nickname: \"\",\n          signature: \"\"\n        },\n        tags: [],\n        description: \"\"\n      } // userId: \"\", //用户id，用于鉴别歌单是否由用户自己创建的\n\n    };\n  },\n  created: function created() {// if (this.$store.state.token) {\n    //   this.userId = this.$store.state.user.userId;\n    // }\n  },\n  mounted: function mounted() {\n    //缓存id,解决params数据在刷新页面后丢失，导致无法获取到歌单id\n    if (this.$route.params.playListDetail) {\n      localStorage.setItem(\"playListDetail\", JSON.stringify(this.$route.params.playListDetail)); //存储对象类型需要转换成字符串\n    } // 判断是否使用缓存\n\n\n    this.$route.params.playListDetail ? this.playListDetail = this.$route.params.playListDetail : this.playListDetail = JSON.parse(localStorage.getItem(\"playListDetail\")); //将字符串转成对象\n\n    this.getSongList();\n    this.getPlaylistDetail(); // this.getPlayListComment();\n  },\n  methods: {\n    /* //切换歌单评论\r\n    playListHandleCurrentChange(currentPage) {\r\n      var that = this;\r\n      that.currentPage = currentPage;\r\n      that.getPlayListComment();\r\n    }, */\n\n    /* //获取歌单评论\r\n    getPlayListComment() {\r\n      var that = this;\r\n      let params = {\r\n        id: that.playListDetail.id,\r\n        limit: 7,\r\n        offset: (that.currentPage - 1) * 7,\r\n      };\r\n      getPlayListComment(params).then(async (res) => {\r\n        // console.log(\"歌单评论：\", res.data);\r\n        this.playListComment = await res.data.comments;\r\n        that.commentCount = await res.data.total;\r\n        // console.log(\"歌曲评论：\", res.data);\r\n      });\r\n    }, */\n    //分页\n    handleCurrentChange: function handleCurrentChange(currentPage) {\n      // console.log(`当前页: ${currentPage}`);\n      this.currentPage = currentPage;\n      var that = this;\n      that.getPlaylistDetail(currentPage);\n    },\n    getPlaylistDetail: function getPlaylistDetail() {\n      //传入歌单id获取歌曲id和歌单详情\n      var that = this;\n      var params = {\n        id: that.playListDetail.id\n      };\n\n      _getPlaylistDetail(params).then( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(res) {\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return res.data.playlist;\n\n                case 2:\n                  that.playListDetail = _context.sent;\n\n                case 3:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    },\n    getSongList: function getSongList() {\n      //获取歌单所有歌曲\n      var that = this;\n      var params = {\n        id: that.playListDetail.id\n      };\n\n      _getSongList(params).then( /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(res) {\n          var _iterator, _step, item;\n\n          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.next = 2;\n                  return res.data.songs;\n\n                case 2:\n                  that.musicList = _context2.sent;\n                  //给每个列表添加一个防抖\n                  _iterator = _createForOfIteratorHelper(that.musicList);\n\n                  try {\n                    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                      item = _step.value;\n                      that.$set(item, \"timer\", true);\n                    }\n                  } catch (err) {\n                    _iterator.e(err);\n                  } finally {\n                    _iterator.f();\n                  }\n\n                  transMusicTime(that.musicList, \"dt\");\n\n                case 6:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function (_x2) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n    }\n    /*    //收藏/取消收藏歌单\r\n       collectPlaylist(t) {\r\n         const loading = this.$loading({\r\n           target: \"#list_detail\",\r\n           background: \"rgba(255,255,255,0.1)\",\r\n         });\r\n         let params = {\r\n           t: t,\r\n           id: this.playListDetail.id,\r\n         };\r\n         collectPlaylist(params)\r\n           .then((res) => {\r\n             this.$nextTick(() => {\r\n               loading.close();\r\n             });\r\n    \n             // console.log(res, \"收藏返回\");\r\n             if (res.data.code === 200) {\r\n               if (t === \"1\") {\r\n                 this.$message({\r\n                   type: \"success\",\r\n                   message: \"收藏成功-可在网易云音乐中查看\",\r\n                 });\r\n                 return;\r\n               } else if (t === \"2\") {\r\n                 this.$message({\r\n                   type: \"success\",\r\n                   message: \"已取消收藏\",\r\n                 });\r\n               }\r\n             }\r\n           })\r\n           .catch((err) => {\r\n             this.$nextTick(() => {\r\n               loading.close();\r\n             });\r\n             //如果不写catch,请求拦截器拦截后这里会报错\r\n           });\r\n       },\r\n       //删除歌单（自己的）\r\n       deletePlayList(id) {\r\n         const loading = this.$loading({\r\n           target: \"#list_detail\",\r\n           background: \"rgba(255,255,255,0.1)\",\r\n         });\r\n         deletePlayList({ id: id })\r\n           .then((res) => {\r\n             this.$nextTick(() => {\r\n               loading.close();\r\n             });\r\n             if (res.data.code === 200) {\r\n               this.$message.success(\"已从我的歌单删除\");\r\n               this.$router.go(-1);\r\n             }\r\n           })\r\n           .catch((err) => {\r\n             this.$nextTick(() => {\r\n               loading.close();\r\n             });\r\n           });\r\n       }, */\n\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8GA;AACA;AACA;AACA;AACA;AACAA;AACAC;AADA,GADA;AAIAC,MAJA,kBAIA;AACA;AACA;AACAC,oBAFA;AAGA;AACAC,oBAJA;AAKA;AACAC,mBANA;AAOA;AACAC,yBARA;AASA;AACAC,eAVA;AAWA;AACAC,eAZA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,gBAtBA;AAuBA;AACAC;AACAC,gBADA;AAEAC,uBAFA;AAGAC,sBAHA;AAIAC;AAAAC;AAAAC;AAAAC;AAAA,SAJA;AAKAC,gBALA;AAMAC;AANA,OAxBA,CAgCA;;AAhCA;AAkCA,GAvCA;AAwCAC,SAxCA,qBAwCA,CACA;AACA;AACA;AACA,GA5CA;AA6CAC,SA7CA,qBA6CA;AACA;AACA;AACAC,2BACA,gBADA,EAEAC,iDAFA,EADA,CAIA;AACA,KAPA,CAQA;;;AACA,wCACA,uDADA,GAEA,iCACAD,sCADA,CAFA,CATA,CAaA;;AACA;AACA,6BAfA,CAgBA;AACA,GA9DA;AA+DAE;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACAC;AACA;AACA;AACA;AACAC;AACA,KA7BA;AA+BAC,qBA/BA,+BA+BA;AACA;AACA;AACA;AACAC;AADA;;AAGAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAGAE,iBAHA;;AAAA;AAGAH,qCAHA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAMA,KA3CA;AA4CAI,eA5CA,yBA4CA;AACA;AACA;AACA;AACAF;AADA;;AAGAE;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACAD,cADA;;AAAA;AACAH,gCADA;AAEA;AAFA,yDAGAA,cAHA;;AAAA;AAGA;AAAAK;AACAL;AACA;AALA;AAAA;AAAA;AAAA;AAAA;;AAMAM;;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAvHA;AA/DA","names":["components","songlist","data","songListId","currentPage","musicList","DownloadSongUrl","mvUrl","count","songMV","playListDetail","name","coverImgUrl","trackCount","creator","avatarUrl","nickname","signature","tags","description","created","mounted","localStorage","JSON","methods","handleCurrentChange","that","getPlaylistDetail","id","res","getSongList","item","transMusicTime"],"sourceRoot":"src/views","sources":["playListDetails.vue"],"sourcesContent":["<template>\r\n  <div class=\"list-wrap\">\r\n    <div class=\"pageName\">歌单详情</div>\r\n    <div class=\"descript\"></div>\r\n    <div>\r\n      <div class=\"wrap2\">\r\n        <!-- 歌单信息 -->\r\n        <div class=\"details\" id=\"list_detail\">\r\n          <div class=\"details-img\">\r\n            <img v-if=\"playListDetail.coverImgUrl === ''\" src=\"../static/img/playlistpic.png\" alt=\" \" />\r\n            <img v-else :src=\"playListDetail.coverImgUrl\" alt=\" \" />\r\n          </div>\r\n          <div class=\"detailsRight\">\r\n            \r\n            <h3 v-if=\"playListDetail.name === ''\" style=\"margin-left: 0px; text-align: left; font-size: 20px\">\r\n              慢慢的加载，就像音乐舒缓地流淌。\r\n            </h3>\r\n            <h3 v-else style=\"margin-left: 0px; text-align: left; font-size: 20px\">\r\n              {{ playListDetail.name }}\r\n            </h3>\r\n\r\n            <div class=\"playListCreator\">\r\n              <img v-if=\"playListDetail.creator.avatarUrl === ''\" src=\"../static/img/musicpic2.png\" alt=\" \" />\r\n              <img v-else :src=\"playListDetail.creator.avatarUrl\" alt=\" \" />\r\n              <span class=\"playListNickName\"\r\n                >&nbsp;&nbsp;&nbsp;&nbsp;{{\r\n                  playListDetail.creator.nickname\r\n                }}&nbsp;&nbsp;</span\r\n              ><span v-if=\"playListDetail.creator.signature\"\r\n                >&nbsp;&nbsp;-&nbsp;&nbsp;{{\r\n                  playListDetail.creator.signature\r\n                }}</span\r\n              >\r\n            </div>\r\n            <div class=\"playListTag\" v-if=\"playListDetail.tags.length !== 0\">\r\n              <span>标签:&nbsp;&nbsp;</span\r\n              ><span v-for=\"(tag, index) in playListDetail.tags\" :key=\"index\"\r\n                >{{ tag }}&nbsp;</span\r\n              >\r\n            </div>\r\n            <p class=\"playListIntro\">\r\n              {{ playListDetail.description }}\r\n            </p>\r\n\r\n            <!-- <i class=\"iFont el-icon-star-off\" @click=\"collectPlaylist\"></i> -->\r\n          </div>\r\n        </div>\r\n        <!-- 歌单歌曲列表 -->\r\n        <div class=\"countLine\">\r\n          歌曲：\r\n          <!-- <span v-if=\"musicList.length === 0\"\r\n            ><i class=\"el-icon-loading\"></i\r\n          ></span> -->\r\n          <!-- <span v-else>{{ musicList.length }}</span> -->\r\n          <span>{{ playListDetail.trackCount }}</span>\r\n        </div>\r\n        <!-- 歌单歌曲列表 -->\r\n        <ul class=\"wrap-center\">\r\n          <div v-if=\"musicList.length === 0\" class=\"loading\">\r\n            <i class=\"el-icon-loading\"></i>\r\n          </div>\r\n          <songlist :songlist=\"musicList\"></songlist>\r\n        </ul>\r\n        <!-- 歌单评论 -->\r\n        <!-- <div style=\"padding: 0px 50px\">\r\n          <div class=\"countLine\">评论({{ commentCount }}条)</div>\r\n          <div\r\n            class=\"hoverBackColor\"\r\n            v-for=\"item in playListComment\"\r\n            :key=\"item.id\"\r\n          >\r\n            <img\r\n              :src=\"item.user.avatarUrl\"\r\n              style=\"width: 50px; border-radius: 25px\"\r\n            />\r\n            <span\r\n              style=\"display: inline-block; margin-left: 10px; font-size: 15px\"\r\n              >{{ item.user.nickname }}&nbsp;&nbsp;:&nbsp;&nbsp;</span\r\n            >\r\n            <span style=\"margin-left: 20px; width: 750px\">\r\n              {{ item.content }}\r\n            </span>\r\n            <div style=\"height: 30px\">\r\n              <span style=\"float: right; width: 130px\"\r\n                >&nbsp;&nbsp;时间：{{ item.timeStr }}</span\r\n              ><span style=\"float: right\"\r\n                >{{ item.likedCount }} 赞&nbsp;&nbsp;&nbsp;</span\r\n              >\r\n            </div>\r\n          </div>\r\n\r\n          <div style=\"text-align: center\">\r\n            <el-pagination\r\n              v-if=\"commentCount != 0\"\r\n              @current-change=\"playListHandleCurrentChange\"\r\n              :current-page.sync=\"currentPage\"\r\n              :page-size=\"7\"\r\n              layout=\"prev, pager, next, jumper\"\r\n              :total=\"commentCount\"\r\n              :background=\"true\"\r\n            >\r\n            </el-pagination>\r\n          </div>\r\n        </div> -->\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getPlaylistDetail, getSongList, getPlayListComment } from \"@/api/api\";\r\nimport { collectPlaylist, deletePlayList } from \"@/api/needLogin/musicOperate\";\r\nimport { transMusicTime } from \"@/utils/commonApi\";\r\nimport songlist from \"@/components/songlist.vue\";\r\nexport default {\r\n  components: {\r\n    songlist,\r\n  },\r\n  data() {\r\n    return {\r\n      //歌单id\r\n      songListId: \"\",\r\n      //评论分页\r\n      currentPage: 1,\r\n      // 歌曲数组\r\n      musicList: [],\r\n      //下载音乐的地址\r\n      DownloadSongUrl: \"\",\r\n      //mv地址\r\n      mvUrl: \"\",\r\n      //搜索歌曲总数\r\n      count: \"\",\r\n      // playListComment: [\r\n      //   {\r\n      //     user: {\r\n      //       avatarUrl: \"\",\r\n      //     },\r\n      //   },\r\n      // ],\r\n      // commentCount: \"\",\r\n      //MV\r\n      songMV: [],\r\n      //歌单详情\r\n      playListDetail: {\r\n        name: \"\",\r\n        coverImgUrl: \"\",\r\n        trackCount: \"\",\r\n        creator: { avatarUrl: '', nickname: \"\", signature: \"\" },\r\n        tags: [],\r\n        description: \"\",\r\n      },\r\n      // userId: \"\", //用户id，用于鉴别歌单是否由用户自己创建的\r\n    };\r\n  },\r\n  created() {\r\n    // if (this.$store.state.token) {\r\n    //   this.userId = this.$store.state.user.userId;\r\n    // }\r\n  },\r\n  mounted() {\r\n    //缓存id,解决params数据在刷新页面后丢失，导致无法获取到歌单id\r\n    if (this.$route.params.playListDetail) {\r\n      localStorage.setItem(\r\n        \"playListDetail\",\r\n        JSON.stringify(this.$route.params.playListDetail)\r\n      ); //存储对象类型需要转换成字符串\r\n    }\r\n    // 判断是否使用缓存\r\n    this.$route.params.playListDetail\r\n      ? (this.playListDetail = this.$route.params.playListDetail)\r\n      : (this.playListDetail = JSON.parse(\r\n          localStorage.getItem(\"playListDetail\")\r\n        )); //将字符串转成对象\r\n    this.getSongList();\r\n    this.getPlaylistDetail();\r\n    // this.getPlayListComment();\r\n  },\r\n  methods: {\r\n    /* //切换歌单评论\r\n    playListHandleCurrentChange(currentPage) {\r\n      var that = this;\r\n      that.currentPage = currentPage;\r\n      that.getPlayListComment();\r\n    }, */\r\n    /* //获取歌单评论\r\n    getPlayListComment() {\r\n      var that = this;\r\n      let params = {\r\n        id: that.playListDetail.id,\r\n        limit: 7,\r\n        offset: (that.currentPage - 1) * 7,\r\n      };\r\n      getPlayListComment(params).then(async (res) => {\r\n        // console.log(\"歌单评论：\", res.data);\r\n        this.playListComment = await res.data.comments;\r\n        that.commentCount = await res.data.total;\r\n        // console.log(\"歌曲评论：\", res.data);\r\n      });\r\n    }, */\r\n\r\n    //分页\r\n    handleCurrentChange: function (currentPage) {\r\n      // console.log(`当前页: ${currentPage}`);\r\n      this.currentPage = currentPage;\r\n      var that = this;\r\n      that.getPlaylistDetail(currentPage);\r\n    },\r\n\r\n    getPlaylistDetail() {\r\n      //传入歌单id获取歌曲id和歌单详情\r\n      var that = this;\r\n      let params = {\r\n        id: that.playListDetail.id,\r\n      };\r\n      getPlaylistDetail(params).then(async (res) => {\r\n        // console.log(\"----------------:\", res.data.privileges); //歌单歌曲\r\n        // console.log(\"--歌单详情-------:\", res.data.playlist); //歌单歌曲\r\n        that.playListDetail = await res.data.playlist;\r\n        // that.musicList = that.playListDetail.tracks;\r\n      });\r\n    },\r\n    getSongList() {\r\n      //获取歌单所有歌曲\r\n      var that = this;\r\n      let params = {\r\n        id: that.playListDetail.id,\r\n      };\r\n      getSongList(params).then(async (res) => {\r\n        that.musicList = await res.data.songs;\r\n        //给每个列表添加一个防抖\r\n        for (let item of that.musicList) {\r\n          that.$set(item, \"timer\", true);\r\n        }\r\n        transMusicTime(that.musicList, \"dt\");\r\n      });\r\n    },\r\n /*    //收藏/取消收藏歌单\r\n    collectPlaylist(t) {\r\n      const loading = this.$loading({\r\n        target: \"#list_detail\",\r\n        background: \"rgba(255,255,255,0.1)\",\r\n      });\r\n      let params = {\r\n        t: t,\r\n        id: this.playListDetail.id,\r\n      };\r\n      collectPlaylist(params)\r\n        .then((res) => {\r\n          this.$nextTick(() => {\r\n            loading.close();\r\n          });\r\n\r\n          // console.log(res, \"收藏返回\");\r\n          if (res.data.code === 200) {\r\n            if (t === \"1\") {\r\n              this.$message({\r\n                type: \"success\",\r\n                message: \"收藏成功-可在网易云音乐中查看\",\r\n              });\r\n              return;\r\n            } else if (t === \"2\") {\r\n              this.$message({\r\n                type: \"success\",\r\n                message: \"已取消收藏\",\r\n              });\r\n            }\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          this.$nextTick(() => {\r\n            loading.close();\r\n          });\r\n          //如果不写catch,请求拦截器拦截后这里会报错\r\n        });\r\n    },\r\n    //删除歌单（自己的）\r\n    deletePlayList(id) {\r\n      const loading = this.$loading({\r\n        target: \"#list_detail\",\r\n        background: \"rgba(255,255,255,0.1)\",\r\n      });\r\n      deletePlayList({ id: id })\r\n        .then((res) => {\r\n          this.$nextTick(() => {\r\n            loading.close();\r\n          });\r\n          if (res.data.code === 200) {\r\n            this.$message.success(\"已从我的歌单删除\");\r\n            this.$router.go(-1);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          this.$nextTick(() => {\r\n            loading.close();\r\n          });\r\n        });\r\n    }, */\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.descript {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  color: aliceblue;\r\n  font-weight: bolder;\r\n  padding: 10px 20px;\r\n  border-radius: 20px 20px 0 0;\r\n  background: rgba(95, 158, 160, 0.11);\r\n  box-sizing: border-box;\r\n}\r\n\r\n.list-wrap {\r\n  margin: 10px auto 0;\r\n  padding: 0 20px 10px;\r\n  width: 1120px;\r\n  border-radius: 20px;\r\n  background: rgba(95, 158, 160, 0.11);\r\n  box-sizing: border-box;\r\n\r\n  .wrap2 {\r\n    height: 680px;\r\n    border-radius: 0 0 10px 10px;\r\n    background: rgba(95, 158, 160, 0.11);\r\n    overflow-x: hidden;\r\n\r\n    &::-webkit-scrollbar {\r\n      display: none;\r\n    }\r\n\r\n    .details {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      margin: 0 auto;\r\n      padding: 10px;\r\n      width: 98%;\r\n      height: 200px;\r\n      // border: 1px solid rgb(97, 226, 183);\r\n      border-radius: 10px;\r\n      background: rgba(34, 173, 197, 0.055);\r\n      box-sizing: border-box;\r\n\r\n      .details-img {\r\n        display: inline-block;\r\n        // width: 180px;\r\n        // height: 180px;\r\n        border-radius: 10px;\r\n\r\n        img {\r\n          width: 180px;\r\n          height: 180px;\r\n          border-radius: 10px;\r\n          transition: 0.2s;\r\n\r\n          &:hover {\r\n            transform: scale(1.03);\r\n          }\r\n        }\r\n      }\r\n\r\n      .detailsRight {\r\n        position: relative;\r\n        width: 820px;\r\n        height: 180px;\r\n\r\n        // background: rgb(181, 209, 152);\r\n        .playListCreator {\r\n          padding: 5px 0;\r\n          height: 30px;\r\n          font-size: 14px;\r\n          overflow: hidden;\r\n\r\n          img {\r\n            width: 30px;\r\n            height: 30px;\r\n            border-radius: 15px;\r\n          }\r\n        }\r\n\r\n        .playListTag {\r\n          padding: 5px 0;\r\n          height: 20px;\r\n          overflow: hidden;\r\n        }\r\n\r\n        .playListIntro {\r\n          padding: 5px 0;\r\n          width: 100%;\r\n          max-height: 65px;\r\n          font-size: 14px;\r\n          overflow-x: hidden;\r\n          text-indent: 1.5em;\r\n          &::-webkit-scrollbar {\r\n            display: none;\r\n          }\r\n        }\r\n\r\n        .playListNickName {\r\n          color: antiquewhite;\r\n        }\r\n      }\r\n    }\r\n\r\n    .wrap-center {\r\n      max-height: 500px;\r\n      overflow-x: hidden;\r\n      // border-top: 1px exclusion chocolate;\r\n\r\n      &::-webkit-scrollbar {\r\n        display: none;\r\n      }\r\n\r\n      .music-list {\r\n        position: relative;\r\n        display: flex;\r\n        margin: 5px auto;\r\n        padding: 0 10px;\r\n        width: 96%;\r\n        height: 30px;\r\n        line-height: 30px;\r\n        overflow: hidden;\r\n        color: rgba(255, 255, 255, 1);\r\n        font-weight: bolder;\r\n        -o-text-overflow: ellipsis;\r\n        text-overflow: ellipsis;\r\n        border-radius: 5px;\r\n        background: rgba(59, 165, 168, 0.048);\r\n        transition: 0.2s;\r\n\r\n        .music-list-span {\r\n          display: inline-block;\r\n          width: 270px;\r\n          text-align: center;\r\n          overflow: hidden;\r\n          text-overflow: ellipsis;\r\n          white-space: nowrap;\r\n        }\r\n\r\n        .option {\r\n          position: absolute;\r\n          padding-left: 150px;\r\n          width: 240px;\r\n          right: 10px;\r\n          box-sizing: border-box;\r\n\r\n          span {\r\n            display: inline-block;\r\n            width: 30px;\r\n\r\n            &:hover {\r\n              cursor: pointer;\r\n            }\r\n          }\r\n        }\r\n\r\n        &:hover {\r\n          color: aquamarine;\r\n          transform: scale(1.01);\r\n          // background: rgba(146, 240, 243, 0.247);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/deep/ .el-pager {\r\n  height: 30px !important;\r\n  background: none !important;\r\n}\r\n\r\n/deep/ .number,\r\n/deep/ .btn-prev,\r\n/deep/ .btn-quicknext,\r\n/deep/ .btn-next,\r\n/deep/ .el-input__inner,\r\n/deep/ .more {\r\n  color: #f2fff7 !important;\r\n  background: transparent !important;\r\n}\r\n\r\n/deep/ .number:hover,\r\n/deep/ .btn-prev:hover,\r\n/deep/ .btn-quicknext:hover,\r\n/deep/ .btn-next:hover,\r\n/deep/ .el-input__inner:hover,\r\n/deep/ .more:hover {\r\n  color: #f7a588 !important;\r\n}\r\n\r\n/deep/ .active {\r\n  color: #f7a588 !important;\r\n}\r\n\r\n/deep/ .el-input__inner {\r\n  border: none;\r\n}\r\n\r\n/deep/ .el-pagination__jump {\r\n  color: #f7dd88 !important;\r\n}\r\n\r\n//   btn-quickprev el-icon-more\r\n.iconhover {\r\n  transition: 0.2s;\r\n\r\n  &:hover {\r\n    color: rgb(247, 243, 45);\r\n  }\r\n}\r\n\r\n// .iFont {\r\n//   position: absolute;\r\n//   top: 0;\r\n//   right: 5px;\r\n//   font-size: 25px;\r\n//   &:hover {\r\n//     cursor: pointer;\r\n//     color: rgb(215, 233, 57);\r\n//   }\r\n// }\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}