{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport QRCode from \"qrcode\";\nimport { getqrKey, getqrImg, getqrStatus as _getqrStatus } from \"@/api/login/login\";\nimport { getTimestamp } from \"@/api/commonApi\";\nexport default {\n  name: 'Login',\n  data: function data() {\n    return {\n      loginWrapShow: false,\n      qrStatus: '',\n      qrtimer: null,\n      key: ''\n    };\n  },\n  methods: {\n    goLogin: function goLogin() {\n      var _this = this;\n\n      this.loginWrapShow = true;\n      var params = {\n        timestamp: getTimestamp()\n      }; // console.log(params.timestamp)\n\n      getqrKey(params).then(function (res) {\n        _this.key = res.data.data.unikey;\n        var params = {\n          key: res.data.data.unikey // timestamp: getTimestamp()\n\n        };\n        getqrImg(params).then(function (res) {\n          console.log(res.data.data.qrurl);\n\n          _this.getQRCode(res.data.data.qrurl);\n        });\n      });\n    },\n    //生成二维码\n    getQRCode: function getQRCode(qrurl) {\n      var opts = {\n        errorCorrectionLevel: \"H\",\n        //容错级别\n        type: \"image/png\",\n        //生成的二维码类型\n        quality: 0.3,\n        //二维码质量\n        margin: 5,\n        //二维码留白边距\n        width: 180,\n        //宽\n        height: 180,\n        //高\n        text: \"\",\n        //二维码内容\n        color: {\n          dark: \"#333333\",\n          //前景色\n          light: \"#fff\" //背景色\n\n        }\n      };\n      this.QRCodeMsg = qrurl; //生成的二维码为URL地址js\n\n      var msg = document.getElementById(\"QRCode_header\"); // 将获取到的数据（val）画到msg（canvas）上\n\n      QRCode.toCanvas(msg, this.QRCodeMsg, opts, function (error) {// console.log(error)\n      });\n    },\n    refreshQr: function refreshQr() {\n      this.goLogin();\n    },\n    getqrStatus: function getqrStatus() {\n      var _this2 = this;\n\n      var params = {\n        key: this.key\n      };\n\n      _getqrStatus(params).then(function (res) {\n        console.log(res);\n        _this2.qrStatus = res.data.message;\n        console.log(_this2.qrStatus);\n\n        if (res.data.code === 803) {\n          setTimeout(function () {\n            _this2.loginWrapShow = false;\n          }, 1000);\n        } else if (res.data.code === 800) {\n          _this2.qrStatus += ',请刷新获取';\n        }\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;AAsBA;AACA;AACA;AACA;AACAA,eADA;AAEAC,MAFA,kBAEA;AACA;AACAC,0BADA;AAEAC,kBAFA;AAGAC,mBAHA;AAIAC;AAJA;AAMA,GATA;AAUAC;AACAC,WADA,qBACA;AAAA;;AACA;AACA;AACAC;AADA,QAFA,CAKA;;AACAC;AACA;AACA;AACAJ,mCADA,CAEA;;AAFA;AAIAK;AACAC;;AACA;AACA,SAHA;AAIA,OAVA;AAYA,KAnBA;AAoBA;AACAC,aArBA,qBAqBAC,KArBA,EAqBA;AACA;AACAC,iCADA;AACA;AACAC,yBAFA;AAEA;AACAC,oBAHA;AAGA;AACAC,iBAJA;AAIA;AACAC,kBALA;AAKA;AACAC,mBANA;AAMA;AACAC,gBAPA;AAOA;AACAC;AACAC,yBADA;AACA;AACAC,uBAFA,CAEA;;AAFA;AARA;AAaA,6BAdA,CAcA;;AACA,yDAfA,CAgBA;;AACAC,mEACA;AACA,OAFA;AAGA,KAzCA;AA0CAC,aA1CA,uBA0CA;AACA;AACA,KA5CA;AA6CAC,eA7CA,yBA6CA;AAAA;;AACA;AACArB;AADA;;AAGAqB;AACAf;AACA;AACAA;;AACA;AACAgB;AACA;AACA,WAFA,EAEA,IAFA;AAIA,SALA,MAKA;AACA;AACA;AACA,OAZA;AAaA;AA9DA;AAVA","names":["name","data","loginWrapShow","qrStatus","qrtimer","key","methods","goLogin","timestamp","getqrKey","getqrImg","console","getQRCode","qrurl","errorCorrectionLevel","type","quality","margin","width","height","text","color","dark","light","QRCode","refreshQr","getqrStatus","setTimeout"],"sourceRoot":"src/components/login","sources":["index.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"login\"\r\n         @click=\"goLogin\">登录</div>\r\n    <div class=\"loginWrap\"\r\n         v-if=\"loginWrapShow\">\r\n      <p class=\"loginClose\"\r\n         @click=\"loginWrapShow = false\"><i class=\"el-icon-close\"></i></p>\r\n      <div class=\"imgWrap\">\r\n        <canvas id=\"QRCode_header\"></canvas>\r\n      </div>\r\n      <p class=\"refreshQr\"> <span @click='refreshQr'>刷新</span></p>\r\n      <p class=\"qrStatus\">{{qrStatus}}</p>\r\n      <p style=\" position: absolute;\r\n    bottom: 0;\r\n    right: 5px;\"\r\n         @click=\"getqrStatus\">获取状态</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport QRCode from \"qrcode\"\r\nimport { getqrKey, getqrImg, getqrStatus } from \"@/api/login/login\"\r\nimport { getTimestamp } from \"@/api/commonApi\"\r\nexport default {\r\n  name: 'Login',\r\n  data () {\r\n    return {\r\n      loginWrapShow: false,\r\n      qrStatus: '',\r\n      qrtimer: null,\r\n      key: '',\r\n    }\r\n  },\r\n  methods: {\r\n    goLogin () {\r\n      this.loginWrapShow = true\r\n      let params = {\r\n        timestamp: getTimestamp()\r\n      }\r\n      // console.log(params.timestamp)\r\n      getqrKey(params).then((res) => {\r\n        this.key = res.data.data.unikey\r\n        let params = {\r\n          key: res.data.data.unikey,\r\n          // timestamp: getTimestamp()\r\n        }\r\n        getqrImg(params).then((res) => {\r\n          console.log(res.data.data.qrurl)\r\n          this.getQRCode(res.data.data.qrurl)\r\n        })\r\n      })\r\n\r\n    },\r\n    //生成二维码\r\n    getQRCode (qrurl) {\r\n      let opts = {\r\n        errorCorrectionLevel: \"H\",//容错级别\r\n        type: \"image/png\",//生成的二维码类型\r\n        quality: 0.3,//二维码质量\r\n        margin: 5,//二维码留白边距\r\n        width: 180,//宽\r\n        height: 180,//高\r\n        text: \"\",//二维码内容\r\n        color: {\r\n          dark: \"#333333\",//前景色\r\n          light: \"#fff\"//背景色\r\n        }\r\n      };\r\n      this.QRCodeMsg = qrurl; //生成的二维码为URL地址js\r\n      let msg = document.getElementById(\"QRCode_header\");\r\n      // 将获取到的数据（val）画到msg（canvas）上\r\n      QRCode.toCanvas(msg, this.QRCodeMsg, opts, function (error) {\r\n        // console.log(error)\r\n      });\r\n    },\r\n    refreshQr () {\r\n      this.goLogin()\r\n    },\r\n    getqrStatus () {\r\n      let params = {\r\n        key: this.key\r\n      }\r\n      getqrStatus(params).then((res) => {\r\n        console.log(res)\r\n        this.qrStatus = res.data.message\r\n        console.log(this.qrStatus)\r\n        if (res.data.code === 803) {\r\n          setTimeout(() => {\r\n            this.loginWrapShow = false\r\n          }, 1000)\r\n\r\n        } else if (res.data.code === 800) {\r\n          this.qrStatus += ',请刷新获取'\r\n        }\r\n      })\r\n    }\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.login {\r\n  position: absolute;\r\n  right: 10px;\r\n  color: rgba(238, 238, 238, 0.61);\r\n  text-align: center;\r\n  // background: rgb(161, 145, 139);\r\n  &:hover {\r\n    cursor: pointer;\r\n    color: #eee;\r\n  }\r\n}\r\n.loginWrap {\r\n  z-index: 999;\r\n  position: fixed;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  margin: auto;\r\n  width: 500px;\r\n  height: 300px;\r\n  background-color: rgba(51, 73, 128, 0.856);\r\n\r\n  .loginClose {\r\n    position: absolute;\r\n    height: 20px;\r\n    top: 5px;\r\n    right: 5px;\r\n    /deep/ .el-icon-close {\r\n      font-size: 20px;\r\n\r\n      &:hover {\r\n        cursor: pointer;\r\n      }\r\n    }\r\n  }\r\n  .imgWrap {\r\n    // display: inline-block;\r\n    margin: 50px auto 0;\r\n    width: 180px;\r\n    height: 180px;\r\n    #QRCode_header {\r\n      margin: auto;\r\n    }\r\n  }\r\n  .qrStatus {\r\n    text-align: center;\r\n    // background-color: #eee;\r\n  }\r\n  .refreshQr {\r\n    color: rgba(255, 255, 255, 0.808);\r\n    margin-bottom: 20px;\r\n    text-align: center;\r\n    transition: 0.2s;\r\n    span {\r\n      font-size: 15px;\r\n      &:hover {\r\n        color: rgb(228, 74, 74);\r\n        cursor: pointer;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}