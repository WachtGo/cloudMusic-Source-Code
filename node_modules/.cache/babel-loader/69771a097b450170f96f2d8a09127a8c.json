{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getDownloadUrl, getSongDetails, getSongComment } from \"@/api/api\";\nimport { likeMusic } from \"@/api/needLogin/musicOperate\";\nimport { download, transMusicTime } from \"@/utils/commonApi\";\nexport default {\n  // props: ['songId'],\n  data() {\n    return {\n      //评论分页\n      currentPage: 1,\n      songUrlAdd: null,\n      // songId: '', //接收的歌曲id\n      songDetails: {\n        al: {\n          picUrl: \"\"\n        },\n        ar: [{\n          name: \"\"\n        }],\n        alia: [],\n        fee: 0\n      },\n      //歌曲详情\n      songComment: [],\n      commentCount: 0,\n      //搜索歌曲总数\n      count: 0\n    };\n  },\n\n  created() {\n    //路由中含有歌曲详细信息时，直接使用\n    if (this.$route.params.songDetails) {\n      this.songDetails = this.$route.params.songDetails;\n      localStorage.setItem(\"songDetails\", JSON.stringify(this.$route.params.songDetails));\n      this.getSongComment(this.songDetails.id);\n    } else {\n      //路由只设置了歌曲id时，便发起请求获取歌曲信息。反之若都没有，代表只是刷新了页面，直接使用缓存获取路由信息\n      if (this.$route.params.id) {\n        this.getSongDetails();\n        this.getSongComment(this.$route.params.id);\n      } else {\n        this.songDetails = JSON.parse(localStorage.getItem(\"songDetails\"));\n        this.getSongComment(this.songDetails.id);\n      }\n    }\n  },\n\n  methods: {\n    // 分页\n    songhandleCurrentChange(currentPage) {\n      var that = this;\n      that.currentPage = currentPage;\n      that.getSongComment();\n    },\n\n    // 获取歌曲详情\n    getSongDetails() {\n      var that = this;\n      let params = {\n        ids: this.$route.params.id\n      };\n      getSongDetails(params).then(async res => {\n        that.songDetails = await res.data.songs[0];\n        that.$set(that.songDetails, \"timer\", true);\n        transMusicTime(that.songDetails, \"dt\");\n        localStorage.setItem(\"songDetails\", JSON.stringify(that.songDetails)); // console.log(\"歌曲详情\", res.data.songs[0]);\n      });\n    },\n\n    //获取歌曲评论\n    getSongComment(id) {\n      var that = this;\n      let params = {\n        id: id,\n        limit: 7,\n        offset: (that.currentPage - 1) * 7\n      };\n      getSongComment(params).then(res => {\n        that.songComment = res.data.comments;\n        that.commentCount = res.data.total; // console.log(\"歌曲评论：\", res.data);\n      });\n    },\n\n    //喜欢/取消喜欢音乐\n    likeMusic(id, like) {\n      const loading = this.$loading({\n        target: \"#like_detail\",\n        background: \"rgba(255,255,255,0.1)\"\n      });\n      likeMusic({\n        id: id,\n        like: like\n      }).then(res => {\n        this.$nextTick(() => {\n          loading.close();\n        });\n\n        if (res.data.code === 200) {\n          if (like) {\n            this.$message.success(\"已添加入我的喜欢-可进入网易云音乐查看\");\n            return;\n          }\n\n          this.$message.success(\"已从我的喜欢列表删除\");\n        }\n      }).catch(error => {\n        this.$nextTick(() => {\n          loading.close();\n        });\n      });\n    },\n\n    //试听音乐\n    listenMusic(songDetails) {\n      // console.log('歌曲信息---：',songDetails)\n      if (songDetails.timer) {\n        //获取播放音乐链接\n        if (songDetails.noCopyrightRcmd) {\n          this.$message.error(\"这首歌暂无版权\");\n          songDetails.timer = false;\n          setTimeout(() => {\n            songDetails.timer = true;\n          }, 3000);\n          return;\n        }\n\n        if (songDetails.fee == 1) {\n          this.$message({\n            message: \"VIP歌曲 - 只能试听30s\",\n            type: \"warning\"\n          });\n        } // 获取歌词\n        // getSongLyric({\n        //   id: id,\n        // }).then((res) => {\n        //   songlrc = res.data.lrc.lyric;\n        // }),\n\n\n        this.$store.commit(\"aplayer/addAUDITION\", {\n          name: songDetails.name,\n          //歌曲名\n          artist: songDetails.ar[0].name,\n          //作者\n          // url: songUrlAdd,\n          url: `https://music.163.com/song/media/outer/url?id=${songDetails.id}.mp3`,\n          cover: songDetails.al.picUrl,\n          //   lrc: songlrc,\n          id: songDetails.id\n        });\n        songDetails.timer = false;\n        setTimeout(() => {\n          songDetails.timer = true;\n        }, 3000);\n      }\n    },\n\n    //添加歌曲到播放列表\n    playMusic(songDetails) {\n      if (songDetails.timer) {\n        //获取播放音乐链接\n        if (songDetails.noCopyrightRcmd) {\n          this.$message.error(\"这首歌暂无版权\");\n          songDetails.timer = false;\n          setTimeout(() => {\n            songDetails.timer = true;\n          }, 3000);\n          return;\n        }\n\n        if (songDetails.fee == 1) {\n          this.$message.warning(\"VIP歌曲 - 只能试听30s\");\n        } // 获取歌词\n        // getSongLyric({\n        //   id: id,\n        // }).then((res) => {\n        //   songlrc = res.data.lrc.lyric;\n        // }),\n\n\n        this.$store.commit(\"aplayer/addSONG\", {\n          name: songDetails.name,\n          //歌曲名\n          artist: songDetails.ar[0].name,\n          //作者\n          // url: songUrlAdd,\n          url: `https://music.163.com/song/media/outer/url?id=${songDetails.id}.mp3`,\n          cover: songDetails.al.picUrl,\n          //   lrc: songlrc,\n          id: songDetails.id\n        });\n        songDetails.timer = false;\n        setTimeout(() => {\n          songDetails.timer = true;\n        }, 3000);\n      }\n    },\n\n    playMV(mvId) {\n      //获取mv播放链接\n      this.$router.push({\n        name: \"mvPlay\",\n        params: {\n          mvId: mvId\n        }\n      });\n    },\n\n    //获取歌曲下载地址\n    async getDownloadUrl(songId, songName) {\n      var that = this;\n      that.$message.warning(\"正在尝试下载\");\n      let params = {\n        id: songId\n      };\n      await getDownloadUrl(params).then(async res => {\n        // console.log('歌曲下载地址：', res.data)\n        // console.log(\"歌曲下载地址：\", res.data.data.url);\n        // download(res.data.data.url, songName)\n        await download(res.data.data[0].url, songName);\n        that.$message.success(\"可以开始下载了\");\n      });\n    },\n\n    //进入歌手页面\n    goSingerDetail(id) {\n      // let routerInfo = {\n      //   name: \"singerDetail\",\n      //   params: {\n      //     id: id,\n      //   },\n      // };\n      // this.$router.push({\n      //   name: \"emptyPage\",\n      //   params: routerInfo,\n      // });\n      this.$router.push({\n        name: \"singerDetail\",\n        params: {\n          id: id\n        }\n      });\n    },\n\n    // 进入mv详情页面\n    playMV(mvId) {\n      //获取mv播放链接\n      this.$router.push({\n        name: \"mvPlay\",\n        params: {\n          mvId: mvId\n        }\n      });\n    } //根据主题更换播放器颜色\n    // randomColor() {\n    //   return `#${((Math.random() * 0xffffff) << 0).toString(16)}`\n    // },\n\n\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiIA;AACA;AACA;AACA;AACA;AACAA;AACA;AACA;AACAC,oBAFA;AAGAC,sBAHA;AAIA;AACAC;AAAAC;AAAAC;AAAA;AAAAC;AAAAC;AAAA;AAAAC;AAAAC;AAAA,OALA;AAKA;AACAC,qBANA;AAOAC,qBAPA;AAQA;AACAC;AATA;AAWA,GAdA;;AAeAC;AACA;AACA;AACA;AACAC,2BACA,aADA,EAEAC,8CAFA;AAIA;AACA,KAPA,MAOA;AACA;AACA;AACA;AACA;AACA,OAHA,MAGA;AACA;AACA;AACA;AACA;AACA,GAlCA;;AAmCAC;AACA;AACAC;AACA;AACAC;AACAA;AACA,KANA;;AAOA;AACAC;AACA;AACA;AACAC;AADA;AAGAD;AACAD;AACAA;AACAG;AACAP,8EAJA,CAKA;AACA,OANA;AAOA,KApBA;;AAqBA;AACAQ;AACA;AACA;AACAC,cADA;AAEAC,gBAFA;AAGAC;AAHA;AAKAH;AACAJ;AACAA,2CAFA,CAGA;AACA,OAJA;AAKA,KAlCA;;AAmCA;AACAQ;AACA;AACAC,8BADA;AAEAC;AAFA;AAIAF;AAAAH;AAAAM;AAAA,SACAC,IADA,CACAC;AACA;AACAC;AACA,SAFA;;AAGA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA,OAZA,EAaAC,KAbA,CAaAC;AACA;AACAF;AACA,SAFA;AAGA,OAjBA;AAkBA,KA3DA;;AA4DA;AACAG;AACA;AACA;AACA;AACA;AACA;AACAhC;AACAiC;AACAjC;AACA,WAFA,EAEA,IAFA;AAGA;AACA;;AACA;AACA;AACAkC,sCADA;AAEAC;AAFA;AAIA,SAfA,CAgBA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA/B,gCADA;AACA;AACAgC,wCAFA;AAEA;AACA;AACAC,oFAJA;AAKAC,sCALA;AAMA;AACAlB;AAPA;AASApB;AACAiC;AACAjC;AACA,SAFA,EAEA,IAFA;AAGA;AACA,KAnGA;;AAoGA;AACAuC;AACA;AACA;AACA;AACA;AACAvC;AACAiC;AACAjC;AACA,WAFA,EAEA,IAFA;AAGA;AACA;;AACA;AACA;AACA,SAZA,CAaA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACAI,gCADA;AACA;AACAgC,wCAFA;AAEA;AACA;AACAC,oFAJA;AAKAC,sCALA;AAMA;AACAlB;AAPA;AASApB;AACAiC;AACAjC;AACA,SAFA,EAEA,IAFA;AAGA;AACA,KAvIA;;AAwIAwC;AACA;AACA;AACApC,sBADA;AAEAqC;AAAAC;AAAA;AAFA;AAIA,KA9IA;;AA+IA;AACA;AACA;AACA3B;AACA;AACAK;AADA;AAGA;AACA;AACA;AACA;AACA;AACAL;AACA,OANA;AAOA,KA7JA;;AA8JA;AACA4B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAvC,4BADA;AAEAqC;AAAArB;AAAA;AAFA;AAIA,KA9KA;;AA+KA;AACAoB;AACA;AACA;AACApC,sBADA;AAEAqC;AAAAC;AAAA;AAFA;AAIA,KAtLA,CAuLA;AACA;AACA;AACA;;;AA1LA;AAnCA","names":["data","currentPage","songUrlAdd","songDetails","al","picUrl","ar","name","alia","fee","songComment","commentCount","count","created","localStorage","JSON","methods","songhandleCurrentChange","that","getSongDetails","ids","transMusicTime","getSongComment","id","limit","offset","likeMusic","target","background","like","then","res","loading","catch","error","listenMusic","setTimeout","message","type","artist","url","cover","playMusic","playMV","params","mvId","goSingerDetail"],"sourceRoot":"src/views","sources":["songDetails.vue"],"sourcesContent":["<template>\n  <div class=\"list-wrap\">\n    <div class=\"pageName\">歌曲详情</div>\n    <div class=\"descript\"></div>\n    <div>\n      <ul>\n        <div id=\"like_detail\" class=\"details\">\n          <div class=\"details-img\">\n            <img :src=\"songDetails.al.picUrl\" alt=\"\" />\n          </div>\n          <div class=\"detailsRight\">\n            <div style=\"margin-left: 0px; text-align: left; font-size: 20px\">\n              {{ songDetails.name }}\n              <div style=\"display: inline-block\">\n                <button\n                  class=\"my-button\"\n                  @click=\"likeMusic(songDetails.id, true)\"\n                >\n                  喜欢<i class=\"iFont el-icon-star-on iconhover\"></i></button\n                ><button\n                  class=\"my-button\"\n                  @click=\"likeMusic(songDetails.id, false)\"\n                >\n                  不喜欢了<i class=\"iFont el-icon-star-off iconhover\"></i>\n                </button>\n              </div>\n            </div>\n            <div style=\"margin: 10px 0 10px 0; height: 30px; font-size: 14px\">\n              <span\n                class=\"playListNickName\"\n                @click=\"goSingerDetail(songDetails.ar[0].id)\"\n                >{{ songDetails.ar[0].name }}</span\n              ><span\n                ><br />\n                时长&nbsp;&nbsp;-&nbsp;&nbsp;<span\n                  style=\"color: antiquewhite\"\n                  >{{ songDetails.dt }}</span\n                ></span\n              >\n              <div class=\"option\">\n                <div class=\"flexBetween\">\n                  <!-- 试听 -->\n                  <span\n                    class=\"inline-block\"\n                    style=\"margin-right: 5px\"\n                    @click=\"listenMusic(songDetails)\"\n                    ><i class=\"el-icon-headset iconhover\"></i\n                  ></span>\n                  <!-- 添加到播放列表 -->\n                  <span\n                    class=\"inline-block\"\n                    style=\"margin-right: 5px\"\n                    v-if=\"songDetails.fee === 0 || songDetails.fee === 8\"\n                    @click.stop=\"playMusic(songDetails)\"\n                    ><i class=\"el-icon-folder-add iconhover\"></i>\n                  </span>\n                  <span\n                    class=\"inline-block\"\n                    style=\"\"\n                    v-if=\"Boolean(songDetails.mv)\"\n                    @click=\"playMV(songDetails.mv)\"\n                    ><i class=\"el-icon-video-camera iconhover\"></i>&nbsp;\n                  </span>\n\n                  <span\n                    class=\"inline-block\"\n                    style=\"margin-right: 5px\"\n                    v-if=\"songDetails.fee === 0 || songDetails.fee === 8\"\n                    @click=\"getDownloadUrl(songDetails.id, songDetails.name)\"\n                    ><i class=\"el-icon-download iconhover\"></i>&nbsp;</span\n                  ><span v-if=\"songDetails.fee !== 0\">&nbsp;&nbsp;&nbsp; </span>\n                </div>\n              </div>\n            </div>\n            <div style=\"margin-top: 30px; font-size: 14px\">\n              <span>{{ songDetails.alia[0] }}</span>\n            </div>\n            <br />\n          </div>\n        </div>\n\n        <div style=\"padding: 0px 50px\">\n          <div class=\"countLine\">\n            <span v-if=\"commentCount\">评论({{ commentCount }}条)</span>\n          </div>\n          <div\n            class=\"hoverBackColor\"\n            v-for=\"item in songComment\"\n            :key=\"item.id\"\n          >\n            <img\n              :src=\"item.user.avatarUrl\"\n              style=\"width: 50px; border-radius: 25px\"\n            />\n            <span\n              style=\"display: inline-block; margin-left: 10px; font-size: 15px\"\n              >{{ item.user.nickname }}&nbsp;&nbsp;:&nbsp;&nbsp;</span\n            >\n            <span style=\"margin-left: 20px; width: 750px\">\n              {{ item.content }}\n            </span>\n            <div style=\"height: 30px\">\n              <span style=\"float: right; width: 130px\"\n                >&nbsp;&nbsp;时间：{{ item.timeStr }}</span\n              ><span style=\"float: right\"\n                >{{ item.likedCount }} 赞&nbsp;&nbsp;&nbsp;</span\n              >\n            </div>\n          </div>\n\n          <div class=\"pagination\">\n            <el-pagination\n              v-if=\"commentCount !== 0\"\n              @current-change=\"songhandleCurrentChange\"\n              :current-page.sync=\"currentPage\"\n              :page-size=\"7\"\n              layout=\"prev, pager, next, jumper\"\n              :total=\"commentCount\"\n              :background=\"true\"\n            >\n            </el-pagination>\n          </div>\n        </div>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { getDownloadUrl, getSongDetails, getSongComment } from \"@/api/api\";\nimport { likeMusic } from \"@/api/needLogin/musicOperate\";\nimport { download, transMusicTime } from \"@/utils/commonApi\";\nexport default {\n  // props: ['songId'],\n  data() {\n    return {\n      //评论分页\n      currentPage: 1,\n      songUrlAdd: null,\n      // songId: '', //接收的歌曲id\n      songDetails: { al: { picUrl: \"\" }, ar: [{ name: \"\" }], alia: [], fee: 0 }, //歌曲详情\n      songComment: [],\n      commentCount: 0,\n      //搜索歌曲总数\n      count: 0,\n    };\n  },\n  created() {\n    //路由中含有歌曲详细信息时，直接使用\n    if (this.$route.params.songDetails) {\n      this.songDetails = this.$route.params.songDetails;\n      localStorage.setItem(\n        \"songDetails\",\n        JSON.stringify(this.$route.params.songDetails)\n      );\n      this.getSongComment(this.songDetails.id);\n    } else {\n      //路由只设置了歌曲id时，便发起请求获取歌曲信息。反之若都没有，代表只是刷新了页面，直接使用缓存获取路由信息\n      if (this.$route.params.id) {\n        this.getSongDetails();\n        this.getSongComment(this.$route.params.id);\n      } else {\n        this.songDetails = JSON.parse(localStorage.getItem(\"songDetails\"));\n        this.getSongComment(this.songDetails.id);\n      }\n    }\n  },\n  methods: {\n    // 分页\n    songhandleCurrentChange(currentPage) {\n      var that = this;\n      that.currentPage = currentPage;\n      that.getSongComment();\n    },\n    // 获取歌曲详情\n    getSongDetails() {\n      var that = this;\n      let params = {\n        ids: this.$route.params.id,\n      };\n      getSongDetails(params).then(async (res) => {\n        that.songDetails = await res.data.songs[0];\n        that.$set(that.songDetails, \"timer\", true);\n        transMusicTime(that.songDetails, \"dt\");\n        localStorage.setItem(\"songDetails\", JSON.stringify(that.songDetails));\n        // console.log(\"歌曲详情\", res.data.songs[0]);\n      });\n    },\n    //获取歌曲评论\n    getSongComment(id) {\n      var that = this;\n      let params = {\n        id: id,\n        limit: 7,\n        offset: (that.currentPage - 1) * 7,\n      };\n      getSongComment(params).then((res) => {\n        that.songComment = res.data.comments;\n        that.commentCount = res.data.total;\n        // console.log(\"歌曲评论：\", res.data);\n      });\n    },\n    //喜欢/取消喜欢音乐\n    likeMusic(id, like) {\n      const loading = this.$loading({\n        target: \"#like_detail\",\n        background: \"rgba(255,255,255,0.1)\",\n      });\n      likeMusic({ id: id, like: like })\n        .then((res) => {\n          this.$nextTick(() => {\n            loading.close();\n          });\n          if (res.data.code === 200) {\n            if (like) {\n              this.$message.success(\"已添加入我的喜欢-可进入网易云音乐查看\");\n              return;\n            }\n            this.$message.success(\"已从我的喜欢列表删除\");\n          }\n        })\n        .catch((error) => {\n          this.$nextTick(() => {\n            loading.close();\n          });\n        });\n    },\n    //试听音乐\n    listenMusic(songDetails) {\n      // console.log('歌曲信息---：',songDetails)\n      if (songDetails.timer) {\n        //获取播放音乐链接\n        if (songDetails.noCopyrightRcmd) {\n          this.$message.error(\"这首歌暂无版权\");\n          songDetails.timer = false;\n          setTimeout(() => {\n            songDetails.timer = true;\n          }, 3000);\n          return;\n        }\n        if (songDetails.fee == 1) {\n          this.$message({\n            message: \"VIP歌曲 - 只能试听30s\",\n            type: \"warning\",\n          });\n        }\n        // 获取歌词\n        // getSongLyric({\n        //   id: id,\n        // }).then((res) => {\n        //   songlrc = res.data.lrc.lyric;\n        // }),\n        this.$store.commit(\"aplayer/addAUDITION\", {\n          name: songDetails.name, //歌曲名\n          artist: songDetails.ar[0].name, //作者\n          // url: songUrlAdd,\n          url: `https://music.163.com/song/media/outer/url?id=${songDetails.id}.mp3`,\n          cover: songDetails.al.picUrl,\n          //   lrc: songlrc,\n          id: songDetails.id,\n        });\n        songDetails.timer = false;\n        setTimeout(() => {\n          songDetails.timer = true;\n        }, 3000);\n      }\n    },\n    //添加歌曲到播放列表\n    playMusic(songDetails) {\n      if (songDetails.timer) {\n        //获取播放音乐链接\n        if (songDetails.noCopyrightRcmd) {\n          this.$message.error(\"这首歌暂无版权\");\n          songDetails.timer = false;\n          setTimeout(() => {\n            songDetails.timer = true;\n          }, 3000);\n          return;\n        }\n        if (songDetails.fee == 1) {\n          this.$message.warning(\"VIP歌曲 - 只能试听30s\");\n        }\n        // 获取歌词\n        // getSongLyric({\n        //   id: id,\n        // }).then((res) => {\n        //   songlrc = res.data.lrc.lyric;\n        // }),\n        this.$store.commit(\"aplayer/addSONG\", {\n          name: songDetails.name, //歌曲名\n          artist: songDetails.ar[0].name, //作者\n          // url: songUrlAdd,\n          url: `https://music.163.com/song/media/outer/url?id=${songDetails.id}.mp3`,\n          cover: songDetails.al.picUrl,\n          //   lrc: songlrc,\n          id: songDetails.id,\n        });\n        songDetails.timer = false;\n        setTimeout(() => {\n          songDetails.timer = true;\n        }, 3000);\n      }\n    },\n    playMV(mvId) {\n      //获取mv播放链接\n      this.$router.push({\n        name: \"mvPlay\",\n        params: { mvId: mvId },\n      });\n    },\n    //获取歌曲下载地址\n    async getDownloadUrl(songId, songName) {\n      var that = this;\n      that.$message.warning(\"正在尝试下载\");\n      let params = {\n        id: songId,\n      };\n      await getDownloadUrl(params).then(async (res) => {\n        // console.log('歌曲下载地址：', res.data)\n        // console.log(\"歌曲下载地址：\", res.data.data.url);\n        // download(res.data.data.url, songName)\n        await download(res.data.data[0].url, songName);\n        that.$message.success(\"可以开始下载了\");\n      });\n    },\n    //进入歌手页面\n    goSingerDetail(id) {\n      // let routerInfo = {\n      //   name: \"singerDetail\",\n      //   params: {\n      //     id: id,\n      //   },\n      // };\n      // this.$router.push({\n      //   name: \"emptyPage\",\n      //   params: routerInfo,\n      // });\n      this.$router.push({\n        name: \"singerDetail\",\n        params: { id: id },\n      });\n    },\n    // 进入mv详情页面\n    playMV(mvId) {\n      //获取mv播放链接\n      this.$router.push({\n        name: \"mvPlay\",\n        params: { mvId: mvId },\n      });\n    },\n    //根据主题更换播放器颜色\n    // randomColor() {\n    //   return `#${((Math.random() * 0xffffff) << 0).toString(16)}`\n    // },\n  },\n};\n</script>\n\n<style lang=\"less\" scoped>\n.descript {\n  display: flex;\n  justify-content: space-between;\n  color: aliceblue;\n  font-weight: bolder;\n  padding: 10px 20px;\n  border-radius: 20px 20px 0 0;\n  background: rgba(221, 239, 243, 0.05);\n  box-sizing: border-box;\n}\n\n.list-wrap {\n  margin: 10px auto 0;\n  padding: 0 20px 10px;\n  width: 1120px;\n  height: 730px;\n  border-radius: 20px;\n  background: rgba(221, 239, 243, 0.05);\n  box-sizing: border-box;\n\n  ul {\n    height: 630px;\n    border-radius: 0 0 10px 10px;\n    background: rgba(221, 239, 243, 0.05);\n    overflow-x: hidden;\n\n    &::-webkit-scrollbar {\n      display: none;\n    }\n\n    .details {\n      display: flex;\n      justify-content: space-between;\n      margin: 0 auto;\n      padding: 10px;\n      width: 98%;\n      height: 200px;\n      // border: 1px solid rgb(97, 226, 183);\n      border-radius: 10px;\n      // background: rgba(109, 109, 109, 0);\n      box-sizing: border-box;\n\n      .details-img {\n        display: inline-block;\n        // width: 180px;\n        // height: 180px;\n        border-radius: 10px;\n\n        img {\n          width: 180px;\n          height: 180px;\n          border-radius: 10px;\n          transition: 0.2s;\n\n          &:hover {\n            transform: scale(1.03);\n          }\n        }\n      }\n\n      .detailsRight {\n        width: 820px;\n        height: 180px;\n        // background: rgb(181, 209, 152);\n\n        .option {\n          display: inline-block;\n\n          margin-left: 50px;\n\n          .flexBetween {\n            .inline-block {\n              display: inline-block;\n              transition: 0.2s;\n\n              &:hover {\n                cursor: pointer;\n                color: rgb(246, 255, 119);\n              }\n            }\n          }\n        }\n\n        .songTns {\n          margin: 10px 0 10px 0;\n          width: 100%;\n          max-height: 75px;\n          font-size: 14px;\n          overflow-x: hidden;\n\n          &::-webkit-scrollbar {\n            display: none;\n          }\n        }\n\n        .playListNickName {\n          display: inline-block;\n          margin-bottom: 10px;\n          color: antiquewhite;\n          transition: 0.2s;\n\n          &:hover {\n            cursor: pointer;\n            color: #d6a897;\n          }\n        }\n      }\n    }\n\n    .music-list {\n      display: flex;\n      padding: 10px 10px;\n      width: 1080px;\n      overflow: hidden;\n      color: rgba(255, 255, 255, 1);\n      font-weight: bolder;\n      -o-text-overflow: ellipsis;\n      text-overflow: ellipsis;\n      background: rgba(221, 239, 243, 0.11);\n      transition: 0.2s;\n\n      .music-list-span {\n        display: inline-block;\n        width: 270px;\n        text-align: center;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n      }\n\n      .option {\n        display: inline-block;\n        width: 250px;\n        text-align: center;\n\n        span {\n          display: inline-block;\n          width: 30px;\n\n          &:hover {\n            cursor: pointer;\n          }\n        }\n      }\n\n      &:hover {\n        background: rgba(76, 152, 155, 0.527);\n      }\n    }\n  }\n}\n\n.pagination {\n  text-align: center;\n  background: none !important;\n}\n\n/deep/ .el-pager {\n  height: 30px !important;\n  background: none !important;\n}\n\n/deep/ .number,\n/deep/ .btn-prev,\n/deep/ .btn-quicknext,\n/deep/ .btn-next,\n/deep/ .el-input__inner,\n/deep/ .more {\n  color: #f2fff7 !important;\n  background: transparent !important;\n}\n\n/deep/ .number:hover,\n/deep/ .btn-prev:hover,\n/deep/ .btn-quicknext:hover,\n/deep/ .btn-next:hover,\n/deep/ .el-input__inner:hover,\n/deep/ .more:hover {\n  color: #f7a588 !important;\n}\n\n/deep/ .active {\n  color: #f7a588 !important;\n}\n\n/deep/ .el-input__inner {\n  border: none;\n}\n\n/deep/ .el-pagination__jump {\n  color: #f7dd88 !important;\n}\n\n/deep/ .el-pagination {\n  height: 30px !important;\n}\n\n.iconhover {\n  transition: 0.2s;\n\n  &:hover {\n    color: rgb(247, 243, 45);\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}