{"ast":null,"code":"import _createForOfIteratorHelper from \"D:/Desktop/git/cloudMusic-Source-Code/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getAlbumContent as _getAlbumContent, getDownloadUrl } from '@/api/api';\nimport { transMusicTime, download } from '@/utils/commonApi';\nimport songlist from '@/components/songlist.vue';\nexport default {\n  components: {\n    songlist: songlist\n  },\n  data: function data() {\n    return {\n      listen: [],\n      albumId: '',\n      albumSongs: [],\n      albumDesc: {\n        artist: {}\n      }\n    };\n  },\n  mounted: function mounted() {\n    //缓存id,解决params数据在刷新页面后丢失，导致无法获取到歌单id\n    if (this.$route.params.albumId) {\n      localStorage.setItem('albumId', this.$route.params.albumId);\n    } // 判断是否使用缓存\n\n\n    this.$route.params.albumId ? this.albumId = this.$route.params.albumId : this.albumId = localStorage.getItem('albumId');\n    this.getAlbumContent();\n  },\n  methods: {\n    getAlbumContent: function getAlbumContent() {\n      var that = this;\n      var params = {\n        id: that.albumId\n      };\n\n      _getAlbumContent(params).then(function (res) {\n        console.log(\"专辑信息---：\", res.data.album); // console.log(\"专辑歌曲---：\", res.data.songs);\n\n        that.albumDesc = res.data.album;\n        that.albumSongs = res.data.songs; //给每个列表添加一个防抖\n\n        var _iterator = _createForOfIteratorHelper(that.albumSongs),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var item = _step.value;\n            that.$set(item, 'timer', true);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n\n        var dt = 'dt';\n        transMusicTime(that.albumSongs, dt);\n      });\n    } //根据主题更换播放器颜色\n    // randomColor() {\n    //   return `#${((Math.random() * 0xffffff) << 0).toString(16)}`\n    // },\n\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkEA;AACA;AACA;AAEA;AACAA;AACAC;AADA,GADA;AAIAC,MAJA,kBAIA;AACA;AACAC,gBADA;AAEAC,iBAFA;AAGAC,oBAHA;AAIAC;AACAC;AADA;AAJA;AAQA,GAbA;AAcAC,SAdA,qBAcA;AACA;AACA;AACAC;AACA,KAJA,CAKA;;;AACA,iCACA,yCADA,GAEA,8CAFA;AAGA;AACA,GAxBA;AAyBAC;AACAC,mBADA,6BACA;AACA;AACA;AACAC;AADA;;AAGAD;AACAE,gDADA,CAEA;;AACAC;AACAA,yCAJA,CAKA;;AALA,mDAMAA,eANA;AAAA;;AAAA;AAMA;AAAA;AACAA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;;AASA;AACAC;AACA,OAXA;AAYA,KAlBA,CAqBA;AACA;AACA;AACA;;AAxBA;AAzBA","names":["components","songlist","data","listen","albumId","albumSongs","albumDesc","artist","mounted","localStorage","methods","getAlbumContent","id","console","that","transMusicTime"],"sourceRoot":"src/views/albumDetail","sources":["albumDetail.vue"],"sourcesContent":["<template>\r\n  <div class=\"list-wrap\">\r\n    <h3>专辑详情</h3>\r\n    <div class=\"descript\"></div>\r\n    <div>\r\n      <div class=\"ul\">\r\n        <div class=\"details\">\r\n          <div class=\"details-img\">\r\n            <img :src=\"albumDesc.blurPicUrl\"\r\n                 alt=\"\" />\r\n          </div>\r\n          <div class=\"detailsRight\">\r\n            <h3 style=\"margin-left: 0px; text-align: left; font-size: 20px\">\r\n              {{ albumDesc.name }}\r\n            </h3>\r\n            <div style=\"font-size: 14px\">\r\n              <div class=\"aliasClass\">\r\n                <img class=\"artistPic\"\r\n                     :src=\"albumDesc.artist.img1v1Url\"\r\n                     alt=\"\" />-\r\n                <span class=\"playListNickName\">{{\r\n                  albumDesc.artist.name\r\n                }}</span>\r\n              </div>\r\n\r\n              <!-- <div class=\"option\">\r\n                <div class=\"flexBetween\">\r\n                  <span\r\n                    class=\"inline-block\"\r\n                    @click=\"getSingerSongList('songSwitch')\"\r\n                    >收藏：<span class=\"musicSize\">{{\r\n                      albumDesc.musicSize\r\n                    }}</span></span\r\n                  >\r\n                  <span class=\"inline-block\"\r\n                    >专辑：<span class=\"musicSize\">{{\r\n                      albumDesc.albumSize\r\n                    }}</span>\r\n                  </span>\r\n                  <span\r\n                    class=\"inline-block\"\r\n                    @click=\"getSingerMvList('mvSwitch')\"\r\n                    >MV：<span class=\"musicSize\">{{ albumDesc.mvSize }}</span>\r\n                  </span>\r\n                </div>\r\n              </div> -->\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div id=\"singleSongs\">\r\n          <h3>专辑歌曲：{{ albumSongs.length }}首</h3>\r\n          <songlist :songlist=\"albumSongs\"></songlist>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div v-show=\"false\">\r\n      <aplayer :autoplay=\"true\"\r\n               :fixed=\"true\"\r\n               :audio=\"listen\"\r\n               :liric-type=\"1\">\r\n      </aplayer>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getAlbumContent, getDownloadUrl } from '@/api/api'\r\nimport { transMusicTime, download } from '@/utils/commonApi'\r\nimport songlist from '@/components/songlist.vue'\r\n\r\nexport default {\r\n  components:{\r\n    songlist\r\n  },\r\n  data() {\r\n    return {\r\n      listen: [],\r\n      albumId: '',\r\n      albumSongs: [],\r\n      albumDesc: {\r\n        artist:{}\r\n      },\r\n    }\r\n  },\r\n  mounted() {\r\n    //缓存id,解决params数据在刷新页面后丢失，导致无法获取到歌单id\r\n    if (this.$route.params.albumId) {\r\n      localStorage.setItem('albumId', this.$route.params.albumId)\r\n    }\r\n    // 判断是否使用缓存\r\n    this.$route.params.albumId\r\n      ? (this.albumId = this.$route.params.albumId)\r\n      : (this.albumId = localStorage.getItem('albumId'))\r\n    this.getAlbumContent()\r\n  },\r\n  methods: {\r\n    getAlbumContent() {\r\n      var that = this\r\n      let params = {\r\n        id: that.albumId,\r\n      }\r\n      getAlbumContent(params).then((res) => {\r\n        console.log(\"专辑信息---：\", res.data.album);\r\n        // console.log(\"专辑歌曲---：\", res.data.songs);\r\n        that.albumDesc = res.data.album\r\n        that.albumSongs = res.data.songs\r\n        //给每个列表添加一个防抖\r\n        for (let item of that.albumSongs) {\r\n          that.$set(item, 'timer', true)\r\n        }\r\n        let dt = 'dt'\r\n        transMusicTime(that.albumSongs, dt)\r\n      })\r\n    },\r\n\r\n   \r\n    //根据主题更换播放器颜色\r\n    // randomColor() {\r\n    //   return `#${((Math.random() * 0xffffff) << 0).toString(16)}`\r\n    // },\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\nh3 {\r\n  height: 30px;\r\n  line-height: 30px;\r\n  text-align: center;\r\n}\r\n.descript {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  color: aliceblue;\r\n  font-weight: bolder;\r\n  padding: 10px 20px;\r\n  border-radius: 20px 20px 0 0;\r\n  background: rgba(221, 239, 243, 0.05);\r\n  box-sizing: border-box;\r\n}\r\n.list-wrap {\r\n  margin: 10px auto 0;\r\n  padding: 0 20px 10px;\r\n  width: 1120px;\r\n  border-radius: 20px;\r\n  background: rgba(221, 239, 243, 0.05);\r\n  box-sizing: border-box;\r\n\r\n  .ul {\r\n    height: 630px;\r\n    border-radius: 0 0 10px 10px;\r\n    background: rgba(221, 239, 243, 0.05);\r\n    overflow-x: hidden;\r\n\r\n    &::-webkit-scrollbar {\r\n      display: none;\r\n    }\r\n    .details {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      margin: 0 auto 10px;\r\n      padding: 10px;\r\n      width: 96%;\r\n      height: 170px;\r\n      // border: 1px solid rgb(97, 226, 183);\r\n      border-radius: 10px;\r\n      background: rgba(221, 239, 243, 0.05);\r\n      box-sizing: border-box;\r\n\r\n      .details-img {\r\n        display: inline-block;\r\n        // width: 180px;\r\n        // height: 180px;\r\n        border-radius: 10px;\r\n\r\n        img {\r\n          width: 150px;\r\n          height: 150px;\r\n          border-radius: 10px;\r\n          transition: 0.2s;\r\n\r\n          &:hover {\r\n            transform: scale(1.03);\r\n          }\r\n        }\r\n      }\r\n\r\n      .detailsRight {\r\n        position: relative;\r\n        width: 820px;\r\n        height: 150px;\r\n        // background: rgb(181, 209, 152);\r\n\r\n        .option {\r\n          position: absolute;\r\n          bottom: 0;\r\n\r\n          .flexBetween {\r\n            .inline-block {\r\n              display: inline-block;\r\n              margin-right: 40px;\r\n              transition: 0.2s;\r\n              .musicSize {\r\n                color: rgb(193, 243, 226);\r\n                transition: 0.2s;\r\n                &:hover {\r\n                  color: rgb(109, 247, 201);\r\n                }\r\n              }\r\n\r\n              &:hover {\r\n                cursor: pointer;\r\n                // color: rgb(246, 255, 119);\r\n              }\r\n            }\r\n          }\r\n        }\r\n        .songTns {\r\n          width: 100%;\r\n          font-size: 14px;\r\n          overflow-x: hidden;\r\n\r\n          &::-webkit-scrollbar {\r\n            display: none;\r\n          }\r\n        }\r\n        .aliasClass {\r\n          position: absolute;\r\n          top: 69px;\r\n        }\r\n        .artistPic {\r\n          margin-right: 10px;\r\n          width: 30px;\r\n          height: 30px;\r\n          border-radius: 15px;\r\n        }\r\n        .playListNickName {\r\n          display: inline-block;\r\n          margin-right: 20px;\r\n        }\r\n\r\n        .musicSize {\r\n          color: rgb(170, 240, 240);\r\n        }\r\n      }\r\n    }\r\n    #singleSongs {\r\n      margin: 0 auto;\r\n      padding: 0px 10px 20px;\r\n      width: 96%;\r\n      height: 420px;\r\n      border-radius: 10px;\r\n      background: rgba(95, 158, 160, 0.05);\r\n      box-sizing: border-box;\r\n      overflow-x: hidden;\r\n\r\n      &::-webkit-scrollbar {\r\n        display: none;\r\n      }\r\n\r\n      .SingsList {\r\n        position: relative;\r\n        display: flex;\r\n        justify-content: space-between;\r\n        margin: 5px auto;\r\n        width: 100%;\r\n        height: 30px;\r\n        line-height: 30px;\r\n        padding: 0 10px;\r\n        background-color: rgba(99, 187, 162, 0.144);\r\n        border-radius: 15px;\r\n        box-sizing: border-box;\r\n        line-height: 30px;\r\n        transition: 0.2s;\r\n\r\n        .song-list {\r\n          display: inline-block;\r\n\r\n          text-align: center;\r\n          overflow: hidden;\r\n          text-overflow: ellipsis;\r\n          white-space: nowrap;\r\n        }\r\n\r\n        .song-list-option {\r\n          position: absolute;\r\n          width: 130px;\r\n          right: 10px;\r\n\r\n          span {\r\n            display: inline-block;\r\n            margin: 0 5px;\r\n            transition: 0.2s;\r\n\r\n            &:hover {\r\n              color: bisque;\r\n              cursor: pointer;\r\n            }\r\n          }\r\n        }\r\n\r\n        &:hover {\r\n          color: aqua;\r\n          transform: scale(1.01);\r\n        }\r\n      }\r\n    }\r\n\r\n    .music-list {\r\n      display: flex;\r\n      padding: 10px 10px;\r\n      width: 1080px;\r\n      overflow: hidden;\r\n      color: rgba(255, 255, 255, 1);\r\n      font-weight: bolder;\r\n      -o-text-overflow: ellipsis;\r\n      text-overflow: ellipsis;\r\n      // background: rgba(95, 158, 160, 0.322);\r\n      transition: 0.2s;\r\n\r\n      .music-list-span {\r\n        display: inline-block;\r\n        width: 270px;\r\n        text-align: center;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n        white-space: nowrap;\r\n      }\r\n      .option {\r\n        display: inline-block;\r\n        width: 250px;\r\n        text-align: center;\r\n\r\n        span {\r\n          display: inline-block;\r\n          width: 30px;\r\n          &:hover {\r\n            cursor: pointer;\r\n          }\r\n        }\r\n      }\r\n      &:hover {\r\n        background: rgba(76, 152, 155, 0.527);\r\n      }\r\n    }\r\n  }\r\n}\r\n.pagination {\r\n  text-align: center;\r\n  background: none !important;\r\n\r\n  /deep/ .el-pager {\r\n    height: 30px !important;\r\n    background: none !important;\r\n  }\r\n  /deep/ .number,\r\n  /deep/ .btn-prev,\r\n  /deep/ .btn-quicknext,\r\n  /deep/ .btn-next,\r\n  /deep/ .el-input__inner,\r\n  /deep/ .more {\r\n    color: #f2fff7 !important;\r\n    background: transparent !important;\r\n  }\r\n  /deep/ .number:hover,\r\n  /deep/ .btn-prev:hover,\r\n  /deep/ .btn-quicknext:hover,\r\n  /deep/ .btn-next:hover,\r\n  /deep/ .el-input__inner:hover,\r\n  /deep/ .more:hover {\r\n    color: #f7a588 !important;\r\n  }\r\n  /deep/ .active {\r\n    color: #f7a588 !important;\r\n  }\r\n  /deep/ .el-input__inner {\r\n    border: none;\r\n  }\r\n  /deep/ .el-pagination__jump {\r\n    color: #f7dd88 !important;\r\n  }\r\n  .iconhover {\r\n    transition: 0.2s;\r\n    &:hover {\r\n      color: rgb(247, 243, 45);\r\n    }\r\n  }\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}